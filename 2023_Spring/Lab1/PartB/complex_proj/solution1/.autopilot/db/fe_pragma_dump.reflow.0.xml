<pragmas>
<pragma file="complex_matmul.cpp" line="94" pragmaType="pipeline" parentfunction="complex_matmul" off="0" ii="-1" rewind="0" style=""/>
<pragma file="complex_matmul.cpp" line="18" pragmaType="interface" parentfunction="complex_matmul" mode="m_axi" port="MatA_DRAM" bundle="mem" offset="slave" name="" depth="2" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1"/>
<pragma file="complex_matmul.cpp" line="19" pragmaType="interface" parentfunction="complex_matmul" mode="m_axi" port="MatB_DRAM" bundle="mem" offset="slave" name="" depth="2" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1"/>
<pragma file="complex_matmul.cpp" line="20" pragmaType="interface" parentfunction="complex_matmul" mode="m_axi" port="MatC_DRAM" bundle="mem" offset="slave" name="" depth="2" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1"/>
<pragma file="complex_matmul.cpp" line="31" pragmaType="interface" parentfunction="complex_matmul" mode="s_axilite" port="" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="complex_matmul.cpp" line="33" pragmaType="array_partition" parentfunction="complex_matmul" dim="1" factor="20" mode="cyclic" dynamic="0" variable=""/>
<pragma file="complex_matmul.cpp" line="34" pragmaType="array_partition" parentfunction="complex_matmul" dim="1" factor="20" mode="cyclic" dynamic="0" variable=""/>
<pragma file="complex_matmul.cpp" line="35" pragmaType="array_partition" parentfunction="complex_matmul" dim="1" factor="20" mode="cyclic" dynamic="0" variable=""/>
<pragma file="complex_matmul.cpp" line="37" pragmaType="array_partition" parentfunction="complex_matmul" dim="1" factor="20" mode="cyclic" dynamic="0" variable=""/>
<pragma file="complex_matmul.cpp" line="38" pragmaType="array_partition" parentfunction="complex_matmul" dim="1" factor="20" mode="cyclic" dynamic="0" variable=""/>
<pragma file="complex_matmul.cpp" line="39" pragmaType="array_partition" parentfunction="complex_matmul" dim="1" factor="20" mode="cyclic" dynamic="0" variable=""/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int.h" line="67" pragmaType="inline" parentfunction="ap_int<16>::ap_int()" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int.h" line="179" pragmaType="inline" parentfunction="ap_int<16>::ap_int(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="1540" pragmaType="inline" parentfunction="ap_int_base<16, true>::RType<16, true>::mult operator*<16, true, 16, true>(ap_int_base<16, true> const&, ap_int_base<16, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="231" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="260" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int.h" line="145" pragmaType="inline" parentfunction="ap_int<32>::ap_int<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_common.h" line="559" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="260" pragmaType="inline" parentfunction="ap_int_base<16, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_common.h" line="559" pragmaType="inline" parentfunction="ssdm_int<16, true>::ssdm_int(short)" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="221" pragmaType="inline" parentfunction="ap_int_base<16, true>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="0" pragmaType="inline" parentfunction="ap_int_base<16, true>& ap_int_base<16, true>::operator-=<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_common.h" line="0" pragmaType="inline" parentfunction="ssdm_int<16, true>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="/tools/software/xilinx/Vitis_HLS/2022.1/common/technology/autopilot/ap_int_base.h" line="0" pragmaType="inline" parentfunction="ap_int_base<16, true>& ap_int_base<16, true>::operator+=<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
</pragmas>
