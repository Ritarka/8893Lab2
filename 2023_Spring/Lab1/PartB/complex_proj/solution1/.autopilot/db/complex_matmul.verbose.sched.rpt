

================================================================
== Vitis HLS Report for 'complex_matmul'
================================================================
* Date:           Sat Mar 11 12:57:23 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        complex_proj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   285138|   285138|  2.851 ms|  2.851 ms|  285139|  285139|       no|
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 15
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 16 [1/1] (1.00ns)   --->   "%MatC_DRAM_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %MatC_DRAM"   --->   Operation 16 'read' 'MatC_DRAM_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 17 [1/1] (1.00ns)   --->   "%MatB_DRAM_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %MatB_DRAM"   --->   Operation 17 'read' 'MatB_DRAM_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 18 [1/1] (1.00ns)   --->   "%MatA_DRAM_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %MatA_DRAM"   --->   Operation 18 'read' 'MatA_DRAM_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%MatA_V = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 19 'alloca' 'MatA_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%MatA_V_1 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 20 'alloca' 'MatA_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%MatA_V_2 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 21 'alloca' 'MatA_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%MatA_V_3 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 22 'alloca' 'MatA_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%MatA_V_4 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 23 'alloca' 'MatA_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%MatA_V_5 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 24 'alloca' 'MatA_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%MatA_V_6 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 25 'alloca' 'MatA_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%MatA_V_7 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 26 'alloca' 'MatA_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%MatA_V_8 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 27 'alloca' 'MatA_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%MatA_V_9 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 28 'alloca' 'MatA_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%MatA_V_10 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 29 'alloca' 'MatA_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%MatA_V_11 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 30 'alloca' 'MatA_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%MatA_V_12 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 31 'alloca' 'MatA_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%MatA_V_13 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 32 'alloca' 'MatA_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%MatA_V_14 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 33 'alloca' 'MatA_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%MatA_V_15 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 34 'alloca' 'MatA_V_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%MatA_V_16 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 35 'alloca' 'MatA_V_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%MatA_V_17 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 36 'alloca' 'MatA_V_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%MatA_V_18 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 37 'alloca' 'MatA_V_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%MatA_V_19 = alloca i64 1" [complex_matmul.cpp:22]   --->   Operation 38 'alloca' 'MatA_V_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%MatB_V = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 39 'alloca' 'MatB_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%MatB_V_1 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 40 'alloca' 'MatB_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%MatB_V_2 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 41 'alloca' 'MatB_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%MatB_V_3 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 42 'alloca' 'MatB_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%MatB_V_4 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 43 'alloca' 'MatB_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%MatB_V_5 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 44 'alloca' 'MatB_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%MatB_V_6 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 45 'alloca' 'MatB_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%MatB_V_7 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 46 'alloca' 'MatB_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%MatB_V_8 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 47 'alloca' 'MatB_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%MatB_V_9 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 48 'alloca' 'MatB_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%MatB_V_10 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 49 'alloca' 'MatB_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%MatB_V_11 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 50 'alloca' 'MatB_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%MatB_V_12 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 51 'alloca' 'MatB_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%MatB_V_13 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 52 'alloca' 'MatB_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%MatB_V_14 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 53 'alloca' 'MatB_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%MatB_V_15 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 54 'alloca' 'MatB_V_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%MatB_V_16 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 55 'alloca' 'MatB_V_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%MatB_V_17 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 56 'alloca' 'MatB_V_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%MatB_V_18 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 57 'alloca' 'MatB_V_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%MatB_V_19 = alloca i64 1" [complex_matmul.cpp:23]   --->   Operation 58 'alloca' 'MatB_V_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%MatC_V = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 59 'alloca' 'MatC_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%MatC_V_1 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 60 'alloca' 'MatC_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%MatC_V_2 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 61 'alloca' 'MatC_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%MatC_V_3 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 62 'alloca' 'MatC_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%MatC_V_4 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 63 'alloca' 'MatC_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%MatC_V_5 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 64 'alloca' 'MatC_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%MatC_V_6 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 65 'alloca' 'MatC_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%MatC_V_7 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 66 'alloca' 'MatC_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%MatC_V_8 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 67 'alloca' 'MatC_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%MatC_V_9 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 68 'alloca' 'MatC_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%MatC_V_10 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 69 'alloca' 'MatC_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%MatC_V_11 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 70 'alloca' 'MatC_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%MatC_V_12 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 71 'alloca' 'MatC_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%MatC_V_13 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 72 'alloca' 'MatC_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%MatC_V_14 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 73 'alloca' 'MatC_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%MatC_V_15 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 74 'alloca' 'MatC_V_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%MatC_V_16 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 75 'alloca' 'MatC_V_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%MatC_V_17 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 76 'alloca' 'MatC_V_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%MatC_V_18 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 77 'alloca' 'MatC_V_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%MatC_V_19 = alloca i64 1" [complex_matmul.cpp:24]   --->   Operation 78 'alloca' 'MatC_V_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%cMatA_V = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 79 'alloca' 'cMatA_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%cMatA_V_1 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 80 'alloca' 'cMatA_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%cMatA_V_2 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 81 'alloca' 'cMatA_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%cMatA_V_3 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 82 'alloca' 'cMatA_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%cMatA_V_4 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 83 'alloca' 'cMatA_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%cMatA_V_5 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 84 'alloca' 'cMatA_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%cMatA_V_6 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 85 'alloca' 'cMatA_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%cMatA_V_7 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 86 'alloca' 'cMatA_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%cMatA_V_8 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 87 'alloca' 'cMatA_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%cMatA_V_9 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 88 'alloca' 'cMatA_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%cMatA_V_10 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 89 'alloca' 'cMatA_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%cMatA_V_11 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 90 'alloca' 'cMatA_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%cMatA_V_12 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 91 'alloca' 'cMatA_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%cMatA_V_13 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 92 'alloca' 'cMatA_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%cMatA_V_14 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 93 'alloca' 'cMatA_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%cMatA_V_15 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 94 'alloca' 'cMatA_V_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%cMatA_V_16 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 95 'alloca' 'cMatA_V_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%cMatA_V_17 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 96 'alloca' 'cMatA_V_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%cMatA_V_18 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 97 'alloca' 'cMatA_V_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%cMatA_V_19 = alloca i64 1" [complex_matmul.cpp:26]   --->   Operation 98 'alloca' 'cMatA_V_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%cMatB_V = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 99 'alloca' 'cMatB_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%cMatB_V_1 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 100 'alloca' 'cMatB_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%cMatB_V_2 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 101 'alloca' 'cMatB_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%cMatB_V_3 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 102 'alloca' 'cMatB_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "%cMatB_V_4 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 103 'alloca' 'cMatB_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "%cMatB_V_5 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 104 'alloca' 'cMatB_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.00ns)   --->   "%cMatB_V_6 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 105 'alloca' 'cMatB_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%cMatB_V_7 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 106 'alloca' 'cMatB_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%cMatB_V_8 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 107 'alloca' 'cMatB_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "%cMatB_V_9 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 108 'alloca' 'cMatB_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%cMatB_V_10 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 109 'alloca' 'cMatB_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%cMatB_V_11 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 110 'alloca' 'cMatB_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%cMatB_V_12 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 111 'alloca' 'cMatB_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%cMatB_V_13 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 112 'alloca' 'cMatB_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%cMatB_V_14 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 113 'alloca' 'cMatB_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%cMatB_V_15 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 114 'alloca' 'cMatB_V_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (0.00ns)   --->   "%cMatB_V_16 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 115 'alloca' 'cMatB_V_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 116 [1/1] (0.00ns)   --->   "%cMatB_V_17 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 116 'alloca' 'cMatB_V_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.00ns)   --->   "%cMatB_V_18 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 117 'alloca' 'cMatB_V_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 118 [1/1] (0.00ns)   --->   "%cMatB_V_19 = alloca i64 1" [complex_matmul.cpp:27]   --->   Operation 118 'alloca' 'cMatB_V_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%cMatC_V = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 119 'alloca' 'cMatC_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%cMatC_V_1 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 120 'alloca' 'cMatC_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (0.00ns)   --->   "%cMatC_V_2 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 121 'alloca' 'cMatC_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 122 [1/1] (0.00ns)   --->   "%cMatC_V_3 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 122 'alloca' 'cMatC_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.00ns)   --->   "%cMatC_V_4 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 123 'alloca' 'cMatC_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 124 [1/1] (0.00ns)   --->   "%cMatC_V_5 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 124 'alloca' 'cMatC_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 125 [1/1] (0.00ns)   --->   "%cMatC_V_6 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 125 'alloca' 'cMatC_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 126 [1/1] (0.00ns)   --->   "%cMatC_V_7 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 126 'alloca' 'cMatC_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 127 [1/1] (0.00ns)   --->   "%cMatC_V_8 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 127 'alloca' 'cMatC_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 128 [1/1] (0.00ns)   --->   "%cMatC_V_9 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 128 'alloca' 'cMatC_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 129 [1/1] (0.00ns)   --->   "%cMatC_V_10 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 129 'alloca' 'cMatC_V_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 130 [1/1] (0.00ns)   --->   "%cMatC_V_11 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 130 'alloca' 'cMatC_V_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 131 [1/1] (0.00ns)   --->   "%cMatC_V_12 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 131 'alloca' 'cMatC_V_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 132 [1/1] (0.00ns)   --->   "%cMatC_V_13 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 132 'alloca' 'cMatC_V_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 133 [1/1] (0.00ns)   --->   "%cMatC_V_14 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 133 'alloca' 'cMatC_V_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 134 [1/1] (0.00ns)   --->   "%cMatC_V_15 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 134 'alloca' 'cMatC_V_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 135 [1/1] (0.00ns)   --->   "%cMatC_V_16 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 135 'alloca' 'cMatC_V_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.00ns)   --->   "%cMatC_V_17 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 136 'alloca' 'cMatC_V_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 137 [1/1] (0.00ns)   --->   "%cMatC_V_18 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 137 'alloca' 'cMatC_V_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 138 [1/1] (0.00ns)   --->   "%cMatC_V_19 = alloca i64 1" [complex_matmul.cpp:28]   --->   Operation 138 'alloca' 'cMatC_V_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 139 [1/1] (0.00ns)   --->   "%trunc_ln43 = trunc i64 %MatA_DRAM_read" [complex_matmul.cpp:43]   --->   Operation 139 'trunc' 'trunc_ln43' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 140 [1/1] (0.00ns)   --->   "%trunc_ln46_2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %MatA_DRAM_read, i32 2, i32 63" [complex_matmul.cpp:46]   --->   Operation 140 'partselect' 'trunc_ln46_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 141 [1/1] (0.00ns)   --->   "%trunc_ln61 = trunc i64 %MatB_DRAM_read" [complex_matmul.cpp:61]   --->   Operation 141 'trunc' 'trunc_ln61' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 142 [1/1] (0.00ns)   --->   "%trunc_ln64_2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %MatB_DRAM_read, i32 2, i32 63" [complex_matmul.cpp:64]   --->   Operation 142 'partselect' 'trunc_ln64_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 143 [1/1] (0.00ns)   --->   "%trunc_ln113 = trunc i64 %MatC_DRAM_read" [complex_matmul.cpp:113]   --->   Operation 143 'trunc' 'trunc_ln113' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 144 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %trunc_ln43, i3 0" [complex_matmul.cpp:46]   --->   Operation 144 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 145 [2/2] (7.30ns)   --->   "%call_ln46 = call void @complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS, i32 %mem, i62 %trunc_ln46_2, i16 %MatA_V, i16 %MatA_V_1, i16 %MatA_V_2, i16 %MatA_V_3, i16 %MatA_V_4, i16 %MatA_V_5, i16 %MatA_V_6, i16 %MatA_V_7, i16 %MatA_V_8, i16 %MatA_V_9, i16 %MatA_V_10, i16 %MatA_V_11, i16 %MatA_V_12, i16 %MatA_V_13, i16 %MatA_V_14, i16 %MatA_V_15, i16 %MatA_V_16, i16 %MatA_V_17, i16 %MatA_V_18, i16 %MatA_V_19, i64 %MatA_DRAM_read, i5 %shl_ln" [complex_matmul.cpp:46]   --->   Operation 145 'call' 'call_ln46' <Predicate = true> <Delay = 7.30> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 146 [2/2] (0.00ns)   --->   "%call_ln0 = call void @complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT, i16 %MatC_V, i16 %MatC_V_1, i16 %MatC_V_2, i16 %MatC_V_3, i16 %MatC_V_4, i16 %MatC_V_5, i16 %MatC_V_6, i16 %MatC_V_7, i16 %MatC_V_8, i16 %MatC_V_9, i16 %MatC_V_10, i16 %MatC_V_11, i16 %MatC_V_12, i16 %MatC_V_13, i16 %MatC_V_14, i16 %MatC_V_15, i16 %MatC_V_16, i16 %MatC_V_17, i16 %MatC_V_18, i16 %MatC_V_19, i16 %cMatC_V, i16 %cMatC_V_1, i16 %cMatC_V_2, i16 %cMatC_V_3, i16 %cMatC_V_4, i16 %cMatC_V_5, i16 %cMatC_V_6, i16 %cMatC_V_7, i16 %cMatC_V_8, i16 %cMatC_V_9, i16 %cMatC_V_10, i16 %cMatC_V_11, i16 %cMatC_V_12, i16 %cMatC_V_13, i16 %cMatC_V_14, i16 %cMatC_V_15, i16 %cMatC_V_16, i16 %cMatC_V_17, i16 %cMatC_V_18, i16 %cMatC_V_19"   --->   Operation 146 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 3.52>
ST_3 : Operation 147 [1/2] (0.00ns)   --->   "%call_ln46 = call void @complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS, i32 %mem, i62 %trunc_ln46_2, i16 %MatA_V, i16 %MatA_V_1, i16 %MatA_V_2, i16 %MatA_V_3, i16 %MatA_V_4, i16 %MatA_V_5, i16 %MatA_V_6, i16 %MatA_V_7, i16 %MatA_V_8, i16 %MatA_V_9, i16 %MatA_V_10, i16 %MatA_V_11, i16 %MatA_V_12, i16 %MatA_V_13, i16 %MatA_V_14, i16 %MatA_V_15, i16 %MatA_V_16, i16 %MatA_V_17, i16 %MatA_V_18, i16 %MatA_V_19, i64 %MatA_DRAM_read, i5 %shl_ln" [complex_matmul.cpp:46]   --->   Operation 147 'call' 'call_ln46' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 148 [1/1] (0.97ns)   --->   "%xor_ln52 = xor i2 %trunc_ln43, i2 2" [complex_matmul.cpp:52]   --->   Operation 148 'xor' 'xor_ln52' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 149 [1/1] (3.52ns)   --->   "%add_ln55 = add i64 %MatA_DRAM_read, i64 2" [complex_matmul.cpp:55]   --->   Operation 149 'add' 'add_ln55' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 150 [1/1] (0.00ns)   --->   "%trunc_ln55_2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln55, i32 2, i32 63" [complex_matmul.cpp:55]   --->   Operation 150 'partselect' 'trunc_ln55_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 151 [1/2] (0.00ns)   --->   "%call_ln0 = call void @complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT, i16 %MatC_V, i16 %MatC_V_1, i16 %MatC_V_2, i16 %MatC_V_3, i16 %MatC_V_4, i16 %MatC_V_5, i16 %MatC_V_6, i16 %MatC_V_7, i16 %MatC_V_8, i16 %MatC_V_9, i16 %MatC_V_10, i16 %MatC_V_11, i16 %MatC_V_12, i16 %MatC_V_13, i16 %MatC_V_14, i16 %MatC_V_15, i16 %MatC_V_16, i16 %MatC_V_17, i16 %MatC_V_18, i16 %MatC_V_19, i16 %cMatC_V, i16 %cMatC_V_1, i16 %cMatC_V_2, i16 %cMatC_V_3, i16 %cMatC_V_4, i16 %cMatC_V_5, i16 %cMatC_V_6, i16 %cMatC_V_7, i16 %cMatC_V_8, i16 %cMatC_V_9, i16 %cMatC_V_10, i16 %cMatC_V_11, i16 %cMatC_V_12, i16 %cMatC_V_13, i16 %cMatC_V_14, i16 %cMatC_V_15, i16 %cMatC_V_16, i16 %cMatC_V_17, i16 %cMatC_V_18, i16 %cMatC_V_19"   --->   Operation 151 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 152 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %xor_ln52, i3 0" [complex_matmul.cpp:55]   --->   Operation 152 'bitconcatenate' 'shl_ln1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 153 [2/2] (7.30ns)   --->   "%call_ln55 = call void @complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc, i32 %mem, i62 %trunc_ln55_2, i64 %MatA_DRAM_read, i16 %cMatA_V, i16 %cMatA_V_1, i16 %cMatA_V_2, i16 %cMatA_V_3, i16 %cMatA_V_4, i16 %cMatA_V_5, i16 %cMatA_V_6, i16 %cMatA_V_7, i16 %cMatA_V_8, i16 %cMatA_V_9, i16 %cMatA_V_10, i16 %cMatA_V_11, i16 %cMatA_V_12, i16 %cMatA_V_13, i16 %cMatA_V_14, i16 %cMatA_V_15, i16 %cMatA_V_16, i16 %cMatA_V_17, i16 %cMatA_V_18, i16 %cMatA_V_19, i5 %shl_ln1" [complex_matmul.cpp:55]   --->   Operation 153 'call' 'call_ln55' <Predicate = true> <Delay = 7.30> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 154 [1/2] (0.00ns)   --->   "%call_ln55 = call void @complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc, i32 %mem, i62 %trunc_ln55_2, i64 %MatA_DRAM_read, i16 %cMatA_V, i16 %cMatA_V_1, i16 %cMatA_V_2, i16 %cMatA_V_3, i16 %cMatA_V_4, i16 %cMatA_V_5, i16 %cMatA_V_6, i16 %cMatA_V_7, i16 %cMatA_V_8, i16 %cMatA_V_9, i16 %cMatA_V_10, i16 %cMatA_V_11, i16 %cMatA_V_12, i16 %cMatA_V_13, i16 %cMatA_V_14, i16 %cMatA_V_15, i16 %cMatA_V_16, i16 %cMatA_V_17, i16 %cMatA_V_18, i16 %cMatA_V_19, i5 %shl_ln1" [complex_matmul.cpp:55]   --->   Operation 154 'call' 'call_ln55' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 155 [1/1] (0.00ns)   --->   "%shl_ln2 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %trunc_ln61, i3 0" [complex_matmul.cpp:64]   --->   Operation 155 'bitconcatenate' 'shl_ln2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 156 [2/2] (7.30ns)   --->   "%call_ln64 = call void @complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS, i32 %mem, i62 %trunc_ln64_2, i16 %MatB_V, i16 %MatB_V_1, i16 %MatB_V_2, i16 %MatB_V_3, i16 %MatB_V_4, i16 %MatB_V_5, i16 %MatB_V_6, i16 %MatB_V_7, i16 %MatB_V_8, i16 %MatB_V_9, i16 %MatB_V_10, i16 %MatB_V_11, i16 %MatB_V_12, i16 %MatB_V_13, i16 %MatB_V_14, i16 %MatB_V_15, i16 %MatB_V_16, i16 %MatB_V_17, i16 %MatB_V_18, i16 %MatB_V_19, i64 %MatB_DRAM_read, i5 %shl_ln2" [complex_matmul.cpp:64]   --->   Operation 156 'call' 'call_ln64' <Predicate = true> <Delay = 7.30> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 3.52>
ST_7 : Operation 157 [1/2] (0.00ns)   --->   "%call_ln64 = call void @complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS, i32 %mem, i62 %trunc_ln64_2, i16 %MatB_V, i16 %MatB_V_1, i16 %MatB_V_2, i16 %MatB_V_3, i16 %MatB_V_4, i16 %MatB_V_5, i16 %MatB_V_6, i16 %MatB_V_7, i16 %MatB_V_8, i16 %MatB_V_9, i16 %MatB_V_10, i16 %MatB_V_11, i16 %MatB_V_12, i16 %MatB_V_13, i16 %MatB_V_14, i16 %MatB_V_15, i16 %MatB_V_16, i16 %MatB_V_17, i16 %MatB_V_18, i16 %MatB_V_19, i64 %MatB_DRAM_read, i5 %shl_ln2" [complex_matmul.cpp:64]   --->   Operation 157 'call' 'call_ln64' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 158 [1/1] (0.97ns)   --->   "%xor_ln69 = xor i2 %trunc_ln61, i2 2" [complex_matmul.cpp:69]   --->   Operation 158 'xor' 'xor_ln69' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 159 [1/1] (3.52ns)   --->   "%add_ln72 = add i64 %MatB_DRAM_read, i64 2" [complex_matmul.cpp:72]   --->   Operation 159 'add' 'add_ln72' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 160 [1/1] (0.00ns)   --->   "%trunc_ln72_2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln72, i32 2, i32 63" [complex_matmul.cpp:72]   --->   Operation 160 'partselect' 'trunc_ln72_2' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 161 [1/1] (0.00ns)   --->   "%shl_ln3 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %xor_ln69, i3 0" [complex_matmul.cpp:72]   --->   Operation 161 'bitconcatenate' 'shl_ln3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 162 [2/2] (7.30ns)   --->   "%call_ln72 = call void @complex_matmul_Pipeline_MAT_B_ROWSc_MAT_B_COLSc, i32 %mem, i62 %trunc_ln72_2, i64 %MatB_DRAM_read, i16 %cMatB_V, i16 %cMatB_V_1, i16 %cMatB_V_2, i16 %cMatB_V_3, i16 %cMatB_V_4, i16 %cMatB_V_5, i16 %cMatB_V_6, i16 %cMatB_V_7, i16 %cMatB_V_8, i16 %cMatB_V_9, i16 %cMatB_V_10, i16 %cMatB_V_11, i16 %cMatB_V_12, i16 %cMatB_V_13, i16 %cMatB_V_14, i16 %cMatB_V_15, i16 %cMatB_V_16, i16 %cMatB_V_17, i16 %cMatB_V_18, i16 %cMatB_V_19, i5 %shl_ln3" [complex_matmul.cpp:72]   --->   Operation 162 'call' 'call_ln72' <Predicate = true> <Delay = 7.30> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 0.00>
ST_9 : Operation 163 [1/2] (0.00ns)   --->   "%call_ln72 = call void @complex_matmul_Pipeline_MAT_B_ROWSc_MAT_B_COLSc, i32 %mem, i62 %trunc_ln72_2, i64 %MatB_DRAM_read, i16 %cMatB_V, i16 %cMatB_V_1, i16 %cMatB_V_2, i16 %cMatB_V_3, i16 %cMatB_V_4, i16 %cMatB_V_5, i16 %cMatB_V_6, i16 %cMatB_V_7, i16 %cMatB_V_8, i16 %cMatB_V_9, i16 %cMatB_V_10, i16 %cMatB_V_11, i16 %cMatB_V_12, i16 %cMatB_V_13, i16 %cMatB_V_14, i16 %cMatB_V_15, i16 %cMatB_V_16, i16 %cMatB_V_17, i16 %cMatB_V_18, i16 %cMatB_V_19, i5 %shl_ln3" [complex_matmul.cpp:72]   --->   Operation 163 'call' 'call_ln72' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 164 [2/2] (0.00ns)   --->   "%call_ln0 = call void @complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE, i16 %MatB_V, i16 %MatB_V_1, i16 %MatB_V_2, i16 %MatB_V_3, i16 %MatB_V_4, i16 %MatB_V_5, i16 %MatB_V_6, i16 %MatB_V_7, i16 %MatB_V_8, i16 %MatB_V_9, i16 %MatB_V_10, i16 %MatB_V_11, i16 %MatB_V_12, i16 %MatB_V_13, i16 %MatB_V_14, i16 %MatB_V_15, i16 %MatB_V_16, i16 %MatB_V_17, i16 %MatB_V_18, i16 %MatB_V_19, i16 %cMatB_V, i16 %cMatB_V_1, i16 %cMatB_V_2, i16 %cMatB_V_3, i16 %cMatB_V_4, i16 %cMatB_V_5, i16 %cMatB_V_6, i16 %cMatB_V_7, i16 %cMatB_V_8, i16 %cMatB_V_9, i16 %cMatB_V_10, i16 %cMatB_V_11, i16 %cMatB_V_12, i16 %cMatB_V_13, i16 %cMatB_V_14, i16 %cMatB_V_15, i16 %cMatB_V_16, i16 %cMatB_V_17, i16 %cMatB_V_18, i16 %cMatB_V_19, i16 %MatA_V, i16 %MatA_V_1, i16 %MatA_V_2, i16 %MatA_V_3, i16 %MatA_V_4, i16 %MatA_V_5, i16 %MatA_V_6, i16 %MatA_V_7, i16 %MatA_V_8, i16 %MatA_V_9, i16 %MatA_V_10, i16 %MatA_V_11, i16 %MatA_V_12, i16 %MatA_V_13, i16 %MatA_V_14, i16 %MatA_V_15, i16 %MatA_V_16, i16 %MatA_V_17, i16 %MatA_V_18, i16 %MatA_V_19, i16 %MatC_V, i16 %MatC_V_1, i16 %MatC_V_2, i16 %MatC_V_3, i16 %MatC_V_4, i16 %MatC_V_5, i16 %MatC_V_6, i16 %MatC_V_7, i16 %MatC_V_8, i16 %MatC_V_9, i16 %MatC_V_10, i16 %MatC_V_11, i16 %MatC_V_12, i16 %MatC_V_13, i16 %MatC_V_14, i16 %MatC_V_15, i16 %MatC_V_16, i16 %MatC_V_17, i16 %MatC_V_18, i16 %MatC_V_19, i16 %cMatA_V, i16 %cMatA_V_1, i16 %cMatA_V_2, i16 %cMatA_V_3, i16 %cMatA_V_4, i16 %cMatA_V_5, i16 %cMatA_V_6, i16 %cMatA_V_7, i16 %cMatA_V_8, i16 %cMatA_V_9, i16 %cMatA_V_10, i16 %cMatA_V_11, i16 %cMatA_V_12, i16 %cMatA_V_13, i16 %cMatA_V_14, i16 %cMatA_V_15, i16 %cMatA_V_16, i16 %cMatA_V_17, i16 %cMatA_V_18, i16 %cMatA_V_19, i16 %cMatC_V, i16 %cMatC_V_1, i16 %cMatC_V_2, i16 %cMatC_V_3, i16 %cMatC_V_4, i16 %cMatC_V_5, i16 %cMatC_V_6, i16 %cMatC_V_7, i16 %cMatC_V_8, i16 %cMatC_V_9, i16 %cMatC_V_10, i16 %cMatC_V_11, i16 %cMatC_V_12, i16 %cMatC_V_13, i16 %cMatC_V_14, i16 %cMatC_V_15, i16 %cMatC_V_16, i16 %cMatC_V_17, i16 %cMatC_V_18, i16 %cMatC_V_19"   --->   Operation 164 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 2.12>
ST_11 : Operation 165 [1/2] (0.00ns)   --->   "%call_ln0 = call void @complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE, i16 %MatB_V, i16 %MatB_V_1, i16 %MatB_V_2, i16 %MatB_V_3, i16 %MatB_V_4, i16 %MatB_V_5, i16 %MatB_V_6, i16 %MatB_V_7, i16 %MatB_V_8, i16 %MatB_V_9, i16 %MatB_V_10, i16 %MatB_V_11, i16 %MatB_V_12, i16 %MatB_V_13, i16 %MatB_V_14, i16 %MatB_V_15, i16 %MatB_V_16, i16 %MatB_V_17, i16 %MatB_V_18, i16 %MatB_V_19, i16 %cMatB_V, i16 %cMatB_V_1, i16 %cMatB_V_2, i16 %cMatB_V_3, i16 %cMatB_V_4, i16 %cMatB_V_5, i16 %cMatB_V_6, i16 %cMatB_V_7, i16 %cMatB_V_8, i16 %cMatB_V_9, i16 %cMatB_V_10, i16 %cMatB_V_11, i16 %cMatB_V_12, i16 %cMatB_V_13, i16 %cMatB_V_14, i16 %cMatB_V_15, i16 %cMatB_V_16, i16 %cMatB_V_17, i16 %cMatB_V_18, i16 %cMatB_V_19, i16 %MatA_V, i16 %MatA_V_1, i16 %MatA_V_2, i16 %MatA_V_3, i16 %MatA_V_4, i16 %MatA_V_5, i16 %MatA_V_6, i16 %MatA_V_7, i16 %MatA_V_8, i16 %MatA_V_9, i16 %MatA_V_10, i16 %MatA_V_11, i16 %MatA_V_12, i16 %MatA_V_13, i16 %MatA_V_14, i16 %MatA_V_15, i16 %MatA_V_16, i16 %MatA_V_17, i16 %MatA_V_18, i16 %MatA_V_19, i16 %MatC_V, i16 %MatC_V_1, i16 %MatC_V_2, i16 %MatC_V_3, i16 %MatC_V_4, i16 %MatC_V_5, i16 %MatC_V_6, i16 %MatC_V_7, i16 %MatC_V_8, i16 %MatC_V_9, i16 %MatC_V_10, i16 %MatC_V_11, i16 %MatC_V_12, i16 %MatC_V_13, i16 %MatC_V_14, i16 %MatC_V_15, i16 %MatC_V_16, i16 %MatC_V_17, i16 %MatC_V_18, i16 %MatC_V_19, i16 %cMatA_V, i16 %cMatA_V_1, i16 %cMatA_V_2, i16 %cMatA_V_3, i16 %cMatA_V_4, i16 %cMatA_V_5, i16 %cMatA_V_6, i16 %cMatA_V_7, i16 %cMatA_V_8, i16 %cMatA_V_9, i16 %cMatA_V_10, i16 %cMatA_V_11, i16 %cMatA_V_12, i16 %cMatA_V_13, i16 %cMatA_V_14, i16 %cMatA_V_15, i16 %cMatA_V_16, i16 %cMatA_V_17, i16 %cMatA_V_18, i16 %cMatA_V_19, i16 %cMatC_V, i16 %cMatC_V_1, i16 %cMatC_V_2, i16 %cMatC_V_3, i16 %cMatC_V_4, i16 %cMatC_V_5, i16 %cMatC_V_6, i16 %cMatC_V_7, i16 %cMatC_V_8, i16 %cMatC_V_9, i16 %cMatC_V_10, i16 %cMatC_V_11, i16 %cMatC_V_12, i16 %cMatC_V_13, i16 %cMatC_V_14, i16 %cMatC_V_15, i16 %cMatC_V_16, i16 %cMatC_V_17, i16 %cMatC_V_18, i16 %cMatC_V_19"   --->   Operation 165 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 166 [1/1] (0.00ns)   --->   "%zext_ln116 = zext i2 %trunc_ln113" [complex_matmul.cpp:116]   --->   Operation 166 'zext' 'zext_ln116' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 167 [1/1] (2.12ns)   --->   "%shl_ln116 = shl i4 3, i4 %zext_ln116" [complex_matmul.cpp:116]   --->   Operation 167 'shl' 'shl_ln116' <Predicate = true> <Delay = 2.12> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 0.00>
ST_12 : Operation 168 [1/1] (0.00ns)   --->   "%shl_ln116_1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %trunc_ln113, i3 0" [complex_matmul.cpp:116]   --->   Operation 168 'bitconcatenate' 'shl_ln116_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 169 [2/2] (0.00ns)   --->   "%call_ln116 = call void @complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS, i32 %mem, i16 %MatC_V, i16 %MatC_V_1, i16 %MatC_V_2, i16 %MatC_V_3, i16 %MatC_V_4, i16 %MatC_V_5, i16 %MatC_V_6, i16 %MatC_V_7, i16 %MatC_V_8, i16 %MatC_V_9, i16 %MatC_V_10, i16 %MatC_V_11, i16 %MatC_V_12, i16 %MatC_V_13, i16 %MatC_V_14, i16 %MatC_V_15, i16 %MatC_V_16, i16 %MatC_V_17, i16 %MatC_V_18, i16 %MatC_V_19, i64 %MatC_DRAM_read, i5 %shl_ln116_1, i4 %shl_ln116" [complex_matmul.cpp:116]   --->   Operation 169 'call' 'call_ln116' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 3.10>
ST_13 : Operation 170 [1/2] (0.00ns)   --->   "%call_ln116 = call void @complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS, i32 %mem, i16 %MatC_V, i16 %MatC_V_1, i16 %MatC_V_2, i16 %MatC_V_3, i16 %MatC_V_4, i16 %MatC_V_5, i16 %MatC_V_6, i16 %MatC_V_7, i16 %MatC_V_8, i16 %MatC_V_9, i16 %MatC_V_10, i16 %MatC_V_11, i16 %MatC_V_12, i16 %MatC_V_13, i16 %MatC_V_14, i16 %MatC_V_15, i16 %MatC_V_16, i16 %MatC_V_17, i16 %MatC_V_18, i16 %MatC_V_19, i64 %MatC_DRAM_read, i5 %shl_ln116_1, i4 %shl_ln116" [complex_matmul.cpp:116]   --->   Operation 170 'call' 'call_ln116' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 171 [1/1] (0.97ns)   --->   "%xor_ln122 = xor i2 %trunc_ln113, i2 2" [complex_matmul.cpp:122]   --->   Operation 171 'xor' 'xor_ln122' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 172 [1/1] (0.00ns)   --->   "%zext_ln125 = zext i2 %xor_ln122" [complex_matmul.cpp:125]   --->   Operation 172 'zext' 'zext_ln125' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 173 [1/1] (2.12ns)   --->   "%shl_ln125 = shl i4 3, i4 %zext_ln125" [complex_matmul.cpp:125]   --->   Operation 173 'shl' 'shl_ln125' <Predicate = true> <Delay = 2.12> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 2.12> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 0.00>
ST_14 : Operation 174 [1/1] (0.00ns)   --->   "%shl_ln125_1 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %xor_ln122, i3 0" [complex_matmul.cpp:125]   --->   Operation 174 'bitconcatenate' 'shl_ln125_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 175 [2/2] (0.00ns)   --->   "%call_ln125 = call void @complex_matmul_Pipeline_MAT_C_ROWSc_MAT_C_COLSc, i32 %mem, i64 %MatC_DRAM_read, i16 %cMatC_V, i16 %cMatC_V_1, i16 %cMatC_V_2, i16 %cMatC_V_3, i16 %cMatC_V_4, i16 %cMatC_V_5, i16 %cMatC_V_6, i16 %cMatC_V_7, i16 %cMatC_V_8, i16 %cMatC_V_9, i16 %cMatC_V_10, i16 %cMatC_V_11, i16 %cMatC_V_12, i16 %cMatC_V_13, i16 %cMatC_V_14, i16 %cMatC_V_15, i16 %cMatC_V_16, i16 %cMatC_V_17, i16 %cMatC_V_18, i16 %cMatC_V_19, i5 %shl_ln125_1, i4 %shl_ln125" [complex_matmul.cpp:125]   --->   Operation 175 'call' 'call_ln125' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 0.00>
ST_15 : Operation 176 [1/1] (0.00ns)   --->   "%spectopmodule_ln12 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_16" [complex_matmul.cpp:12]   --->   Operation 176 'spectopmodule' 'spectopmodule_ln12' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 177 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %mem, void @empty_2, i32 0, i32 0, void @empty_1, i32 0, i32 2, void @empty_0, void @empty_15, void @empty_1, i32 16, i32 16, i32 16, i32 16, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 177 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 178 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %mem"   --->   Operation 178 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 179 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %MatA_DRAM, void @empty_13, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_11, void @empty_5, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 179 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 180 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %MatA_DRAM, void @empty_4, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 180 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 181 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %MatB_DRAM, void @empty_13, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_11, void @empty_18, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 181 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 182 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %MatB_DRAM, void @empty_4, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 182 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 183 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %MatC_DRAM, void @empty_13, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_11, void @empty_17, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 183 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 184 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %MatC_DRAM, void @empty_4, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty, i32 4294967295, i32 0"   --->   Operation 184 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 185 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_13, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_11, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 185 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 186 [1/2] (0.00ns)   --->   "%call_ln125 = call void @complex_matmul_Pipeline_MAT_C_ROWSc_MAT_C_COLSc, i32 %mem, i64 %MatC_DRAM_read, i16 %cMatC_V, i16 %cMatC_V_1, i16 %cMatC_V_2, i16 %cMatC_V_3, i16 %cMatC_V_4, i16 %cMatC_V_5, i16 %cMatC_V_6, i16 %cMatC_V_7, i16 %cMatC_V_8, i16 %cMatC_V_9, i16 %cMatC_V_10, i16 %cMatC_V_11, i16 %cMatC_V_12, i16 %cMatC_V_13, i16 %cMatC_V_14, i16 %cMatC_V_15, i16 %cMatC_V_16, i16 %cMatC_V_17, i16 %cMatC_V_18, i16 %cMatC_V_19, i5 %shl_ln125_1, i4 %shl_ln125" [complex_matmul.cpp:125]   --->   Operation 186 'call' 'call_ln125' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 187 [1/1] (0.00ns)   --->   "%ret_ln129 = ret" [complex_matmul.cpp:129]   --->   Operation 187 'ret' 'ret_ln129' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read operation ('MatC_DRAM') on port 'MatC_DRAM' [15]  (1 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	'call' operation ('call_ln46', complex_matmul.cpp:46) to 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' [141]  (7.3 ns)

 <State 3>: 3.52ns
The critical path consists of the following:
	'add' operation ('add_ln55', complex_matmul.cpp:55) [144]  (3.52 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	'call' operation ('call_ln55', complex_matmul.cpp:55) to 'complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc' [146]  (7.3 ns)

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 7.3ns
The critical path consists of the following:
	'call' operation ('call_ln64', complex_matmul.cpp:64) to 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' [150]  (7.3 ns)

 <State 7>: 3.52ns
The critical path consists of the following:
	'add' operation ('add_ln72', complex_matmul.cpp:72) [153]  (3.52 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	'call' operation ('call_ln72', complex_matmul.cpp:72) to 'complex_matmul_Pipeline_MAT_B_ROWSc_MAT_B_COLSc' [155]  (7.3 ns)

 <State 9>: 0ns
The critical path consists of the following:

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 2.13ns
The critical path consists of the following:
	'shl' operation ('shl_ln116', complex_matmul.cpp:116) [160]  (2.13 ns)

 <State 12>: 0ns
The critical path consists of the following:

 <State 13>: 3.1ns
The critical path consists of the following:
	'xor' operation ('xor_ln122', complex_matmul.cpp:122) [163]  (0.978 ns)
	'shl' operation ('shl_ln125', complex_matmul.cpp:125) [165]  (2.13 ns)

 <State 14>: 0ns
The critical path consists of the following:

 <State 15>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
