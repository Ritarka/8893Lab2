

================================================================
== Vitis HLS Report for 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS'
================================================================
* Date:           Sat Mar 11 12:57:18 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        complex_proj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    30020|    30020|  0.300 ms|  0.300 ms|  30020|  30020|       no|
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                         |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |        Loop Name        |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +-------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- MAT_B_ROWS_MAT_B_COLS  |    30012|    30012|        14|          1|          1|  30000|       yes|
        +-------------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 14


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 22
* Pipeline : 1
  Pipeline-0 : II = 1, D = 14, States = { 8 9 10 11 12 13 14 15 16 17 18 19 20 21 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 22 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 8 
22 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.30>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 23 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 24 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%indvar_flatten37 = alloca i32 1"   --->   Operation 25 'alloca' 'indvar_flatten37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%sext_ln64_1_read = read i62 @_ssdm_op_Read.ap_auto.i62, i62 %sext_ln64_1"   --->   Operation 26 'read' 'sext_ln64_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%sext_ln64_1_cast = sext i62 %sext_ln64_1_read"   --->   Operation 27 'sext' 'sext_ln64_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%mem_addr = getelementptr i32 %mem, i64 %sext_ln64_1_cast" [complex_matmul.cpp:64]   --->   Operation 28 'getelementptr' 'mem_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [7/7] (7.30ns)   --->   "%p_rd_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem_addr, i32 30000" [complex_matmul.cpp:64]   --->   Operation 29 'readreq' 'p_rd_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_1 : Operation 30 [1/1] (1.58ns)   --->   "%store_ln0 = store i15 0, i15 %indvar_flatten37"   --->   Operation 30 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 31 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 0, i8 %i"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 32 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 0, i8 %j"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 33 [6/7] (7.30ns)   --->   "%p_rd_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem_addr, i32 30000" [complex_matmul.cpp:64]   --->   Operation 33 'readreq' 'p_rd_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 34 [5/7] (7.30ns)   --->   "%p_rd_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem_addr, i32 30000" [complex_matmul.cpp:64]   --->   Operation 34 'readreq' 'p_rd_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 35 [4/7] (7.30ns)   --->   "%p_rd_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem_addr, i32 30000" [complex_matmul.cpp:64]   --->   Operation 35 'readreq' 'p_rd_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 36 [3/7] (7.30ns)   --->   "%p_rd_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem_addr, i32 30000" [complex_matmul.cpp:64]   --->   Operation 36 'readreq' 'p_rd_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 37 [2/7] (7.30ns)   --->   "%p_rd_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem_addr, i32 30000" [complex_matmul.cpp:64]   --->   Operation 37 'readreq' 'p_rd_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln61_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %zext_ln61"   --->   Operation 38 'read' 'zext_ln61_read' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 39 [1/1] (0.00ns)   --->   "%MatB_DRAM12 = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %MatB_DRAM"   --->   Operation 39 'read' 'MatB_DRAM12' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln61_cast = zext i5 %zext_ln61_read"   --->   Operation 40 'zext' 'zext_ln61_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 41 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %mem, void @empty_2, i32 0, i32 0, void @empty_1, i32 0, i32 2, void @empty_0, void @empty_15, void @empty_1, i32 16, i32 16, i32 16, i32 16, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 41 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 42 [1/7] (7.30ns)   --->   "%p_rd_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %mem_addr, i32 30000" [complex_matmul.cpp:64]   --->   Operation 42 'readreq' 'p_rd_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc130"   --->   Operation 43 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 6.30>
ST_8 : Operation 44 [1/1] (0.00ns)   --->   "%indvar_flatten37_load = load i15 %indvar_flatten37" [complex_matmul.cpp:61]   --->   Operation 44 'load' 'indvar_flatten37_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 45 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %mem"   --->   Operation 45 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 46 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 46 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 47 [1/1] (2.31ns)   --->   "%icmp_ln61 = icmp_eq  i15 %indvar_flatten37_load, i15 30000" [complex_matmul.cpp:61]   --->   Operation 47 'icmp' 'icmp_ln61' <Predicate = true> <Delay = 2.31> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 48 [1/1] (1.94ns)   --->   "%add_ln61_1 = add i15 %indvar_flatten37_load, i15 1" [complex_matmul.cpp:61]   --->   Operation 48 'add' 'add_ln61_1' <Predicate = true> <Delay = 1.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln61 = br i1 %icmp_ln61, void %for.inc133, void %MAT_B_ROWSc.exitStub" [complex_matmul.cpp:61]   --->   Operation 49 'br' 'br_ln61' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 50 [1/1] (0.00ns)   --->   "%j_load = load i8 %j" [complex_matmul.cpp:63]   --->   Operation 50 'load' 'j_load' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_8 : Operation 51 [1/1] (0.00ns)   --->   "%i_load = load i8 %i" [complex_matmul.cpp:61]   --->   Operation 51 'load' 'i_load' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_8 : Operation 52 [1/1] (1.91ns)   --->   "%add_ln61 = add i8 %i_load, i8 1" [complex_matmul.cpp:61]   --->   Operation 52 'add' 'add_ln61' <Predicate = (!icmp_ln61)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 53 [1/1] (1.55ns)   --->   "%icmp_ln63 = icmp_eq  i8 %j_load, i8 200" [complex_matmul.cpp:63]   --->   Operation 53 'icmp' 'icmp_ln63' <Predicate = (!icmp_ln61)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 54 [1/1] (1.24ns)   --->   "%select_ln61 = select i1 %icmp_ln63, i8 0, i8 %j_load" [complex_matmul.cpp:61]   --->   Operation 54 'select' 'select_ln61' <Predicate = (!icmp_ln61)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 55 [1/1] (1.24ns)   --->   "%select_ln61_1 = select i1 %icmp_ln63, i8 %add_ln61, i8 %i_load" [complex_matmul.cpp:61]   --->   Operation 55 'select' 'select_ln61_1' <Predicate = (!icmp_ln61)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 56 [1/1] (1.91ns)   --->   "%add_ln63 = add i8 %select_ln61, i8 1" [complex_matmul.cpp:63]   --->   Operation 56 'add' 'add_ln63' <Predicate = (!icmp_ln61)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 57 [1/1] (1.58ns)   --->   "%store_ln63 = store i15 %add_ln61_1, i15 %indvar_flatten37" [complex_matmul.cpp:63]   --->   Operation 57 'store' 'store_ln63' <Predicate = (!icmp_ln61)> <Delay = 1.58>
ST_8 : Operation 58 [1/1] (1.58ns)   --->   "%store_ln63 = store i8 %select_ln61_1, i8 %i" [complex_matmul.cpp:63]   --->   Operation 58 'store' 'store_ln63' <Predicate = (!icmp_ln61)> <Delay = 1.58>
ST_8 : Operation 59 [1/1] (1.58ns)   --->   "%store_ln63 = store i8 %add_ln63, i8 %j" [complex_matmul.cpp:63]   --->   Operation 59 'store' 'store_ln63' <Predicate = (!icmp_ln61)> <Delay = 1.58>
ST_8 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln63 = br void %for.inc130" [complex_matmul.cpp:63]   --->   Operation 60 'br' 'br_ln63' <Predicate = (!icmp_ln61)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 5.57>
ST_9 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln61_1 = zext i8 %select_ln61_1" [complex_matmul.cpp:61]   --->   Operation 61 'zext' 'zext_ln61_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 62 [1/1] (4.52ns)   --->   "%mul_ln61 = mul i17 %zext_ln61_1, i17 410" [complex_matmul.cpp:61]   --->   Operation 62 'mul' 'mul_ln61' <Predicate = true> <Delay = 4.52> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 4.52> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 63 [1/1] (0.00ns)   --->   "%tmp = partselect i4 @_ssdm_op_PartSelect.i4.i17.i32.i32, i17 %mul_ln61, i32 13, i32 16" [complex_matmul.cpp:61]   --->   Operation 63 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln61_2 = zext i4 %tmp" [complex_matmul.cpp:61]   --->   Operation 64 'zext' 'zext_ln61_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 65 [3/3] (1.05ns) (grouped into DSP with root node add_ln64)   --->   "%mul_ln61_1 = mul i11 %zext_ln61_2, i11 200" [complex_matmul.cpp:61]   --->   Operation 65 'mul' 'mul_ln61_1' <Predicate = true> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 66 [12/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 66 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 4.38>
ST_10 : Operation 67 [2/3] (1.05ns) (grouped into DSP with root node add_ln64)   --->   "%mul_ln61_1 = mul i11 %zext_ln61_2, i11 200" [complex_matmul.cpp:61]   --->   Operation 67 'mul' 'mul_ln61_1' <Predicate = true> <Delay = 1.05> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 68 [11/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 68 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 4.38>
ST_11 : Operation 69 [1/3] (0.00ns) (grouped into DSP with root node add_ln64)   --->   "%mul_ln61_1 = mul i11 %zext_ln61_2, i11 200" [complex_matmul.cpp:61]   --->   Operation 69 'mul' 'mul_ln61_1' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 70 [10/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 70 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln64 = zext i8 %select_ln61" [complex_matmul.cpp:64]   --->   Operation 71 'zext' 'zext_ln64' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 72 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln64 = add i11 %mul_ln61_1, i11 %zext_ln64" [complex_matmul.cpp:64]   --->   Operation 72 'add' 'add_ln64' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 12 <SV = 11> <Delay = 4.38>
ST_12 : Operation 73 [9/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 73 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 74 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln64 = add i11 %mul_ln61_1, i11 %zext_ln64" [complex_matmul.cpp:64]   --->   Operation 74 'add' 'add_ln64' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 13 <SV = 12> <Delay = 4.38>
ST_13 : Operation 75 [8/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 75 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 4.38>
ST_14 : Operation 76 [7/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 76 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 4.38>
ST_15 : Operation 77 [6/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 77 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 4.38>
ST_16 : Operation 78 [5/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 78 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 4.38>
ST_17 : Operation 79 [4/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 79 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 4.38>
ST_18 : Operation 80 [3/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 80 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 81 [2/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 81 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 82 [1/1] (7.30ns)   --->   "%mem_addr_read = read i32 @_ssdm_op_Read.m_axi.i32P1A, i32 %mem_addr" [complex_matmul.cpp:64]   --->   Operation 82 'read' 'mem_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 5.34>
ST_20 : Operation 83 [1/12] (4.38ns)   --->   "%urem_ln61 = urem i8 %select_ln61_1, i8 20" [complex_matmul.cpp:61]   --->   Operation 83 'urem' 'urem_ln61' <Predicate = true> <Delay = 4.38> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 11> <II = 1> <Delay = 4.38> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln61 = trunc i5 %urem_ln61" [complex_matmul.cpp:61]   --->   Operation 84 'trunc' 'trunc_ln61' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 85 [1/1] (4.42ns)   --->   "%lshr_ln64 = lshr i32 %mem_addr_read, i32 %zext_ln61_cast" [complex_matmul.cpp:64]   --->   Operation 85 'lshr' 'lshr_ln64' <Predicate = true> <Delay = 4.42> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln64 = trunc i32 %lshr_ln64" [complex_matmul.cpp:64]   --->   Operation 86 'trunc' 'trunc_ln64' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 87 [1/1] (0.95ns)   --->   "%switch_ln64 = switch i5 %trunc_ln61, void %arrayidx12926.case.19, i5 0, void %arrayidx12926.case.0, i5 1, void %arrayidx12926.case.1, i5 2, void %arrayidx12926.case.2, i5 3, void %arrayidx12926.case.3, i5 4, void %arrayidx12926.case.4, i5 5, void %arrayidx12926.case.5, i5 6, void %arrayidx12926.case.6, i5 7, void %arrayidx12926.case.7, i5 8, void %arrayidx12926.case.8, i5 9, void %arrayidx12926.case.9, i5 10, void %arrayidx12926.case.10, i5 11, void %arrayidx12926.case.11, i5 12, void %arrayidx12926.case.12, i5 13, void %arrayidx12926.case.13, i5 14, void %arrayidx12926.case.14, i5 15, void %arrayidx12926.case.15, i5 16, void %arrayidx12926.case.16, i5 17, void %arrayidx12926.case.17, i5 18, void %arrayidx12926.case.18" [complex_matmul.cpp:64]   --->   Operation 87 'switch' 'switch_ln64' <Predicate = true> <Delay = 0.95>

State 21 <SV = 20> <Delay = 3.25>
ST_21 : Operation 88 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @MAT_B_ROWS_MAT_B_COLS_str"   --->   Operation 88 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 89 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 30000, i64 30000, i64 30000"   --->   Operation 89 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 90 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 90 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln64_1 = zext i11 %add_ln64" [complex_matmul.cpp:64]   --->   Operation 91 'zext' 'zext_ln64_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 92 [1/1] (0.00ns)   --->   "%MatB_V_addr = getelementptr i16 %MatB_V, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 92 'getelementptr' 'MatB_V_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 93 [1/1] (0.00ns)   --->   "%MatB_V_1_addr = getelementptr i16 %MatB_V_1, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 93 'getelementptr' 'MatB_V_1_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 94 [1/1] (0.00ns)   --->   "%MatB_V_2_addr = getelementptr i16 %MatB_V_2, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 94 'getelementptr' 'MatB_V_2_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 95 [1/1] (0.00ns)   --->   "%MatB_V_3_addr = getelementptr i16 %MatB_V_3, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 95 'getelementptr' 'MatB_V_3_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 96 [1/1] (0.00ns)   --->   "%MatB_V_4_addr = getelementptr i16 %MatB_V_4, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 96 'getelementptr' 'MatB_V_4_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 97 [1/1] (0.00ns)   --->   "%MatB_V_5_addr = getelementptr i16 %MatB_V_5, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 97 'getelementptr' 'MatB_V_5_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 98 [1/1] (0.00ns)   --->   "%MatB_V_6_addr = getelementptr i16 %MatB_V_6, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 98 'getelementptr' 'MatB_V_6_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 99 [1/1] (0.00ns)   --->   "%MatB_V_7_addr = getelementptr i16 %MatB_V_7, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 99 'getelementptr' 'MatB_V_7_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 100 [1/1] (0.00ns)   --->   "%MatB_V_8_addr = getelementptr i16 %MatB_V_8, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 100 'getelementptr' 'MatB_V_8_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 101 [1/1] (0.00ns)   --->   "%MatB_V_9_addr = getelementptr i16 %MatB_V_9, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 101 'getelementptr' 'MatB_V_9_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 102 [1/1] (0.00ns)   --->   "%MatB_V_10_addr = getelementptr i16 %MatB_V_10, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 102 'getelementptr' 'MatB_V_10_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 103 [1/1] (0.00ns)   --->   "%MatB_V_11_addr = getelementptr i16 %MatB_V_11, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 103 'getelementptr' 'MatB_V_11_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 104 [1/1] (0.00ns)   --->   "%MatB_V_12_addr = getelementptr i16 %MatB_V_12, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 104 'getelementptr' 'MatB_V_12_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 105 [1/1] (0.00ns)   --->   "%MatB_V_13_addr = getelementptr i16 %MatB_V_13, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 105 'getelementptr' 'MatB_V_13_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 106 [1/1] (0.00ns)   --->   "%MatB_V_14_addr = getelementptr i16 %MatB_V_14, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 106 'getelementptr' 'MatB_V_14_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 107 [1/1] (0.00ns)   --->   "%MatB_V_15_addr = getelementptr i16 %MatB_V_15, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 107 'getelementptr' 'MatB_V_15_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 108 [1/1] (0.00ns)   --->   "%MatB_V_16_addr = getelementptr i16 %MatB_V_16, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 108 'getelementptr' 'MatB_V_16_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 109 [1/1] (0.00ns)   --->   "%MatB_V_17_addr = getelementptr i16 %MatB_V_17, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 109 'getelementptr' 'MatB_V_17_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 110 [1/1] (0.00ns)   --->   "%MatB_V_18_addr = getelementptr i16 %MatB_V_18, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 110 'getelementptr' 'MatB_V_18_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 111 [1/1] (0.00ns)   --->   "%MatB_V_19_addr = getelementptr i16 %MatB_V_19, i64 0, i64 %zext_ln64_1" [complex_matmul.cpp:64]   --->   Operation 111 'getelementptr' 'MatB_V_19_addr' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 112 [1/1] (0.00ns)   --->   "%specloopname_ln63 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14" [complex_matmul.cpp:63]   --->   Operation 112 'specloopname' 'specloopname_ln63' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 113 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_18_addr" [complex_matmul.cpp:64]   --->   Operation 113 'store' 'store_ln64' <Predicate = (trunc_ln61 == 18)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 114 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 114 'br' 'br_ln64' <Predicate = (trunc_ln61 == 18)> <Delay = 0.00>
ST_21 : Operation 115 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_17_addr" [complex_matmul.cpp:64]   --->   Operation 115 'store' 'store_ln64' <Predicate = (trunc_ln61 == 17)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 116 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 116 'br' 'br_ln64' <Predicate = (trunc_ln61 == 17)> <Delay = 0.00>
ST_21 : Operation 117 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_16_addr" [complex_matmul.cpp:64]   --->   Operation 117 'store' 'store_ln64' <Predicate = (trunc_ln61 == 16)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 118 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 118 'br' 'br_ln64' <Predicate = (trunc_ln61 == 16)> <Delay = 0.00>
ST_21 : Operation 119 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_15_addr" [complex_matmul.cpp:64]   --->   Operation 119 'store' 'store_ln64' <Predicate = (trunc_ln61 == 15)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 120 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 120 'br' 'br_ln64' <Predicate = (trunc_ln61 == 15)> <Delay = 0.00>
ST_21 : Operation 121 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_14_addr" [complex_matmul.cpp:64]   --->   Operation 121 'store' 'store_ln64' <Predicate = (trunc_ln61 == 14)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 122 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 122 'br' 'br_ln64' <Predicate = (trunc_ln61 == 14)> <Delay = 0.00>
ST_21 : Operation 123 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_13_addr" [complex_matmul.cpp:64]   --->   Operation 123 'store' 'store_ln64' <Predicate = (trunc_ln61 == 13)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 124 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 124 'br' 'br_ln64' <Predicate = (trunc_ln61 == 13)> <Delay = 0.00>
ST_21 : Operation 125 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_12_addr" [complex_matmul.cpp:64]   --->   Operation 125 'store' 'store_ln64' <Predicate = (trunc_ln61 == 12)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 126 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 126 'br' 'br_ln64' <Predicate = (trunc_ln61 == 12)> <Delay = 0.00>
ST_21 : Operation 127 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_11_addr" [complex_matmul.cpp:64]   --->   Operation 127 'store' 'store_ln64' <Predicate = (trunc_ln61 == 11)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 128 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 128 'br' 'br_ln64' <Predicate = (trunc_ln61 == 11)> <Delay = 0.00>
ST_21 : Operation 129 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_10_addr" [complex_matmul.cpp:64]   --->   Operation 129 'store' 'store_ln64' <Predicate = (trunc_ln61 == 10)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 130 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 130 'br' 'br_ln64' <Predicate = (trunc_ln61 == 10)> <Delay = 0.00>
ST_21 : Operation 131 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_9_addr" [complex_matmul.cpp:64]   --->   Operation 131 'store' 'store_ln64' <Predicate = (trunc_ln61 == 9)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 132 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 132 'br' 'br_ln64' <Predicate = (trunc_ln61 == 9)> <Delay = 0.00>
ST_21 : Operation 133 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_8_addr" [complex_matmul.cpp:64]   --->   Operation 133 'store' 'store_ln64' <Predicate = (trunc_ln61 == 8)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 134 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 134 'br' 'br_ln64' <Predicate = (trunc_ln61 == 8)> <Delay = 0.00>
ST_21 : Operation 135 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_7_addr" [complex_matmul.cpp:64]   --->   Operation 135 'store' 'store_ln64' <Predicate = (trunc_ln61 == 7)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 136 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 136 'br' 'br_ln64' <Predicate = (trunc_ln61 == 7)> <Delay = 0.00>
ST_21 : Operation 137 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_6_addr" [complex_matmul.cpp:64]   --->   Operation 137 'store' 'store_ln64' <Predicate = (trunc_ln61 == 6)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 138 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 138 'br' 'br_ln64' <Predicate = (trunc_ln61 == 6)> <Delay = 0.00>
ST_21 : Operation 139 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_5_addr" [complex_matmul.cpp:64]   --->   Operation 139 'store' 'store_ln64' <Predicate = (trunc_ln61 == 5)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 140 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 140 'br' 'br_ln64' <Predicate = (trunc_ln61 == 5)> <Delay = 0.00>
ST_21 : Operation 141 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_4_addr" [complex_matmul.cpp:64]   --->   Operation 141 'store' 'store_ln64' <Predicate = (trunc_ln61 == 4)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 142 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 142 'br' 'br_ln64' <Predicate = (trunc_ln61 == 4)> <Delay = 0.00>
ST_21 : Operation 143 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_3_addr" [complex_matmul.cpp:64]   --->   Operation 143 'store' 'store_ln64' <Predicate = (trunc_ln61 == 3)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 144 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 144 'br' 'br_ln64' <Predicate = (trunc_ln61 == 3)> <Delay = 0.00>
ST_21 : Operation 145 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_2_addr" [complex_matmul.cpp:64]   --->   Operation 145 'store' 'store_ln64' <Predicate = (trunc_ln61 == 2)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 146 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 146 'br' 'br_ln64' <Predicate = (trunc_ln61 == 2)> <Delay = 0.00>
ST_21 : Operation 147 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_1_addr" [complex_matmul.cpp:64]   --->   Operation 147 'store' 'store_ln64' <Predicate = (trunc_ln61 == 1)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 148 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 148 'br' 'br_ln64' <Predicate = (trunc_ln61 == 1)> <Delay = 0.00>
ST_21 : Operation 149 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_addr" [complex_matmul.cpp:64]   --->   Operation 149 'store' 'store_ln64' <Predicate = (trunc_ln61 == 0)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 150 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 150 'br' 'br_ln64' <Predicate = (trunc_ln61 == 0)> <Delay = 0.00>
ST_21 : Operation 151 [1/1] (3.25ns)   --->   "%store_ln64 = store i16 %trunc_ln64, i11 %MatB_V_19_addr" [complex_matmul.cpp:64]   --->   Operation 151 'store' 'store_ln64' <Predicate = (trunc_ln61 == 31) | (trunc_ln61 == 30) | (trunc_ln61 == 29) | (trunc_ln61 == 28) | (trunc_ln61 == 27) | (trunc_ln61 == 26) | (trunc_ln61 == 25) | (trunc_ln61 == 24) | (trunc_ln61 == 23) | (trunc_ln61 == 22) | (trunc_ln61 == 21) | (trunc_ln61 == 20) | (trunc_ln61 == 19)> <Delay = 3.25> <CoreInst = "RAM_1WnR">   --->   Core 83 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 16> <Depth = 1600> <RAM>
ST_21 : Operation 152 [1/1] (0.00ns)   --->   "%br_ln64 = br void %arrayidx12926.exit" [complex_matmul.cpp:64]   --->   Operation 152 'br' 'br_ln64' <Predicate = (trunc_ln61 == 31) | (trunc_ln61 == 30) | (trunc_ln61 == 29) | (trunc_ln61 == 28) | (trunc_ln61 == 27) | (trunc_ln61 == 26) | (trunc_ln61 == 25) | (trunc_ln61 == 24) | (trunc_ln61 == 23) | (trunc_ln61 == 22) | (trunc_ln61 == 21) | (trunc_ln61 == 20) | (trunc_ln61 == 19)> <Delay = 0.00>

State 22 <SV = 8> <Delay = 0.00>
ST_22 : Operation 153 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 153 'ret' 'ret_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 7.3ns
The critical path consists of the following:
	wire read operation ('sext_ln64_1_read') on port 'sext_ln64_1' [30]  (0 ns)
	'getelementptr' operation ('mem_addr', complex_matmul.cpp:64) [34]  (0 ns)
	bus request operation ('p_rd_req', complex_matmul.cpp:64) on port 'mem' (complex_matmul.cpp:64) [35]  (7.3 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	bus request operation ('p_rd_req', complex_matmul.cpp:64) on port 'mem' (complex_matmul.cpp:64) [35]  (7.3 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request operation ('p_rd_req', complex_matmul.cpp:64) on port 'mem' (complex_matmul.cpp:64) [35]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('p_rd_req', complex_matmul.cpp:64) on port 'mem' (complex_matmul.cpp:64) [35]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('p_rd_req', complex_matmul.cpp:64) on port 'mem' (complex_matmul.cpp:64) [35]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('p_rd_req', complex_matmul.cpp:64) on port 'mem' (complex_matmul.cpp:64) [35]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('p_rd_req', complex_matmul.cpp:64) on port 'mem' (complex_matmul.cpp:64) [35]  (7.3 ns)

 <State 8>: 6.3ns
The critical path consists of the following:
	'load' operation ('j_load', complex_matmul.cpp:63) on local variable 'j' [48]  (0 ns)
	'icmp' operation ('icmp_ln63', complex_matmul.cpp:63) [53]  (1.55 ns)
	'select' operation ('select_ln61', complex_matmul.cpp:61) [54]  (1.25 ns)
	'add' operation ('add_ln63', complex_matmul.cpp:63) [153]  (1.92 ns)
	'store' operation ('store_ln63', complex_matmul.cpp:63) of variable 'add_ln63', complex_matmul.cpp:63 on local variable 'j' [156]  (1.59 ns)

 <State 9>: 5.57ns
The critical path consists of the following:
	'mul' operation ('mul_ln61', complex_matmul.cpp:61) [57]  (4.52 ns)
	'mul' operation of DSP[65] ('mul_ln61_1', complex_matmul.cpp:61) [60]  (1.05 ns)

 <State 10>: 4.39ns
The critical path consists of the following:
	'urem' operation ('urem_ln61', complex_matmul.cpp:61) [61]  (4.39 ns)

 <State 11>: 4.39ns
The critical path consists of the following:
	'urem' operation ('urem_ln61', complex_matmul.cpp:61) [61]  (4.39 ns)

 <State 12>: 4.39ns
The critical path consists of the following:
	'urem' operation ('urem_ln61', complex_matmul.cpp:61) [61]  (4.39 ns)

 <State 13>: 4.39ns
The critical path consists of the following:
	'urem' operation ('urem_ln61', complex_matmul.cpp:61) [61]  (4.39 ns)

 <State 14>: 4.39ns
The critical path consists of the following:
	'urem' operation ('urem_ln61', complex_matmul.cpp:61) [61]  (4.39 ns)

 <State 15>: 4.39ns
The critical path consists of the following:
	'urem' operation ('urem_ln61', complex_matmul.cpp:61) [61]  (4.39 ns)

 <State 16>: 4.39ns
The critical path consists of the following:
	'urem' operation ('urem_ln61', complex_matmul.cpp:61) [61]  (4.39 ns)

 <State 17>: 4.39ns
The critical path consists of the following:
	'urem' operation ('urem_ln61', complex_matmul.cpp:61) [61]  (4.39 ns)

 <State 18>: 4.39ns
The critical path consists of the following:
	'urem' operation ('urem_ln61', complex_matmul.cpp:61) [61]  (4.39 ns)

 <State 19>: 7.3ns
The critical path consists of the following:
	bus read operation ('mem_addr_read', complex_matmul.cpp:64) on port 'mem' (complex_matmul.cpp:64) [88]  (7.3 ns)

 <State 20>: 5.34ns
The critical path consists of the following:
	'urem' operation ('urem_ln61', complex_matmul.cpp:61) [61]  (4.39 ns)
	blocking operation 0.959 ns on control path)

 <State 21>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('MatB_V_18_addr', complex_matmul.cpp:64) [85]  (0 ns)
	'store' operation ('store_ln64', complex_matmul.cpp:64) of variable 'trunc_ln64', complex_matmul.cpp:64 on array 'MatB_V_18' [93]  (3.25 ns)

 <State 22>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
