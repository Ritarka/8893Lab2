==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [HLS 200-1505] Using default flow_target 'vivado'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vivado' configuration: config_interface -m_axi_latency=0
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 757.324 MB.
INFO: [HLS 200-10] Analyzing design file 'complex_matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.43 seconds. CPU system time: 0.4 seconds. Elapsed time: 5.19 seconds; current allocated memory: 759.582 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.44 seconds. CPU system time: 0.32 seconds. Elapsed time: 3.77 seconds; current allocated memory: 759.879 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 759.879 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 760.504 MB.
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'complex_matmul' (complex_matmul.cpp:12) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 760.977 MB.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.02 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 782.734 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 782.734 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'complex_matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.02 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.15 seconds; current allocated memory: 782.734 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 782.734 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/mem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatA_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatB_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatC_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'complex_matmul' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'MatA_DRAM', 'MatB_DRAM', 'MatC_DRAM' and 'return' to AXI-Lite port control.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWVALID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWVALID' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWREADY' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWADDR' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWADDR' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWID' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWLEN' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWLEN' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWSIZE' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWSIZE' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWBURST' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWBURST' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWLOCK' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWLOCK' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWCACHE' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWCACHE' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWPROT' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWPROT' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWQOS' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWQOS' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWREGION' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWREGION' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_AWUSER' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_AWUSER' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_WVALID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_WVALID' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_WREADY' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_WDATA' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_WDATA' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_WSTRB' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_WSTRB' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_WLAST' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_WLAST' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_WID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_WID' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_WUSER' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_WUSER' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARVALID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARVALID' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARREADY' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARADDR' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARADDR' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARID' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARLEN' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARLEN' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARSIZE' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARSIZE' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARBURST' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARBURST' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARLOCK' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARLOCK' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARCACHE' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARCACHE' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARPROT' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARPROT' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARQOS' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARQOS' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARREGION' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARREGION' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_ARUSER' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_ARUSER' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_RVALID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_RREADY' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_RREADY' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_RDATA' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_RLAST' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_RID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_RUSER' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_RRESP' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_BVALID' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_BREADY' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
WARNING: [RTGEN 206-101] Setting dangling out port 'complex_matmul/m_axi_mem_BREADY' to 0.
WARNING: [RTGEN 206-101] Port 'complex_matmul/m_axi_mem_BRESP' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_latency 0 
INFO: [HLS 200-1510] Running: source ./complex_proj/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name complex_matmul complex_matmul 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-10] Analyzing design file 'complex_matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.44 seconds. CPU system time: 0.39 seconds. Elapsed time: 4.43 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'INNER_ROW_COL_MULT' is marked as complete unroll implied by the pipeline pragma (complex_matmul.cpp:68:5)
INFO: [HLS 214-186] Unrolling loop 'INNER_ROW_COL_MULT' (complex_matmul.cpp:68:5) in function 'complex_matmul' completely with a factor of 20 (complex_matmul.cpp:17:0)
INFO: [HLS 214-270] Inferring pragma 'array_partition type=cyclic factor=10 dim=1' for array 'MatA.imag' due to pipeline pragma (complex_matmul.cpp:64:9)
INFO: [HLS 214-270] Inferring pragma 'array_partition type=cyclic factor=10 dim=1' for array 'MatA.real' due to pipeline pragma (complex_matmul.cpp:64:9)
INFO: [HLS 214-270] Inferring pragma 'array_partition type=cyclic factor=20 dim=1' for array 'MatC.imag' due to pipeline pragma (complex_matmul.cpp:64:9)
INFO: [HLS 214-270] Inferring pragma 'array_partition type=cyclic factor=20 dim=1' for array 'MatC.real' due to pipeline pragma (complex_matmul.cpp:64:9)
INFO: [HLS 214-248] Applying array_partition to 'MatA.real': Cyclic partitioning with factor 10 on dimension 1. (complex_matmul.cpp:22:11)
INFO: [HLS 214-248] Applying array_partition to 'MatA.imag': Cyclic partitioning with factor 10 on dimension 1. (complex_matmul.cpp:22:11)
INFO: [HLS 214-248] Applying array_partition to 'MatC.real': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:24:11)
INFO: [HLS 214-248] Applying array_partition to 'MatC.imag': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:24:11)
INFO: [HLS 214-115] Multiple burst reads of variable length and bit width 32 has been inferred on bundle 'mem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (complex_matmul.cpp:33:24)
INFO: [HLS 214-115] Multiple burst reads of variable length and bit width 32 has been inferred on bundle 'mem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (complex_matmul.cpp:42:24)
INFO: [HLS 214-115] Multiple burst writes of variable length and bit width 32 has been inferred on bundle 'mem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (complex_matmul.cpp:86:29)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i32.s_struct.complex_ts' into 'complex_matmul(complex_t (*) [150], complex_t (*) [200], complex_t (*) [200])' (complex_matmul.cpp:86:29)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.74 seconds. CPU system time: 0.28 seconds. Elapsed time: 3.7 seconds; current allocated memory: 760.562 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 760.562 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.22 seconds; current allocated memory: 767.133 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.09 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.11 seconds; current allocated memory: 772.090 MB.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLS' (complex_matmul.cpp:32) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_B_COLS' (complex_matmul.cpp:41) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS_INIT' (complex_matmul.cpp:51) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS' (complex_matmul.cpp:85) in function 'complex_matmul' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.25 seconds. CPU system time: 0 seconds. Elapsed time: 0.29 seconds; current allocated memory: 803.250 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWS' (complex_matmul.cpp:30:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_B_ROWS' (complex_matmul.cpp:39:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS_INIT' (complex_matmul.cpp:49:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_COLS' (complex_matmul.cpp:61:17) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_ROWS' (complex_matmul.cpp:59:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS' (complex_matmul.cpp:83:13) in function 'complex_matmul'.
INFO: [HLS 200-472] Inferring partial write operation for 'MatA.real.V' (complex_matmul.cpp:33:24)
INFO: [HLS 200-472] Inferring partial write operation for 'MatB.real.V' (complex_matmul.cpp:42:24)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.real.V' (complex_matmul.cpp:52:29)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.imag.V' (complex_matmul.cpp:53:29)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.real.V' 
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.imag.V' 
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.15 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.2 seconds; current allocated memory: 845.316 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'complex_matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln30_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln30) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWS_MAT_A_COLS'.
WARNING: [HLS 200-880] The II Violation in module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' (loop 'MAT_A_ROWS_MAT_A_COLS'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read operation ('mem_addr_read_1', complex_matmul.cpp:33) on port 'mem' (complex_matmul.cpp:33) and bus read operation ('mem_addr_read', complex_matmul.cpp:33) on port 'mem' (complex_matmul.cpp:33).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 16, loop 'MAT_A_ROWS_MAT_A_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.1 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.23 seconds; current allocated memory: 847.352 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 847.352 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln39_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln39) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_B_ROWS_MAT_B_COLS'.
WARNING: [HLS 200-880] The II Violation in module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' (loop 'MAT_B_ROWS_MAT_B_COLS'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read operation ('mem_addr_read_1', complex_matmul.cpp:42) on port 'mem' (complex_matmul.cpp:42) and bus read operation ('mem_addr_read', complex_matmul.cpp:42) on port 'mem' (complex_matmul.cpp:42).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 16, loop 'MAT_B_ROWS_MAT_B_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.09 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.14 seconds; current allocated memory: 847.375 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 847.418 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln49_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 849.223 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 849.223 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=add_ln232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln59_2) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.34 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.65 seconds; current allocated memory: 853.879 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.15 seconds. CPU system time: 0 seconds. Elapsed time: 0.21 seconds; current allocated memory: 853.879 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln83_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln83_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_MAT_C_COLS'.
WARNING: [HLS 200-880] The II Violation in module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' (loop 'MAT_C_ROWS_MAT_C_COLS'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus write operation ('mem_addr_write_ln86', complex_matmul.cpp:86) on port 'mem' (complex_matmul.cpp:86) and bus write operation ('mem_addr_write_ln86', complex_matmul.cpp:86) on port 'mem' (complex_matmul.cpp:86).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 19, loop 'MAT_C_ROWS_MAT_C_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.28 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.35 seconds; current allocated memory: 854.605 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 854.906 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 855.426 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.13 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 855.895 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' pipeline 'MAT_A_ROWS_MAT_A_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_7ns_10ns_17_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_5ns_4_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.24 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.34 seconds; current allocated memory: 857.332 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' pipeline 'MAT_B_ROWS_MAT_B_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_8ns_15_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_10ns_18_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.17 seconds. CPU system time: 0 seconds. Elapsed time: 0.27 seconds; current allocated memory: 859.438 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.14 seconds. CPU system time: 0 seconds. Elapsed time: 0.22 seconds; current allocated memory: 862.684 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_4ns_1ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 40 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_8ns_15_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_mulsub_16s_16s_16ns_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16s_16s_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.19 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.31 seconds; current allocated memory: 869.863 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' pipeline 'MAT_C_ROWS_MAT_C_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_7ns_10ns_17_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_207_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_7_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.51 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.68 seconds; current allocated memory: 879.711 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/mem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatA_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatB_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatC_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'complex_matmul' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'MatA_DRAM', 'MatB_DRAM', 'MatC_DRAM' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.24 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.37 seconds; current allocated memory: 888.359 MB.
INFO: [RTMG 210-278] Implementing memory 'complex_matmul_MatA_real_V_RAM_AUTO_1R1W_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'complex_matmul_MatB_real_V_RAM_AUTO_1R1W_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'complex_matmul_MatC_real_V_RAM_AUTO_1R1W_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1.18 seconds. CPU system time: 0.06 seconds. Elapsed time: 2.5 seconds; current allocated memory: 895.461 MB.
INFO: [HLS 200-1603] Design has inferred MAXI bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0.45 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.58 seconds; current allocated memory: 905.602 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for complex_matmul.
INFO: [VLOG 209-307] Generating Verilog RTL for complex_matmul.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_latency 0 
INFO: [HLS 200-1510] Running: source ./complex_proj/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name complex_matmul complex_matmul 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-10] Analyzing design file 'complex_matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.4 seconds. CPU system time: 0.37 seconds. Elapsed time: 4.03 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-115] Multiple burst reads of variable length and bit width 32 has been inferred on bundle 'mem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (complex_matmul.cpp:33:24)
INFO: [HLS 214-115] Multiple burst reads of variable length and bit width 32 has been inferred on bundle 'mem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (complex_matmul.cpp:42:24)
INFO: [HLS 214-115] Multiple burst writes of variable length and bit width 32 has been inferred on bundle 'mem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (complex_matmul.cpp:86:29)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i32.s_struct.complex_ts' into 'complex_matmul(complex_t (*) [150], complex_t (*) [200], complex_t (*) [200])' (complex_matmul.cpp:86:29)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.44 seconds. CPU system time: 0.29 seconds. Elapsed time: 3.14 seconds; current allocated memory: 760.449 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 760.449 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 764.961 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.03 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.05 seconds; current allocated memory: 770.043 MB.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLS' (complex_matmul.cpp:32) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_B_COLS' (complex_matmul.cpp:41) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS_INIT' (complex_matmul.cpp:51) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'INNER_ROW_COL_MULT' (complex_matmul.cpp:68) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS' (complex_matmul.cpp:85) in function 'complex_matmul' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 797.746 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWS' (complex_matmul.cpp:30:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_B_ROWS' (complex_matmul.cpp:39:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS_INIT' (complex_matmul.cpp:49:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'INNER_ROW_COL_PIPELINE' (complex_matmul.cpp:63:12) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_COLS' (complex_matmul.cpp:61:17) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_ROWS' (complex_matmul.cpp:59:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS' (complex_matmul.cpp:83:13) in function 'complex_matmul'.
INFO: [HLS 200-472] Inferring partial write operation for 'MatA.real.V' (complex_matmul.cpp:33:24)
INFO: [HLS 200-472] Inferring partial write operation for 'MatB.real.V' (complex_matmul.cpp:42:24)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.real.V' (complex_matmul.cpp:52:29)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.imag.V' (complex_matmul.cpp:53:29)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.real.V' 
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.imag.V' 
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.12 seconds; current allocated memory: 838.977 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'complex_matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln30_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln30) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWS_MAT_A_COLS'.
WARNING: [HLS 200-880] The II Violation in module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' (loop 'MAT_A_ROWS_MAT_A_COLS'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read operation ('mem_addr_read_1', complex_matmul.cpp:33) on port 'mem' (complex_matmul.cpp:33) and bus read operation ('mem_addr_read', complex_matmul.cpp:33) on port 'mem' (complex_matmul.cpp:33).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 16, loop 'MAT_A_ROWS_MAT_A_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.07 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.14 seconds; current allocated memory: 839.801 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 839.977 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln39_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln39) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_B_ROWS_MAT_B_COLS'.
WARNING: [HLS 200-880] The II Violation in module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' (loop 'MAT_B_ROWS_MAT_B_COLS'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read operation ('mem_addr_read_1', complex_matmul.cpp:42) on port 'mem' (complex_matmul.cpp:42) and bus read operation ('mem_addr_read', complex_matmul.cpp:42) on port 'mem' (complex_matmul.cpp:42).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 16, loop 'MAT_B_ROWS_MAT_B_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 840.363 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 840.488 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln52) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 4, loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 840.680 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 840.793 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_OUTER_ROWS_INNER_ROW_COL_PIPELINE_INNER_ROW_COL_MULT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln59_2) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'OUTER_ROWS_INNER_ROW_COL_PIPELINE_INNER_ROW_COL_MULT'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 13, loop 'OUTER_ROWS_INNER_ROW_COL_PIPELINE_INNER_ROW_COL_MULT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 842.562 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 842.562 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln83) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_MAT_C_COLS'.
WARNING: [HLS 200-880] The II Violation in module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' (loop 'MAT_C_ROWS_MAT_C_COLS'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus write operation ('mem_addr_write_ln86', complex_matmul.cpp:86) on port 'mem' (complex_matmul.cpp:86) and bus write operation ('mem_addr_write_ln86', complex_matmul.cpp:86) on port 'mem' (complex_matmul.cpp:86).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 14, loop 'MAT_C_ROWS_MAT_C_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.13 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.19 seconds; current allocated memory: 842.562 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 842.562 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 842.617 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 842.887 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' pipeline 'MAT_A_ROWS_MAT_A_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_7ns_8ns_8ns_14_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_7ns_10ns_17_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.22 seconds; current allocated memory: 842.957 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' pipeline 'MAT_B_ROWS_MAT_B_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_8ns_15_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_10ns_18_4_1': 1 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_latency 0 
INFO: [HLS 200-1510] Running: source ./complex_proj/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name complex_matmul complex_matmul 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-10] Analyzing design file 'complex_matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.41 seconds. CPU system time: 0.38 seconds. Elapsed time: 4.06 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'INNER_ROW_COL_MULT' is marked as complete unroll implied by the pipeline pragma (complex_matmul.cpp:72:5)
INFO: [HLS 214-186] Unrolling loop 'INNER_ROW_COL_MULT' (complex_matmul.cpp:72:5) in function 'complex_matmul' completely with a factor of 20 (complex_matmul.cpp:17:0)
INFO: [HLS 214-248] Applying array_partition to 'MatA.real': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:22:11)
INFO: [HLS 214-248] Applying array_partition to 'MatA.imag': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:22:11)
INFO: [HLS 214-248] Applying array_partition to 'MatB.real': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:23:11)
INFO: [HLS 214-248] Applying array_partition to 'MatB.imag': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:23:11)
INFO: [HLS 214-248] Applying array_partition to 'MatC.real': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:24:11)
INFO: [HLS 214-248] Applying array_partition to 'MatC.imag': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:24:11)
INFO: [HLS 214-115] Multiple burst reads of variable length and bit width 32 has been inferred on bundle 'mem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (complex_matmul.cpp:37:24)
INFO: [HLS 214-115] Multiple burst reads of variable length and bit width 32 has been inferred on bundle 'mem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (complex_matmul.cpp:46:24)
INFO: [HLS 214-115] Multiple burst writes of variable length and bit width 32 has been inferred on bundle 'mem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (complex_matmul.cpp:90:29)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i32.s_struct.complex_ts' into 'complex_matmul(complex_t (*) [150], complex_t (*) [200], complex_t (*) [200])' (complex_matmul.cpp:90:29)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.75 seconds. CPU system time: 0.26 seconds. Elapsed time: 3.46 seconds; current allocated memory: 760.562 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 760.562 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.12 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 767.695 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.15 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 772.750 MB.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLS' (complex_matmul.cpp:36) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_B_COLS' (complex_matmul.cpp:45) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS_INIT' (complex_matmul.cpp:55) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS' (complex_matmul.cpp:89) in function 'complex_matmul' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.34 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.39 seconds; current allocated memory: 805.617 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWS' (complex_matmul.cpp:34:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_B_ROWS' (complex_matmul.cpp:43:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS_INIT' (complex_matmul.cpp:53:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_COLS' (complex_matmul.cpp:65:17) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_ROWS' (complex_matmul.cpp:63:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS' (complex_matmul.cpp:87:13) in function 'complex_matmul'.
INFO: [HLS 200-472] Inferring partial write operation for 'MatA.real.V' (complex_matmul.cpp:37:24)
INFO: [HLS 200-472] Inferring partial write operation for 'MatB.real.V' (complex_matmul.cpp:46:24)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.real.V' (complex_matmul.cpp:56:29)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.imag.V' (complex_matmul.cpp:57:29)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.real.V' 
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.imag.V' 
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.26 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.31 seconds; current allocated memory: 849.996 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'complex_matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln34_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln34_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWS_MAT_A_COLS'.
WARNING: [HLS 200-880] The II Violation in module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' (loop 'MAT_A_ROWS_MAT_A_COLS'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read operation ('mem_addr_read_1', complex_matmul.cpp:37) on port 'mem' (complex_matmul.cpp:37) and bus read operation ('mem_addr_read', complex_matmul.cpp:37) on port 'mem' (complex_matmul.cpp:37).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 16, loop 'MAT_A_ROWS_MAT_A_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.13 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.22 seconds; current allocated memory: 852.805 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 852.805 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln43_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln43_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_18'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'MAT_B_ROWS_MAT_B_COLS'.
WARNING: [HLS 200-880] The II Violation in module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' (loop 'MAT_B_ROWS_MAT_B_COLS'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read operation ('mem_addr_read_1', complex_matmul.cpp:46) on port 'mem' (complex_matmul.cpp:46) and bus read operation ('mem_addr_read', complex_matmul.cpp:46) on port 'mem' (complex_matmul.cpp:46).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 16, loop 'MAT_B_ROWS_MAT_B_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.35 seconds; current allocated memory: 854.379 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 854.379 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln53_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.12 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 855.418 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 855.418 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=empty_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 19, loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.33 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.83 seconds; current allocated memory: 875.535 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.25 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.31 seconds; current allocated memory: 875.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln87_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln87_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_MAT_C_COLS'.
WARNING: [HLS 200-880] The II Violation in module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' (loop 'MAT_C_ROWS_MAT_C_COLS'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus write operation ('mem_addr_write_ln90', complex_matmul.cpp:90) on port 'mem' (complex_matmul.cpp:90) and bus write operation ('mem_addr_write_ln90', complex_matmul.cpp:90) on port 'mem' (complex_matmul.cpp:90).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 19, loop 'MAT_C_ROWS_MAT_C_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.35 seconds. CPU system time: 0 seconds. Elapsed time: 0.46 seconds; current allocated memory: 875.535 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 875.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.11 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 875.535 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.15 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.19 seconds; current allocated memory: 875.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' pipeline 'MAT_A_ROWS_MAT_A_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_7ns_10ns_17_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.3 seconds. CPU system time: 0 seconds. Elapsed time: 0.39 seconds; current allocated memory: 875.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' pipeline 'MAT_B_ROWS_MAT_B_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_10ns_18_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_5_12_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.21 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.33 seconds; current allocated memory: 875.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.18 seconds. CPU system time: 0 seconds. Elapsed time: 0.29 seconds; current allocated memory: 875.910 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' is 15105 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 40 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_mulsub_16s_16s_16ns_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_9ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16s_16s_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_205_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_208_16_1_1': 4 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_latency 0 
INFO: [HLS 200-1510] Running: source ./complex_proj/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name complex_matmul complex_matmul 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-10] Analyzing design file 'complex_matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.42 seconds. CPU system time: 0.38 seconds. Elapsed time: 4.07 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'INNER_ROW_COL_MULT' is marked as complete unroll implied by the pipeline pragma (complex_matmul.cpp:73:5)
INFO: [HLS 214-186] Unrolling loop 'INNER_ROW_COL_MULT' (complex_matmul.cpp:73:5) in function 'complex_matmul' completely with a factor of 20 (complex_matmul.cpp:17:0)
INFO: [HLS 214-248] Applying array_partition to 'MatA.real': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:22:11)
INFO: [HLS 214-248] Applying array_partition to 'MatA.imag': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:22:11)
INFO: [HLS 214-248] Applying array_partition to 'MatB.real': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:23:11)
INFO: [HLS 214-248] Applying array_partition to 'MatB.imag': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:23:11)
INFO: [HLS 214-248] Applying array_partition to 'MatC.real': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:24:11)
INFO: [HLS 214-248] Applying array_partition to 'MatC.imag': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:24:11)
INFO: [HLS 214-115] Multiple burst reads of variable length and bit width 32 has been inferred on bundle 'mem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (complex_matmul.cpp:47:24)
INFO: [HLS 214-115] Multiple burst writes of variable length and bit width 32 has been inferred on bundle 'mem'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. (complex_matmul.cpp:91:29)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i32.s_struct.complex_ts' into 'complex_matmul(complex_t (*) [150], complex_t (*) [200], complex_t (*) [200])' (complex_matmul.cpp:91:29)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.73 seconds. CPU system time: 0.29 seconds. Elapsed time: 3.45 seconds; current allocated memory: 760.594 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 760.594 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1.2 seconds. CPU system time: 0 seconds. Elapsed time: 1.23 seconds; current allocated memory: 783.770 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1.17 seconds. CPU system time: 0 seconds. Elapsed time: 1.18 seconds; current allocated memory: 785.145 MB.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLS' (complex_matmul.cpp:36) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_B_COLS' (complex_matmul.cpp:46) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS_INIT' (complex_matmul.cpp:56) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS' (complex_matmul.cpp:90) in function 'complex_matmul' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.36 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.41 seconds; current allocated memory: 811.043 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWS' (complex_matmul.cpp:34:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_B_ROWS' (complex_matmul.cpp:44:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS_INIT' (complex_matmul.cpp:54:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_COLS' (complex_matmul.cpp:66:17) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_ROWS' (complex_matmul.cpp:64:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS' (complex_matmul.cpp:88:13) in function 'complex_matmul'.
INFO: [HLS 200-472] Inferring partial write operation for 'MatA.real.V' (complex_matmul.cpp:37:29)
INFO: [HLS 200-472] Inferring partial write operation for 'MatA.imag.V' (complex_matmul.cpp:38:29)
INFO: [HLS 200-472] Inferring partial write operation for 'MatB.real.V' (complex_matmul.cpp:47:24)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.real.V' (complex_matmul.cpp:57:29)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.imag.V' (complex_matmul.cpp:58:29)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.real.V' 
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.imag.V' 
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.49 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.55 seconds; current allocated memory: 859.414 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'complex_matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln34_2) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWS_MAT_A_COLS'.
WARNING: [HLS 200-885] The II Violation in module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' (loop 'MAT_A_ROWS_MAT_A_COLS'): Unable to schedule bus request operation ('mem_load_1_req', complex_matmul.cpp:37) on port 'mem' (complex_matmul.cpp:37) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 14, loop 'MAT_A_ROWS_MAT_A_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.14 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.23 seconds; current allocated memory: 862.676 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 862.676 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln44_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln44_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_18'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'MAT_B_ROWS_MAT_B_COLS'.
WARNING: [HLS 200-880] The II Violation in module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' (loop 'MAT_B_ROWS_MAT_B_COLS'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read operation ('mem_addr_read_1', complex_matmul.cpp:47) on port 'mem' (complex_matmul.cpp:47) and bus read operation ('mem_addr_read', complex_matmul.cpp:47) on port 'mem' (complex_matmul.cpp:47).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 16, loop 'MAT_B_ROWS_MAT_B_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.19 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.36 seconds; current allocated memory: 863.816 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 863.816 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln54_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.12 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 864.871 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 864.871 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=empty_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_imag_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_real_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 19, loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.35 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.86 seconds; current allocated memory: 888.410 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.25 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.31 seconds; current allocated memory: 888.410 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln88_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln88_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_MAT_C_COLS'.
WARNING: [HLS 200-880] The II Violation in module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' (loop 'MAT_C_ROWS_MAT_C_COLS'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus write operation ('mem_addr_write_ln91', complex_matmul.cpp:91) on port 'mem' (complex_matmul.cpp:91) and bus write operation ('mem_addr_write_ln91', complex_matmul.cpp:91) on port 'mem' (complex_matmul.cpp:91).
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 19, loop 'MAT_C_ROWS_MAT_C_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.36 seconds. CPU system time: 0 seconds. Elapsed time: 0.46 seconds; current allocated memory: 888.410 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 888.410 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.11 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 888.410 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 888.410 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' pipeline 'MAT_A_ROWS_MAT_A_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_10ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.3 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.39 seconds; current allocated memory: 888.410 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' pipeline 'MAT_B_ROWS_MAT_B_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_10ns_18_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_5_12_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.21 seconds. CPU system time: 0 seconds. Elapsed time: 0.33 seconds; current allocated memory: 888.410 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.19 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.28 seconds; current allocated memory: 888.410 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' is 15105 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 40 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_mulsub_16s_16s_16ns_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_9ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16s_16s_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_205_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_208_16_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_8_12_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.26 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.41 seconds; current allocated memory: 897.965 MB.
INFO: [HLS 200-10]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_latency 0 
INFO: [HLS 200-1510] Running: source ./complex_proj/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name complex_matmul complex_matmul 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-10] Analyzing design file 'complex_matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.46 seconds. CPU system time: 0.4 seconds. Elapsed time: 4.14 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'INNER_ROW_COL_MULT' is marked as complete unroll implied by the pipeline pragma (complex_matmul.cpp:83:5)
INFO: [HLS 214-186] Unrolling loop 'INNER_ROW_COL_MULT' (complex_matmul.cpp:83:5) in function 'complex_matmul' completely with a factor of 20 (complex_matmul.cpp:17:0)
INFO: [HLS 214-248] Applying array_partition to 'MatA': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:22:7)
INFO: [HLS 214-248] Applying array_partition to 'MatB': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:23:7)
INFO: [HLS 214-248] Applying array_partition to 'MatC': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:24:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatA': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:26:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatB': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:27:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatC': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:28:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_int<16>s' into 'complex_matmul(complex_t (*) [150], complex_t (*) [200], complex_t (*) [200])' (complex_matmul.cpp:101:34)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.78 seconds. CPU system time: 0.3 seconds. Elapsed time: 3.49 seconds; current allocated memory: 760.562 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 760.562 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1.57 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.62 seconds; current allocated memory: 786.156 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1.49 seconds. CPU system time: 0 seconds. Elapsed time: 1.51 seconds; current allocated memory: 787.852 MB.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLS' (complex_matmul.cpp:45) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_B_COLS' (complex_matmul.cpp:55) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS_INIT' (complex_matmul.cpp:66) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS' (complex_matmul.cpp:100) in function 'complex_matmul' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.7 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.75 seconds; current allocated memory: 811.223 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWS' (complex_matmul.cpp:43:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_B_ROWS' (complex_matmul.cpp:53:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS_INIT' (complex_matmul.cpp:64:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_COLS' (complex_matmul.cpp:76:17) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_ROWS' (complex_matmul.cpp:74:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS' (complex_matmul.cpp:98:13) in function 'complex_matmul'.
INFO: [HLS 200-472] Inferring partial write operation for 'MatA.V' (complex_matmul.cpp:46:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatA.V' (complex_matmul.cpp:47:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatB.V' (complex_matmul.cpp:56:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatB.V' (complex_matmul.cpp:57:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.V' (complex_matmul.cpp:67:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatC.V' (complex_matmul.cpp:68:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.V' 
INFO: [HLS 200-472] Inferring partial write operation for 'cMatC.V' 
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.71 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.77 seconds; current allocated memory: 859.633 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'complex_matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln43_2) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWS_MAT_A_COLS'.
WARNING: [HLS 200-885] The II Violation in module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' (loop 'MAT_A_ROWS_MAT_A_COLS'): Unable to schedule bus request operation ('mem_load_1_req', complex_matmul.cpp:46) on port 'mem' (complex_matmul.cpp:46) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 14, loop 'MAT_A_ROWS_MAT_A_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.14 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.23 seconds; current allocated memory: 862.402 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 862.402 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln53_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_18'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'MAT_B_ROWS_MAT_B_COLS'.
WARNING: [HLS 200-885] The II Violation in module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' (loop 'MAT_B_ROWS_MAT_B_COLS'): Unable to schedule bus request operation ('mem_load_3_req', complex_matmul.cpp:56) on port 'mem' (complex_matmul.cpp:56) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 14, loop 'MAT_B_ROWS_MAT_B_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.18 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.36 seconds; current allocated memory: 864.051 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 864.051 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln64_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.13 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 864.789 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.07 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.1 seconds; current allocated memory: 864.789 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=empty_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 19, loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.34 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.83 seconds; current allocated memory: 885.172 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.26 seconds. CPU system time: 0 seconds. Elapsed time: 0.31 seconds; current allocated memory: 885.172 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln98_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln98_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_MAT_C_COLS'.
WARNING: [HLS 200-885] The II Violation in module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' (loop 'MAT_C_ROWS_MAT_C_COLS'): Unable to schedule bus request operation ('empty_32', complex_matmul.cpp:102) on port 'mem' (complex_matmul.cpp:102) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 19, loop 'MAT_C_ROWS_MAT_C_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.34 seconds. CPU system time: 0 seconds. Elapsed time: 0.45 seconds; current allocated memory: 885.172 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.13 seconds; current allocated memory: 885.172 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 885.172 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 885.172 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' pipeline 'MAT_A_ROWS_MAT_A_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_10ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.31 seconds. CPU system time: 0 seconds. Elapsed time: 0.4 seconds; current allocated memory: 885.172 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' pipeline 'MAT_B_ROWS_MAT_B_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_5_12_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.21 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.34 seconds; current allocated memory: 885.172 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.2 seconds. CPU system time: 0 seconds. Elapsed time: 0.29 seconds; current allocated memory: 885.172 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' is 15105 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 40 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_mulsub_16s_16s_16ns_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_9ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16s_16s_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_205_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_208_16_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_8_12_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.27 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.42 seconds; current allocated memory: 898.062 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' pipeline 'MAT_C_ROWS_MAT_C_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_7ns_10ns_17_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_207_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_7_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1.08 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.3 seconds; current allocated memory: 913.082 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_latency 0 
INFO: [HLS 200-1510] Running: source ./complex_proj/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name complex_matmul complex_matmul 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-10] Analyzing design file 'complex_matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.53 seconds. CPU system time: 0.37 seconds. Elapsed time: 4.15 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'INNER_ROW_COL_MULT' is marked as complete unroll implied by the pipeline pragma (complex_matmul.cpp:83:5)
INFO: [HLS 214-186] Unrolling loop 'INNER_ROW_COL_MULT' (complex_matmul.cpp:83:5) in function 'complex_matmul' completely with a factor of 20 (complex_matmul.cpp:17:0)
INFO: [HLS 214-248] Applying array_partition to 'MatA': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:22:7)
INFO: [HLS 214-248] Applying array_partition to 'MatB': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:23:7)
INFO: [HLS 214-248] Applying array_partition to 'MatC': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:24:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatA': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:26:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatB': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:27:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatC': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:28:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_int<16>s' into 'complex_matmul(complex_t (*) [150], complex_t (*) [200], complex_t (*) [200])' (complex_matmul.cpp:101:34)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.72 seconds. CPU system time: 0.3 seconds. Elapsed time: 3.43 seconds; current allocated memory: 760.562 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 760.562 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1.58 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.63 seconds; current allocated memory: 786.133 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1.45 seconds. CPU system time: 0 seconds. Elapsed time: 1.47 seconds; current allocated memory: 787.836 MB.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLS' (complex_matmul.cpp:45) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_B_COLS' (complex_matmul.cpp:55) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS_INIT' (complex_matmul.cpp:66) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS' (complex_matmul.cpp:100) in function 'complex_matmul' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.67 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.71 seconds; current allocated memory: 811.195 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWS' (complex_matmul.cpp:43:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_B_ROWS' (complex_matmul.cpp:53:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS_INIT' (complex_matmul.cpp:64:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_COLS' (complex_matmul.cpp:76:17) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_ROWS' (complex_matmul.cpp:74:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS' (complex_matmul.cpp:98:13) in function 'complex_matmul'.
INFO: [HLS 200-472] Inferring partial write operation for 'MatA.V' (complex_matmul.cpp:46:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatA.V' (complex_matmul.cpp:47:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatB.V' (complex_matmul.cpp:56:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatB.V' (complex_matmul.cpp:57:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.V' (complex_matmul.cpp:67:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatC.V' (complex_matmul.cpp:68:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.V' 
INFO: [HLS 200-472] Inferring partial write operation for 'cMatC.V' 
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.66 seconds. CPU system time: 0 seconds. Elapsed time: 0.72 seconds; current allocated memory: 859.621 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'complex_matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln43_2) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWS_MAT_A_COLS'.
WARNING: [HLS 200-885] The II Violation in module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' (loop 'MAT_A_ROWS_MAT_A_COLS'): Unable to schedule bus request operation ('mem_load_1_req', complex_matmul.cpp:46) on port 'mem' (complex_matmul.cpp:46) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 14, loop 'MAT_A_ROWS_MAT_A_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.14 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.22 seconds; current allocated memory: 862.383 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 862.383 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln53_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_18'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'MAT_B_ROWS_MAT_B_COLS'.
WARNING: [HLS 200-885] The II Violation in module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' (loop 'MAT_B_ROWS_MAT_B_COLS'): Unable to schedule bus request operation ('mem_load_3_req', complex_matmul.cpp:56) on port 'mem' (complex_matmul.cpp:56) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 14, loop 'MAT_B_ROWS_MAT_B_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.19 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.36 seconds; current allocated memory: 864.145 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 864.145 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln64_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.14 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 864.777 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.06 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.1 seconds; current allocated memory: 864.777 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=empty_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 19, loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.35 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.81 seconds; current allocated memory: 885.168 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.26 seconds. CPU system time: 0 seconds. Elapsed time: 0.32 seconds; current allocated memory: 885.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln98_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln98_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_MAT_C_COLS'.
WARNING: [HLS 200-885] The II Violation in module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' (loop 'MAT_C_ROWS_MAT_C_COLS'): Unable to schedule bus request operation ('empty_32', complex_matmul.cpp:102) on port 'mem' (complex_matmul.cpp:102) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 19, loop 'MAT_C_ROWS_MAT_C_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.34 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.44 seconds; current allocated memory: 885.168 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 885.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 885.168 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.15 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 885.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' pipeline 'MAT_A_ROWS_MAT_A_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_10ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.31 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.4 seconds; current allocated memory: 885.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' pipeline 'MAT_B_ROWS_MAT_B_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_5_12_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.22 seconds. CPU system time: 0 seconds. Elapsed time: 0.33 seconds; current allocated memory: 885.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.19 seconds. CPU system time: 0 seconds. Elapsed time: 0.29 seconds; current allocated memory: 885.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' is 15105 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 40 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_mulsub_16s_16s_16ns_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_9ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16s_16s_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_205_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_208_16_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_8_12_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.26 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.42 seconds; current allocated memory: 898.078 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' pipeline 'MAT_C_ROWS_MAT_C_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_7ns_10ns_17_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_207_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_7_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1.08 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.3 seconds; current allocated memory: 913.086 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_latency 0 
INFO: [HLS 200-1510] Running: source ./complex_proj/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name complex_matmul complex_matmul 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-10] Analyzing design file 'complex_matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.42 seconds. CPU system time: 0.35 seconds. Elapsed time: 4.04 seconds; current allocated memory: 760.168 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'INNER_ROW_COL_MULT' is marked as complete unroll implied by the pipeline pragma (complex_matmul.cpp:93:5)
INFO: [HLS 214-186] Unrolling loop 'INNER_ROW_COL_MULT' (complex_matmul.cpp:93:5) in function 'complex_matmul' completely with a factor of 20 (complex_matmul.cpp:17:0)
INFO: [HLS 214-248] Applying array_partition to 'MatA': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:22:7)
INFO: [HLS 214-248] Applying array_partition to 'MatB': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:23:7)
INFO: [HLS 214-248] Applying array_partition to 'MatC': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:24:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatA': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:26:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatB': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:27:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatC': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:28:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_int<16>s' into 'complex_matmul(complex_t (*) [150], complex_t (*) [200], complex_t (*) [200])' (complex_matmul.cpp:111:34)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.71 seconds. CPU system time: 0.28 seconds. Elapsed time: 3.41 seconds; current allocated memory: 760.562 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 760.562 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1.69 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.74 seconds; current allocated memory: 781.426 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1.62 seconds. CPU system time: 0 seconds. Elapsed time: 1.65 seconds; current allocated memory: 783.289 MB.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLS' (complex_matmul.cpp:45) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLSc' (complex_matmul.cpp:55) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_B_COLS' (complex_matmul.cpp:65) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS_INIT' (complex_matmul.cpp:76) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS' (complex_matmul.cpp:110) in function 'complex_matmul' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'complex_matmul' (complex_matmul.cpp:13)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.9 seconds. CPU system time: 0 seconds. Elapsed time: 1.95 seconds; current allocated memory: 807.594 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWS' (complex_matmul.cpp:43:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWSc' (complex_matmul.cpp:53:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_B_ROWS' (complex_matmul.cpp:63:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS_INIT' (complex_matmul.cpp:74:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_COLS' (complex_matmul.cpp:86:17) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_ROWS' (complex_matmul.cpp:84:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS' (complex_matmul.cpp:108:13) in function 'complex_matmul'.
INFO: [HLS 200-472] Inferring partial write operation for 'MatA.V' (complex_matmul.cpp:46:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatA.V' (complex_matmul.cpp:57:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatB.V' (complex_matmul.cpp:66:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatB.V' (complex_matmul.cpp:67:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.V' (complex_matmul.cpp:77:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatC.V' (complex_matmul.cpp:78:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.V' 
INFO: [HLS 200-472] Inferring partial write operation for 'cMatC.V' 
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 15000 on port 'mem' (complex_matmul.cpp:57:25). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 15000 on port 'mem' (complex_matmul.cpp:46:24). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.82 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.89 seconds; current allocated memory: 856.914 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'complex_matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln43_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_A_ROWS_MAT_A_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.1 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.2 seconds; current allocated memory: 859.000 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.12 seconds; current allocated memory: 859.000 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln53_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWSc_MAT_A_COLSc'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_A_ROWSc_MAT_A_COLSc'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.11 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 860.129 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 860.129 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln63_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_18'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'MAT_B_ROWS_MAT_B_COLS'.
WARNING: [HLS 200-885] The II Violation in module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' (loop 'MAT_B_ROWS_MAT_B_COLS'): Unable to schedule bus request operation ('mem_load_3_req', complex_matmul.cpp:66) on port 'mem' (complex_matmul.cpp:66) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 14, loop 'MAT_B_ROWS_MAT_B_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.18 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.36 seconds; current allocated memory: 862.301 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 862.301 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln74_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.13 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.19 seconds; current allocated memory: 862.996 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 862.996 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=empty_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 19, loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.35 seconds. CPU system time: 0.03 seconds. Elapsed time: 1.86 seconds; current allocated memory: 886.516 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.25 seconds. CPU system time: 0 seconds. Elapsed time: 0.31 seconds; current allocated memory: 886.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln108_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln108_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_MAT_C_COLS'.
WARNING: [HLS 200-885] The II Violation in module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' (loop 'MAT_C_ROWS_MAT_C_COLS'): Unable to schedule bus request operation ('empty_33', complex_matmul.cpp:112) on port 'mem' (complex_matmul.cpp:112) due to limited memory ports (II = 1). Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 2, Depth = 19, loop 'MAT_C_ROWS_MAT_C_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.36 seconds. CPU system time: 0 seconds. Elapsed time: 0.45 seconds; current allocated memory: 886.516 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 886.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.12 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 886.516 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 886.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.3 seconds. CPU system time: 0 seconds. Elapsed time: 0.37 seconds; current allocated memory: 886.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.15 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.23 seconds; current allocated memory: 886.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' pipeline 'MAT_B_ROWS_MAT_B_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_5_12_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.26 seconds; current allocated memory: 886.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.2 seconds. CPU system time: 0 seconds. Elapsed time: 0.29 seconds; current allocated memory: 886.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' is 15105 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 40 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1510] Running: set_part xc7z020clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 760.117 MB.
INFO: [HLS 200-10] Analyzing design file 'complex_matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 3.41 seconds. CPU system time: 0.39 seconds. Elapsed time: 4.07 seconds; current allocated memory: 760.117 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'INNER_ROW_COL_MULT' is marked as complete unroll implied by the pipeline pragma (complex_matmul.cpp:98:5)
INFO: [HLS 214-186] Unrolling loop 'INNER_ROW_COL_MULT' (complex_matmul.cpp:98:5) in function 'complex_matmul' completely with a factor of 20 (complex_matmul.cpp:17:0)
INFO: [HLS 214-248] Applying array_partition to 'MatA': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:22:7)
INFO: [HLS 214-248] Applying array_partition to 'MatB': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:23:7)
INFO: [HLS 214-248] Applying array_partition to 'MatC': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:24:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatA': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:26:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatB': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:27:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatC': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:28:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_int<16>s' into 'complex_matmul(complex_t (*) [150], complex_t (*) [200], complex_t (*) [200])' (complex_matmul.cpp:116:34)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_int<16>s' into 'complex_matmul(complex_t (*) [150], complex_t (*) [200], complex_t (*) [200])' (complex_matmul.cpp:125:34)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.71 seconds. CPU system time: 0.27 seconds. Elapsed time: 3.41 seconds; current allocated memory: 760.555 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 760.555 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 3.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 3.26 seconds; current allocated memory: 790.934 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 2.9 seconds. CPU system time: 0 seconds. Elapsed time: 2.93 seconds; current allocated memory: 793.125 MB.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLS' (complex_matmul.cpp:45) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLSc' (complex_matmul.cpp:54) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_B_COLS' (complex_matmul.cpp:63) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_B_COLSc' (complex_matmul.cpp:71) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS_INIT' (complex_matmul.cpp:81) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS' (complex_matmul.cpp:115) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLSc' (complex_matmul.cpp:124) in function 'complex_matmul' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'complex_matmul' (complex_matmul.cpp:13)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3.12 seconds. CPU system time: 0.01 seconds. Elapsed time: 3.19 seconds; current allocated memory: 814.863 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWS' (complex_matmul.cpp:43:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWSc' (complex_matmul.cpp:52:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_B_ROWS' (complex_matmul.cpp:61:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_B_ROWSc' (complex_matmul.cpp:69:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS_INIT' (complex_matmul.cpp:79:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_COLS' (complex_matmul.cpp:91:17) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_ROWS' (complex_matmul.cpp:89:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS' (complex_matmul.cpp:113:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWSc' (complex_matmul.cpp:122:13) in function 'complex_matmul'.
INFO: [HLS 200-472] Inferring partial write operation for 'MatA.V' (complex_matmul.cpp:46:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatA.V' (complex_matmul.cpp:55:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatB.V' (complex_matmul.cpp:64:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatB.V' (complex_matmul.cpp:72:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.V' (complex_matmul.cpp:82:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatC.V' (complex_matmul.cpp:83:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.V' 
INFO: [HLS 200-472] Inferring partial write operation for 'cMatC.V' 
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 30000 on port 'mem' (complex_matmul.cpp:72:25). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 30000 on port 'mem' (complex_matmul.cpp:64:24). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 15000 on port 'mem' (complex_matmul.cpp:55:25). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 15000 on port 'mem' (complex_matmul.cpp:46:24). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.05 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.14 seconds; current allocated memory: 883.082 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'complex_matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln43_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_A_ROWS_MAT_A_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.11 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.2 seconds; current allocated memory: 885.180 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.11 seconds; current allocated memory: 885.180 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln52_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWSc_MAT_A_COLSc'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_A_ROWSc_MAT_A_COLSc'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.11 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 886.285 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 886.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln61_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_18'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'MAT_B_ROWS_MAT_B_COLS'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 14, loop 'MAT_B_ROWS_MAT_B_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.12 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.24 seconds; current allocated memory: 887.355 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 887.355 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_B_ROWSc_MAT_B_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln69_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_18'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'MAT_B_ROWSc_MAT_B_COLSc'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 14, loop 'MAT_B_ROWSc_MAT_B_COLSc'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.13 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.25 seconds; current allocated memory: 888.449 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 888.449 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln79_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.12 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 889.750 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 889.750 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=empty_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 19, loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1.38 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.91 seconds; current allocated memory: 913.285 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.25 seconds. CPU system time: 0 seconds. Elapsed time: 0.32 seconds; current allocated memory: 913.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln113_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln113_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_MAT_C_COLS'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 18, loop 'MAT_C_ROWS_MAT_C_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.33 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.43 seconds; current allocated memory: 913.285 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 913.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWSc_MAT_C_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln122_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln122_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWSc_MAT_C_COLSc'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 18, loop 'MAT_C_ROWSc_MAT_C_COLSc'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.13 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 913.285 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 913.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.11 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.15 seconds; current allocated memory: 913.285 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.18 seconds. CPU system time: 0 seconds. Elapsed time: 0.23 seconds; current allocated memory: 913.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.34 seconds. CPU system time: 0 seconds. Elapsed time: 0.41 seconds; current allocated memory: 913.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.23 seconds; current allocated memory: 913.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_5_12_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.15 seconds. CPU system time: 0 seconds. Elapsed time: 0.23 seconds; current allocated memory: 913.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_B_ROWSc_MAT_B_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_5_12_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_B_ROWSc_MAT_B_COLSc'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.22 seconds; current allocated memory: 913.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.15 seconds. CPU system time: 0 seconds. Elapsed time: 0.24 seconds; current allocated memory: 914.031 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' is 15105 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 40 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_mulsub_16s_16s_16ns_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_9ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16s_16s_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_205_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_208_16_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_8_12_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.28 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.42 seconds; current allocated memory: 926.406 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' pipeline 'MAT_C_ROWS_MAT_C_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_7ns_10ns_17_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_207_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_7_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1.07 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.28 seconds; current allocated memory: 941.273 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWSc_MAT_C_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWSc_MAT_C_COLSc' pipeline 'MAT_C_ROWSc_MAT_C_COLSc' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_7ns_10ns_17_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_207_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_7_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWSc_MAT_C_COLSc'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.27 seconds; current allocated memory: 942.523 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/mem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatA_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatB_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatC_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'complex_matmul' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'MatA_DRAM', 'MatB_DRAM', 'MatC_DRAM' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.25 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.38 seconds; current allocated memory: 956.133 MB.
INFO: [RTMG 210-278] Implementing memory 'complex_matmul_MatA_V_RAM_AUTO_1R1W_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'complex_matmul_MatB_V_RAM_1WNR_AUTO_1R1W_ram (RAM_1WnR)' using auto RAMs.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_latency 0 
INFO: [HLS 200-1510] Running: source ./complex_proj/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name complex_matmul complex_matmul 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 760.160 MB.
INFO: [HLS 200-10] Analyzing design file 'complex_matmul.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 5.22 seconds. CPU system time: 1 seconds. Elapsed time: 6.41 seconds; current allocated memory: 760.160 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-291] Loop 'INNER_ROW_COL_MULT' is marked as complete unroll implied by the pipeline pragma (complex_matmul.cpp:98:5)
INFO: [HLS 214-186] Unrolling loop 'INNER_ROW_COL_MULT' (complex_matmul.cpp:98:5) in function 'complex_matmul' completely with a factor of 20 (complex_matmul.cpp:17:0)
INFO: [HLS 214-248] Applying array_partition to 'MatA': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:22:7)
INFO: [HLS 214-248] Applying array_partition to 'MatB': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:23:7)
INFO: [HLS 214-248] Applying array_partition to 'MatC': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:24:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatA': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:26:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatB': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:27:7)
INFO: [HLS 214-248] Applying array_partition to 'cMatC': Cyclic partitioning with factor 20 on dimension 1. (complex_matmul.cpp:28:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_int<16>s' into 'complex_matmul(complex_t (*) [150], complex_t (*) [200], complex_t (*) [200])' (complex_matmul.cpp:116:34)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_int<16>s' into 'complex_matmul(complex_t (*) [150], complex_t (*) [200], complex_t (*) [200])' (complex_matmul.cpp:125:34)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 5.2 seconds. CPU system time: 0.71 seconds. Elapsed time: 6.13 seconds; current allocated memory: 760.594 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 760.594 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 5.19 seconds. CPU system time: 0.04 seconds. Elapsed time: 5.25 seconds; current allocated memory: 790.383 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 4.92 seconds. CPU system time: 0.01 seconds. Elapsed time: 4.95 seconds; current allocated memory: 793.109 MB.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLS' (complex_matmul.cpp:45) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_A_COLSc' (complex_matmul.cpp:54) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_B_COLS' (complex_matmul.cpp:63) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_B_COLSc' (complex_matmul.cpp:71) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS_INIT' (complex_matmul.cpp:81) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLS' (complex_matmul.cpp:115) in function 'complex_matmul' automatically.
INFO: [XFORM 203-510] Pipelining loop 'MAT_C_COLSc' (complex_matmul.cpp:124) in function 'complex_matmul' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'complex_matmul' (complex_matmul.cpp:13)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 5.17 seconds. CPU system time: 0.02 seconds. Elapsed time: 5.23 seconds; current allocated memory: 816.836 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWS' (complex_matmul.cpp:43:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_A_ROWSc' (complex_matmul.cpp:52:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_B_ROWS' (complex_matmul.cpp:61:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_B_ROWSc' (complex_matmul.cpp:69:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS_INIT' (complex_matmul.cpp:79:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_COLS' (complex_matmul.cpp:91:17) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'OUTER_ROWS' (complex_matmul.cpp:89:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWS' (complex_matmul.cpp:113:13) in function 'complex_matmul'.
INFO: [XFORM 203-541] Flattening a loop nest 'MAT_C_ROWSc' (complex_matmul.cpp:122:13) in function 'complex_matmul'.
INFO: [HLS 200-472] Inferring partial write operation for 'MatA.V' (complex_matmul.cpp:46:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatA.V' (complex_matmul.cpp:55:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatB.V' (complex_matmul.cpp:64:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatB.V' (complex_matmul.cpp:72:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.V' (complex_matmul.cpp:82:24)
INFO: [HLS 200-472] Inferring partial write operation for 'cMatC.V' (complex_matmul.cpp:83:25)
INFO: [HLS 200-472] Inferring partial write operation for 'MatC.V' 
INFO: [HLS 200-472] Inferring partial write operation for 'cMatC.V' 
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 30000 on port 'mem' (complex_matmul.cpp:72:25). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 30000 on port 'mem' (complex_matmul.cpp:64:24). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 15000 on port 'mem' (complex_matmul.cpp:55:25). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 15000 on port 'mem' (complex_matmul.cpp:46:24). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1.75 seconds. CPU system time: 0.04 seconds. Elapsed time: 1.86 seconds; current allocated memory: 883.340 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'complex_matmul' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln43_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_A_ROWS_MAT_A_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.17 seconds. CPU system time: 0.06 seconds. Elapsed time: 0.27 seconds; current allocated memory: 885.184 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.13 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 885.184 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln52_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_A_ROWSc_MAT_A_COLSc'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_A_ROWSc_MAT_A_COLSc'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.17 seconds. CPU system time: 0 seconds. Elapsed time: 0.21 seconds; current allocated memory: 886.305 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.13 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 886.305 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln61_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_18'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'MAT_B_ROWS_MAT_B_COLS'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 14, loop 'MAT_B_ROWS_MAT_B_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.29 seconds; current allocated memory: 887.391 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.14 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 887.391 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_B_ROWSc_MAT_B_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln69_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_18'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'MAT_B_ROWSc_MAT_B_COLSc'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 14, loop 'MAT_B_ROWSc_MAT_B_COLSc'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.22 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.29 seconds; current allocated memory: 888.453 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.14 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 888.453 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln79_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 12, loop 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.19 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.22 seconds; current allocated memory: 889.762 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 889.762 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln887) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln886_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln232_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=empty_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'cMatB_V'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_19'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_18'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_17'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_16'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_15'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_14'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_13'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_12'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_11'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_10'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_9'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_8'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_7'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_6'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_5'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_4'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_3'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_2'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V_1'. Use bind_storage pragma to override this type.
INFO: [HLS 200-1457] Automatically inferring inferring RAM_1WNR storage type for array 'MatB_V'. Use bind_storage pragma to override this type.
INFO: [SCHED 204-61] Pipelining loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 19, loop 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 2.26 seconds. CPU system time: 0.06 seconds. Elapsed time: 2.65 seconds; current allocated memory: 913.320 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.4 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.44 seconds; current allocated memory: 913.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln113_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln113_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWS_MAT_C_COLS'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 18, loop 'MAT_C_ROWS_MAT_C_COLS'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.53 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.58 seconds; current allocated memory: 913.320 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.14 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 913.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul_Pipeline_MAT_C_ROWSc_MAT_C_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln122_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP latency (root=mul_ln122_1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'MAT_C_ROWSc_MAT_C_COLSc'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 18, loop 'MAT_C_ROWSc_MAT_C_COLSc'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.24 seconds; current allocated memory: 913.320 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.13 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 913.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.2 seconds; current allocated memory: 913.320 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.3 seconds. CPU system time: 0 seconds. Elapsed time: 0.32 seconds; current allocated memory: 913.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.52 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.59 seconds; current allocated memory: 913.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_A_ROWSc_MAT_A_COLSc'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.22 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.3 seconds; current allocated memory: 913.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_5_12_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_B_ROWS_MAT_B_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.22 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.32 seconds; current allocated memory: 913.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_B_ROWSc_MAT_B_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_5_12_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_B_ROWSc_MAT_B_COLSc'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.22 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.29 seconds; current allocated memory: 913.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline 'MAT_C_ROWS_INIT_MAT_C_COLS_INIT' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_5_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.22 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.3 seconds; current allocated memory: 914.062 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline 'OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' pipeline type 'loop pipeline'
INFO: [RTGEN 206-104] Estimated max fanout for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE' is 15105 from HDL expression: (1'b0 == ap_block_pp0_stage0_11001)
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16s_16s_16ns_16_4_1': 40 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_4ns_8ns_8ns_11_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_mulsub_16s_16s_16ns_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4ns_9ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_10ns_17_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16s_16s_16_4_1': 20 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_205_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_208_16_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_8ns_6ns_8_12_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_OUTER_ROWS_OUTER_COLS_INNER_ROW_COL_PIPELINE'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.42 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.55 seconds; current allocated memory: 926.398 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS' pipeline 'MAT_C_ROWS_MAT_C_COLS' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_7ns_10ns_17_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_207_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_7_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWS_MAT_C_COLS'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1.65 seconds. CPU system time: 0.06 seconds. Elapsed time: 1.81 seconds; current allocated memory: 941.266 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul_Pipeline_MAT_C_ROWSc_MAT_C_COLSc' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'complex_matmul_Pipeline_MAT_C_ROWSc_MAT_C_COLSc' pipeline 'MAT_C_ROWSc_MAT_C_COLSc' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_3ns_8ns_8ns_10_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_7ns_9ns_15_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_7ns_10ns_17_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_207_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'urem_7ns_6ns_7_11_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul_Pipeline_MAT_C_ROWSc_MAT_C_COLSc'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.26 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.34 seconds; current allocated memory: 942.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'complex_matmul' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/mem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatA_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatB_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'complex_matmul/MatC_DRAM' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'complex_matmul' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'MatA_DRAM', 'MatB_DRAM', 'MatC_DRAM' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'complex_matmul'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.38 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.48 seconds; current allocated memory: 956.152 MB.
