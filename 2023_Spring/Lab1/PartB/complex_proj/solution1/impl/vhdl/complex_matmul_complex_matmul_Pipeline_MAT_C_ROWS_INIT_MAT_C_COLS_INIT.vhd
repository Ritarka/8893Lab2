-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity complex_matmul_complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    MatC_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_ce0 : OUT STD_LOGIC;
    MatC_V_we0 : OUT STD_LOGIC;
    MatC_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_1_ce0 : OUT STD_LOGIC;
    MatC_V_1_we0 : OUT STD_LOGIC;
    MatC_V_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_2_ce0 : OUT STD_LOGIC;
    MatC_V_2_we0 : OUT STD_LOGIC;
    MatC_V_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_3_ce0 : OUT STD_LOGIC;
    MatC_V_3_we0 : OUT STD_LOGIC;
    MatC_V_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_4_ce0 : OUT STD_LOGIC;
    MatC_V_4_we0 : OUT STD_LOGIC;
    MatC_V_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_5_ce0 : OUT STD_LOGIC;
    MatC_V_5_we0 : OUT STD_LOGIC;
    MatC_V_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_6_ce0 : OUT STD_LOGIC;
    MatC_V_6_we0 : OUT STD_LOGIC;
    MatC_V_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_7_ce0 : OUT STD_LOGIC;
    MatC_V_7_we0 : OUT STD_LOGIC;
    MatC_V_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_8_ce0 : OUT STD_LOGIC;
    MatC_V_8_we0 : OUT STD_LOGIC;
    MatC_V_8_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_9_ce0 : OUT STD_LOGIC;
    MatC_V_9_we0 : OUT STD_LOGIC;
    MatC_V_9_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_10_ce0 : OUT STD_LOGIC;
    MatC_V_10_we0 : OUT STD_LOGIC;
    MatC_V_10_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_11_ce0 : OUT STD_LOGIC;
    MatC_V_11_we0 : OUT STD_LOGIC;
    MatC_V_11_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_12_ce0 : OUT STD_LOGIC;
    MatC_V_12_we0 : OUT STD_LOGIC;
    MatC_V_12_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_13_ce0 : OUT STD_LOGIC;
    MatC_V_13_we0 : OUT STD_LOGIC;
    MatC_V_13_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_14_ce0 : OUT STD_LOGIC;
    MatC_V_14_we0 : OUT STD_LOGIC;
    MatC_V_14_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_15_ce0 : OUT STD_LOGIC;
    MatC_V_15_we0 : OUT STD_LOGIC;
    MatC_V_15_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_16_ce0 : OUT STD_LOGIC;
    MatC_V_16_we0 : OUT STD_LOGIC;
    MatC_V_16_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_17_ce0 : OUT STD_LOGIC;
    MatC_V_17_we0 : OUT STD_LOGIC;
    MatC_V_17_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_18_ce0 : OUT STD_LOGIC;
    MatC_V_18_we0 : OUT STD_LOGIC;
    MatC_V_18_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    MatC_V_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    MatC_V_19_ce0 : OUT STD_LOGIC;
    MatC_V_19_we0 : OUT STD_LOGIC;
    MatC_V_19_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_ce0 : OUT STD_LOGIC;
    cMatC_V_we0 : OUT STD_LOGIC;
    cMatC_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_1_ce0 : OUT STD_LOGIC;
    cMatC_V_1_we0 : OUT STD_LOGIC;
    cMatC_V_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_2_ce0 : OUT STD_LOGIC;
    cMatC_V_2_we0 : OUT STD_LOGIC;
    cMatC_V_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_3_ce0 : OUT STD_LOGIC;
    cMatC_V_3_we0 : OUT STD_LOGIC;
    cMatC_V_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_4_ce0 : OUT STD_LOGIC;
    cMatC_V_4_we0 : OUT STD_LOGIC;
    cMatC_V_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_5_ce0 : OUT STD_LOGIC;
    cMatC_V_5_we0 : OUT STD_LOGIC;
    cMatC_V_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_6_ce0 : OUT STD_LOGIC;
    cMatC_V_6_we0 : OUT STD_LOGIC;
    cMatC_V_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_7_ce0 : OUT STD_LOGIC;
    cMatC_V_7_we0 : OUT STD_LOGIC;
    cMatC_V_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_8_ce0 : OUT STD_LOGIC;
    cMatC_V_8_we0 : OUT STD_LOGIC;
    cMatC_V_8_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_9_ce0 : OUT STD_LOGIC;
    cMatC_V_9_we0 : OUT STD_LOGIC;
    cMatC_V_9_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_10_ce0 : OUT STD_LOGIC;
    cMatC_V_10_we0 : OUT STD_LOGIC;
    cMatC_V_10_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_11_ce0 : OUT STD_LOGIC;
    cMatC_V_11_we0 : OUT STD_LOGIC;
    cMatC_V_11_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_12_ce0 : OUT STD_LOGIC;
    cMatC_V_12_we0 : OUT STD_LOGIC;
    cMatC_V_12_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_13_ce0 : OUT STD_LOGIC;
    cMatC_V_13_we0 : OUT STD_LOGIC;
    cMatC_V_13_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_14_ce0 : OUT STD_LOGIC;
    cMatC_V_14_we0 : OUT STD_LOGIC;
    cMatC_V_14_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_15_ce0 : OUT STD_LOGIC;
    cMatC_V_15_we0 : OUT STD_LOGIC;
    cMatC_V_15_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_16_ce0 : OUT STD_LOGIC;
    cMatC_V_16_we0 : OUT STD_LOGIC;
    cMatC_V_16_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_17_ce0 : OUT STD_LOGIC;
    cMatC_V_17_we0 : OUT STD_LOGIC;
    cMatC_V_17_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_18_ce0 : OUT STD_LOGIC;
    cMatC_V_18_we0 : OUT STD_LOGIC;
    cMatC_V_18_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    cMatC_V_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cMatC_V_19_ce0 : OUT STD_LOGIC;
    cMatC_V_19_we0 : OUT STD_LOGIC;
    cMatC_V_19_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of complex_matmul_complex_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv15_4E20 : STD_LOGIC_VECTOR (14 downto 0) := "100111000100000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv8_C8 : STD_LOGIC_VECTOR (7 downto 0) := "11001000";
    constant ap_const_lv15_CD : STD_LOGIC_VECTOR (14 downto 0) := "000000011001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv7_14 : STD_LOGIC_VECTOR (6 downto 0) := "0010100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv10_C8 : STD_LOGIC_VECTOR (9 downto 0) := "0011001000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln79_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln79_fu_790_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln79_reg_939 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln79_reg_939_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln79_reg_939_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln79_1_fu_798_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_949 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_906_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln82_reg_964 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln82_reg_964_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln82_reg_964_pp0_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln82_reg_964_pp0_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln82_reg_964_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln82_reg_964_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln82_reg_964_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln79_fu_859_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln79_reg_969 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln82_1_fu_863_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal j_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln81_fu_832_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_174 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten63_fu_178 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln79_1_fu_766_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_sig_allocacmp_indvar_flatten63_load : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln81_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln79_fu_778_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln79_fu_810_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln79_fu_810_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln79_fu_810_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_826_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_826_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_906_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_906_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_906_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_906_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_906_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln79_fu_810_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component complex_matmul_mul_7ns_9ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component complex_matmul_urem_7ns_6ns_5_11_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component complex_matmul_mac_muladd_3ns_8ns_8ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component complex_matmul_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_7ns_9ns_15_1_1_U115 : component complex_matmul_mul_7ns_9ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 9,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln79_fu_810_p0,
        din1 => mul_ln79_fu_810_p1,
        dout => mul_ln79_fu_810_p2);

    urem_7ns_6ns_5_11_1_U116 : component complex_matmul_urem_7ns_6ns_5_11_1
    generic map (
        ID => 1,
        NUM_STAGE => 11,
        din0_WIDTH => 7,
        din1_WIDTH => 6,
        dout_WIDTH => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln79_1_fu_798_p3,
        din1 => grp_fu_826_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_826_p2);

    mac_muladd_3ns_8ns_8ns_10_4_1_U117 : component complex_matmul_mac_muladd_3ns_8ns_8ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_906_p0,
        din1 => grp_fu_906_p1,
        din2 => grp_fu_906_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_906_p3);

    flow_control_loop_pipe_sequential_init_U : component complex_matmul_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln79_fu_760_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_174 <= select_ln79_1_fu_798_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_174 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten63_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln79_fu_760_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten63_fu_178 <= add_ln79_1_fu_766_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten63_fu_178 <= ap_const_lv15_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln79_fu_760_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_170 <= add_ln81_fu_832_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_170 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                add_ln82_reg_964 <= grp_fu_906_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln82_reg_964_pp0_iter10_reg <= add_ln82_reg_964_pp0_iter9_reg;
                add_ln82_reg_964_pp0_iter5_reg <= add_ln82_reg_964;
                add_ln82_reg_964_pp0_iter6_reg <= add_ln82_reg_964_pp0_iter5_reg;
                add_ln82_reg_964_pp0_iter7_reg <= add_ln82_reg_964_pp0_iter6_reg;
                add_ln82_reg_964_pp0_iter8_reg <= add_ln82_reg_964_pp0_iter7_reg;
                add_ln82_reg_964_pp0_iter9_reg <= add_ln82_reg_964_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                select_ln79_reg_939_pp0_iter2_reg <= select_ln79_reg_939_pp0_iter1_reg;
                trunc_ln79_reg_969 <= trunc_ln79_fu_859_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                select_ln79_reg_939_pp0_iter1_reg <= select_ln79_reg_939;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_760_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln79_reg_939 <= select_ln79_fu_790_p3;
                tmp_reg_949 <= mul_ln79_fu_810_p2(14 downto 12);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    MatC_V_10_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_10_ce0 <= ap_const_logic_1;
        else 
            MatC_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_10_d0 <= ap_const_lv16_0;

    MatC_V_10_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_A))) then 
            MatC_V_10_we0 <= ap_const_logic_1;
        else 
            MatC_V_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_11_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_11_ce0 <= ap_const_logic_1;
        else 
            MatC_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_11_d0 <= ap_const_lv16_0;

    MatC_V_11_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_B))) then 
            MatC_V_11_we0 <= ap_const_logic_1;
        else 
            MatC_V_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_12_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_12_ce0 <= ap_const_logic_1;
        else 
            MatC_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_12_d0 <= ap_const_lv16_0;

    MatC_V_12_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_C))) then 
            MatC_V_12_we0 <= ap_const_logic_1;
        else 
            MatC_V_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_13_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_13_ce0 <= ap_const_logic_1;
        else 
            MatC_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_13_d0 <= ap_const_lv16_0;

    MatC_V_13_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_D))) then 
            MatC_V_13_we0 <= ap_const_logic_1;
        else 
            MatC_V_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_14_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_14_ce0 <= ap_const_logic_1;
        else 
            MatC_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_14_d0 <= ap_const_lv16_0;

    MatC_V_14_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_E))) then 
            MatC_V_14_we0 <= ap_const_logic_1;
        else 
            MatC_V_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_15_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_15_ce0 <= ap_const_logic_1;
        else 
            MatC_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_15_d0 <= ap_const_lv16_0;

    MatC_V_15_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_F))) then 
            MatC_V_15_we0 <= ap_const_logic_1;
        else 
            MatC_V_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_16_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_16_ce0 <= ap_const_logic_1;
        else 
            MatC_V_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_16_d0 <= ap_const_lv16_0;

    MatC_V_16_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_10))) then 
            MatC_V_16_we0 <= ap_const_logic_1;
        else 
            MatC_V_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_17_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_17_ce0 <= ap_const_logic_1;
        else 
            MatC_V_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_17_d0 <= ap_const_lv16_0;

    MatC_V_17_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_11))) then 
            MatC_V_17_we0 <= ap_const_logic_1;
        else 
            MatC_V_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_18_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_18_ce0 <= ap_const_logic_1;
        else 
            MatC_V_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_18_d0 <= ap_const_lv16_0;

    MatC_V_18_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_12))) then 
            MatC_V_18_we0 <= ap_const_logic_1;
        else 
            MatC_V_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_19_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_19_ce0 <= ap_const_logic_1;
        else 
            MatC_V_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_19_d0 <= ap_const_lv16_0;

    MatC_V_19_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and ((trunc_ln79_reg_969 = ap_const_lv5_13) or ((trunc_ln79_reg_969 = ap_const_lv5_14) or ((trunc_ln79_reg_969 = ap_const_lv5_15) or ((trunc_ln79_reg_969 = ap_const_lv5_16) or ((trunc_ln79_reg_969 = ap_const_lv5_17) or ((trunc_ln79_reg_969 = ap_const_lv5_18) or ((trunc_ln79_reg_969 = ap_const_lv5_19) or ((trunc_ln79_reg_969 = ap_const_lv5_1A) or ((trunc_ln79_reg_969 = ap_const_lv5_1B) or ((trunc_ln79_reg_969 = ap_const_lv5_1C) or ((trunc_ln79_reg_969 = ap_const_lv5_1D) or ((trunc_ln79_reg_969 = ap_const_lv5_1E) or (trunc_ln79_reg_969 = ap_const_lv5_1F))))))))))))))) then 
            MatC_V_19_we0 <= ap_const_logic_1;
        else 
            MatC_V_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_1_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_1_ce0 <= ap_const_logic_1;
        else 
            MatC_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_1_d0 <= ap_const_lv16_0;

    MatC_V_1_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_1))) then 
            MatC_V_1_we0 <= ap_const_logic_1;
        else 
            MatC_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_2_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_2_ce0 <= ap_const_logic_1;
        else 
            MatC_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_2_d0 <= ap_const_lv16_0;

    MatC_V_2_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_2))) then 
            MatC_V_2_we0 <= ap_const_logic_1;
        else 
            MatC_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_3_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_3_ce0 <= ap_const_logic_1;
        else 
            MatC_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_3_d0 <= ap_const_lv16_0;

    MatC_V_3_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_3))) then 
            MatC_V_3_we0 <= ap_const_logic_1;
        else 
            MatC_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_4_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_4_ce0 <= ap_const_logic_1;
        else 
            MatC_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_4_d0 <= ap_const_lv16_0;

    MatC_V_4_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_4))) then 
            MatC_V_4_we0 <= ap_const_logic_1;
        else 
            MatC_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_5_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_5_ce0 <= ap_const_logic_1;
        else 
            MatC_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_5_d0 <= ap_const_lv16_0;

    MatC_V_5_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_5))) then 
            MatC_V_5_we0 <= ap_const_logic_1;
        else 
            MatC_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_6_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_6_ce0 <= ap_const_logic_1;
        else 
            MatC_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_6_d0 <= ap_const_lv16_0;

    MatC_V_6_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_6))) then 
            MatC_V_6_we0 <= ap_const_logic_1;
        else 
            MatC_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_7_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_7_ce0 <= ap_const_logic_1;
        else 
            MatC_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_7_d0 <= ap_const_lv16_0;

    MatC_V_7_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_7))) then 
            MatC_V_7_we0 <= ap_const_logic_1;
        else 
            MatC_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_8_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_8_ce0 <= ap_const_logic_1;
        else 
            MatC_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_8_d0 <= ap_const_lv16_0;

    MatC_V_8_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_8))) then 
            MatC_V_8_we0 <= ap_const_logic_1;
        else 
            MatC_V_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_9_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_9_ce0 <= ap_const_logic_1;
        else 
            MatC_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_9_d0 <= ap_const_lv16_0;

    MatC_V_9_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_9))) then 
            MatC_V_9_we0 <= ap_const_logic_1;
        else 
            MatC_V_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    MatC_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            MatC_V_ce0 <= ap_const_logic_1;
        else 
            MatC_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_V_d0 <= ap_const_lv16_0;

    MatC_V_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_0))) then 
            MatC_V_we0 <= ap_const_logic_1;
        else 
            MatC_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln79_1_fu_766_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten63_load) + unsigned(ap_const_lv15_1));
    add_ln79_fu_778_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv7_1));
    add_ln81_fu_832_p2 <= std_logic_vector(unsigned(select_ln79_fu_790_p3) + unsigned(ap_const_lv8_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln79_fu_760_p2)
    begin
        if (((icmp_ln79_fu_760_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_174)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_174;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten63_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten63_fu_178)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten63_load <= ap_const_lv15_0;
        else 
            ap_sig_allocacmp_indvar_flatten63_load <= indvar_flatten63_fu_178;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_170, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_170;
        end if; 
    end process;

    cMatC_V_10_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_10_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_10_d0 <= ap_const_lv16_0;

    cMatC_V_10_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_A))) then 
            cMatC_V_10_we0 <= ap_const_logic_1;
        else 
            cMatC_V_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_11_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_11_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_11_d0 <= ap_const_lv16_0;

    cMatC_V_11_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_B))) then 
            cMatC_V_11_we0 <= ap_const_logic_1;
        else 
            cMatC_V_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_12_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_12_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_12_d0 <= ap_const_lv16_0;

    cMatC_V_12_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_C))) then 
            cMatC_V_12_we0 <= ap_const_logic_1;
        else 
            cMatC_V_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_13_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_13_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_13_d0 <= ap_const_lv16_0;

    cMatC_V_13_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_D))) then 
            cMatC_V_13_we0 <= ap_const_logic_1;
        else 
            cMatC_V_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_14_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_14_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_14_d0 <= ap_const_lv16_0;

    cMatC_V_14_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_E))) then 
            cMatC_V_14_we0 <= ap_const_logic_1;
        else 
            cMatC_V_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_15_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_15_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_15_d0 <= ap_const_lv16_0;

    cMatC_V_15_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_F))) then 
            cMatC_V_15_we0 <= ap_const_logic_1;
        else 
            cMatC_V_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_16_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_16_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_16_d0 <= ap_const_lv16_0;

    cMatC_V_16_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_10))) then 
            cMatC_V_16_we0 <= ap_const_logic_1;
        else 
            cMatC_V_16_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_17_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_17_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_17_d0 <= ap_const_lv16_0;

    cMatC_V_17_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_11))) then 
            cMatC_V_17_we0 <= ap_const_logic_1;
        else 
            cMatC_V_17_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_18_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_18_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_18_d0 <= ap_const_lv16_0;

    cMatC_V_18_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_12))) then 
            cMatC_V_18_we0 <= ap_const_logic_1;
        else 
            cMatC_V_18_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_19_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_19_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_19_d0 <= ap_const_lv16_0;

    cMatC_V_19_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and ((trunc_ln79_reg_969 = ap_const_lv5_13) or ((trunc_ln79_reg_969 = ap_const_lv5_14) or ((trunc_ln79_reg_969 = ap_const_lv5_15) or ((trunc_ln79_reg_969 = ap_const_lv5_16) or ((trunc_ln79_reg_969 = ap_const_lv5_17) or ((trunc_ln79_reg_969 = ap_const_lv5_18) or ((trunc_ln79_reg_969 = ap_const_lv5_19) or ((trunc_ln79_reg_969 = ap_const_lv5_1A) or ((trunc_ln79_reg_969 = ap_const_lv5_1B) or ((trunc_ln79_reg_969 = ap_const_lv5_1C) or ((trunc_ln79_reg_969 = ap_const_lv5_1D) or ((trunc_ln79_reg_969 = ap_const_lv5_1E) or (trunc_ln79_reg_969 = ap_const_lv5_1F))))))))))))))) then 
            cMatC_V_19_we0 <= ap_const_logic_1;
        else 
            cMatC_V_19_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_1_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_1_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_1_d0 <= ap_const_lv16_0;

    cMatC_V_1_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_1))) then 
            cMatC_V_1_we0 <= ap_const_logic_1;
        else 
            cMatC_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_2_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_2_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_2_d0 <= ap_const_lv16_0;

    cMatC_V_2_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_2))) then 
            cMatC_V_2_we0 <= ap_const_logic_1;
        else 
            cMatC_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_3_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_3_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_3_d0 <= ap_const_lv16_0;

    cMatC_V_3_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_3))) then 
            cMatC_V_3_we0 <= ap_const_logic_1;
        else 
            cMatC_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_4_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_4_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_4_d0 <= ap_const_lv16_0;

    cMatC_V_4_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_4))) then 
            cMatC_V_4_we0 <= ap_const_logic_1;
        else 
            cMatC_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_5_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_5_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_5_d0 <= ap_const_lv16_0;

    cMatC_V_5_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_5))) then 
            cMatC_V_5_we0 <= ap_const_logic_1;
        else 
            cMatC_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_6_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_6_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_6_d0 <= ap_const_lv16_0;

    cMatC_V_6_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_6))) then 
            cMatC_V_6_we0 <= ap_const_logic_1;
        else 
            cMatC_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_7_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_7_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_7_d0 <= ap_const_lv16_0;

    cMatC_V_7_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_7))) then 
            cMatC_V_7_we0 <= ap_const_logic_1;
        else 
            cMatC_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_8_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_8_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_8_d0 <= ap_const_lv16_0;

    cMatC_V_8_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_8))) then 
            cMatC_V_8_we0 <= ap_const_logic_1;
        else 
            cMatC_V_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_9_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_9_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_9_d0 <= ap_const_lv16_0;

    cMatC_V_9_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_9))) then 
            cMatC_V_9_we0 <= ap_const_logic_1;
        else 
            cMatC_V_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_address0 <= zext_ln82_1_fu_863_p1(10 - 1 downto 0);

    cMatC_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cMatC_V_ce0 <= ap_const_logic_1;
        else 
            cMatC_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cMatC_V_d0 <= ap_const_lv16_0;

    cMatC_V_we0_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, trunc_ln79_reg_969)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (trunc_ln79_reg_969 = ap_const_lv5_0))) then 
            cMatC_V_we0 <= ap_const_logic_1;
        else 
            cMatC_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_826_p1 <= ap_const_lv7_14(6 - 1 downto 0);
    grp_fu_906_p0 <= grp_fu_906_p00(3 - 1 downto 0);
    grp_fu_906_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_949),10));
    grp_fu_906_p1 <= ap_const_lv10_C8(8 - 1 downto 0);
    grp_fu_906_p2 <= grp_fu_906_p20(8 - 1 downto 0);
    grp_fu_906_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln79_reg_939_pp0_iter2_reg),10));
    icmp_ln79_fu_760_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten63_load = ap_const_lv15_4E20) else "0";
    icmp_ln81_fu_784_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv8_C8) else "0";
    mul_ln79_fu_810_p0 <= mul_ln79_fu_810_p00(7 - 1 downto 0);
    mul_ln79_fu_810_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln79_1_fu_798_p3),15));
    mul_ln79_fu_810_p1 <= ap_const_lv15_CD(9 - 1 downto 0);
    select_ln79_1_fu_798_p3 <= 
        add_ln79_fu_778_p2 when (icmp_ln81_fu_784_p2(0) = '1') else 
        ap_sig_allocacmp_i_load;
    select_ln79_fu_790_p3 <= 
        ap_const_lv8_0 when (icmp_ln81_fu_784_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    trunc_ln79_fu_859_p1 <= grp_fu_826_p2(5 - 1 downto 0);
    zext_ln82_1_fu_863_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln82_reg_964_pp0_iter10_reg),64));
end behav;
