// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module real_matmul_real_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_mem_AWVALID,
        m_axi_mem_AWREADY,
        m_axi_mem_AWADDR,
        m_axi_mem_AWID,
        m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT,
        m_axi_mem_AWQOS,
        m_axi_mem_AWREGION,
        m_axi_mem_AWUSER,
        m_axi_mem_WVALID,
        m_axi_mem_WREADY,
        m_axi_mem_WDATA,
        m_axi_mem_WSTRB,
        m_axi_mem_WLAST,
        m_axi_mem_WID,
        m_axi_mem_WUSER,
        m_axi_mem_ARVALID,
        m_axi_mem_ARREADY,
        m_axi_mem_ARADDR,
        m_axi_mem_ARID,
        m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT,
        m_axi_mem_ARQOS,
        m_axi_mem_ARREGION,
        m_axi_mem_ARUSER,
        m_axi_mem_RVALID,
        m_axi_mem_RREADY,
        m_axi_mem_RDATA,
        m_axi_mem_RLAST,
        m_axi_mem_RID,
        m_axi_mem_RFIFONUM,
        m_axi_mem_RUSER,
        m_axi_mem_RRESP,
        m_axi_mem_BVALID,
        m_axi_mem_BREADY,
        m_axi_mem_BRESP,
        m_axi_mem_BID,
        m_axi_mem_BUSER,
        MatA_V_address0,
        MatA_V_ce0,
        MatA_V_we0,
        MatA_V_d0,
        MatA_V_1_address0,
        MatA_V_1_ce0,
        MatA_V_1_we0,
        MatA_V_1_d0,
        MatA_V_2_address0,
        MatA_V_2_ce0,
        MatA_V_2_we0,
        MatA_V_2_d0,
        MatA_V_3_address0,
        MatA_V_3_ce0,
        MatA_V_3_we0,
        MatA_V_3_d0,
        MatA_V_4_address0,
        MatA_V_4_ce0,
        MatA_V_4_we0,
        MatA_V_4_d0,
        MatA_V_5_address0,
        MatA_V_5_ce0,
        MatA_V_5_we0,
        MatA_V_5_d0,
        MatA_V_6_address0,
        MatA_V_6_ce0,
        MatA_V_6_we0,
        MatA_V_6_d0,
        MatA_V_7_address0,
        MatA_V_7_ce0,
        MatA_V_7_we0,
        MatA_V_7_d0,
        MatA_V_8_address0,
        MatA_V_8_ce0,
        MatA_V_8_we0,
        MatA_V_8_d0,
        MatA_V_9_address0,
        MatA_V_9_ce0,
        MatA_V_9_we0,
        MatA_V_9_d0,
        MatA_V_10_address0,
        MatA_V_10_ce0,
        MatA_V_10_we0,
        MatA_V_10_d0,
        MatA_V_11_address0,
        MatA_V_11_ce0,
        MatA_V_11_we0,
        MatA_V_11_d0,
        MatA_V_12_address0,
        MatA_V_12_ce0,
        MatA_V_12_we0,
        MatA_V_12_d0,
        MatA_V_13_address0,
        MatA_V_13_ce0,
        MatA_V_13_we0,
        MatA_V_13_d0,
        MatA_V_14_address0,
        MatA_V_14_ce0,
        MatA_V_14_we0,
        MatA_V_14_d0,
        MatA_V_15_address0,
        MatA_V_15_ce0,
        MatA_V_15_we0,
        MatA_V_15_d0,
        MatA_V_16_address0,
        MatA_V_16_ce0,
        MatA_V_16_we0,
        MatA_V_16_d0,
        MatA_V_17_address0,
        MatA_V_17_ce0,
        MatA_V_17_we0,
        MatA_V_17_d0,
        MatA_V_18_address0,
        MatA_V_18_ce0,
        MatA_V_18_we0,
        MatA_V_18_d0,
        MatA_V_19_address0,
        MatA_V_19_ce0,
        MatA_V_19_we0,
        MatA_V_19_d0,
        MatA_DRAM,
        trunc_ln
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_mem_AWVALID;
input   m_axi_mem_AWREADY;
output  [63:0] m_axi_mem_AWADDR;
output  [0:0] m_axi_mem_AWID;
output  [31:0] m_axi_mem_AWLEN;
output  [2:0] m_axi_mem_AWSIZE;
output  [1:0] m_axi_mem_AWBURST;
output  [1:0] m_axi_mem_AWLOCK;
output  [3:0] m_axi_mem_AWCACHE;
output  [2:0] m_axi_mem_AWPROT;
output  [3:0] m_axi_mem_AWQOS;
output  [3:0] m_axi_mem_AWREGION;
output  [0:0] m_axi_mem_AWUSER;
output   m_axi_mem_WVALID;
input   m_axi_mem_WREADY;
output  [127:0] m_axi_mem_WDATA;
output  [15:0] m_axi_mem_WSTRB;
output   m_axi_mem_WLAST;
output  [0:0] m_axi_mem_WID;
output  [0:0] m_axi_mem_WUSER;
output   m_axi_mem_ARVALID;
input   m_axi_mem_ARREADY;
output  [63:0] m_axi_mem_ARADDR;
output  [0:0] m_axi_mem_ARID;
output  [31:0] m_axi_mem_ARLEN;
output  [2:0] m_axi_mem_ARSIZE;
output  [1:0] m_axi_mem_ARBURST;
output  [1:0] m_axi_mem_ARLOCK;
output  [3:0] m_axi_mem_ARCACHE;
output  [2:0] m_axi_mem_ARPROT;
output  [3:0] m_axi_mem_ARQOS;
output  [3:0] m_axi_mem_ARREGION;
output  [0:0] m_axi_mem_ARUSER;
input   m_axi_mem_RVALID;
output   m_axi_mem_RREADY;
input  [127:0] m_axi_mem_RDATA;
input   m_axi_mem_RLAST;
input  [0:0] m_axi_mem_RID;
input  [8:0] m_axi_mem_RFIFONUM;
input  [0:0] m_axi_mem_RUSER;
input  [1:0] m_axi_mem_RRESP;
input   m_axi_mem_BVALID;
output   m_axi_mem_BREADY;
input  [1:0] m_axi_mem_BRESP;
input  [0:0] m_axi_mem_BID;
input  [0:0] m_axi_mem_BUSER;
output  [9:0] MatA_V_address0;
output   MatA_V_ce0;
output   MatA_V_we0;
output  [15:0] MatA_V_d0;
output  [9:0] MatA_V_1_address0;
output   MatA_V_1_ce0;
output   MatA_V_1_we0;
output  [15:0] MatA_V_1_d0;
output  [9:0] MatA_V_2_address0;
output   MatA_V_2_ce0;
output   MatA_V_2_we0;
output  [15:0] MatA_V_2_d0;
output  [9:0] MatA_V_3_address0;
output   MatA_V_3_ce0;
output   MatA_V_3_we0;
output  [15:0] MatA_V_3_d0;
output  [9:0] MatA_V_4_address0;
output   MatA_V_4_ce0;
output   MatA_V_4_we0;
output  [15:0] MatA_V_4_d0;
output  [9:0] MatA_V_5_address0;
output   MatA_V_5_ce0;
output   MatA_V_5_we0;
output  [15:0] MatA_V_5_d0;
output  [9:0] MatA_V_6_address0;
output   MatA_V_6_ce0;
output   MatA_V_6_we0;
output  [15:0] MatA_V_6_d0;
output  [9:0] MatA_V_7_address0;
output   MatA_V_7_ce0;
output   MatA_V_7_we0;
output  [15:0] MatA_V_7_d0;
output  [9:0] MatA_V_8_address0;
output   MatA_V_8_ce0;
output   MatA_V_8_we0;
output  [15:0] MatA_V_8_d0;
output  [9:0] MatA_V_9_address0;
output   MatA_V_9_ce0;
output   MatA_V_9_we0;
output  [15:0] MatA_V_9_d0;
output  [9:0] MatA_V_10_address0;
output   MatA_V_10_ce0;
output   MatA_V_10_we0;
output  [15:0] MatA_V_10_d0;
output  [9:0] MatA_V_11_address0;
output   MatA_V_11_ce0;
output   MatA_V_11_we0;
output  [15:0] MatA_V_11_d0;
output  [9:0] MatA_V_12_address0;
output   MatA_V_12_ce0;
output   MatA_V_12_we0;
output  [15:0] MatA_V_12_d0;
output  [9:0] MatA_V_13_address0;
output   MatA_V_13_ce0;
output   MatA_V_13_we0;
output  [15:0] MatA_V_13_d0;
output  [9:0] MatA_V_14_address0;
output   MatA_V_14_ce0;
output   MatA_V_14_we0;
output  [15:0] MatA_V_14_d0;
output  [9:0] MatA_V_15_address0;
output   MatA_V_15_ce0;
output   MatA_V_15_we0;
output  [15:0] MatA_V_15_d0;
output  [9:0] MatA_V_16_address0;
output   MatA_V_16_ce0;
output   MatA_V_16_we0;
output  [15:0] MatA_V_16_d0;
output  [9:0] MatA_V_17_address0;
output   MatA_V_17_ce0;
output   MatA_V_17_we0;
output  [15:0] MatA_V_17_d0;
output  [9:0] MatA_V_18_address0;
output   MatA_V_18_ce0;
output   MatA_V_18_we0;
output  [15:0] MatA_V_18_d0;
output  [9:0] MatA_V_19_address0;
output   MatA_V_19_ce0;
output   MatA_V_19_we0;
output  [15:0] MatA_V_19_d0;
input  [63:0] MatA_DRAM;
input  [3:0] trunc_ln;

reg ap_idle;
reg m_axi_mem_ARVALID;
reg m_axi_mem_RREADY;
reg MatA_V_ce0;
reg MatA_V_we0;
reg MatA_V_1_ce0;
reg MatA_V_1_we0;
reg MatA_V_2_ce0;
reg MatA_V_2_we0;
reg MatA_V_3_ce0;
reg MatA_V_3_we0;
reg MatA_V_4_ce0;
reg MatA_V_4_we0;
reg MatA_V_5_ce0;
reg MatA_V_5_we0;
reg MatA_V_6_ce0;
reg MatA_V_6_we0;
reg MatA_V_7_ce0;
reg MatA_V_7_we0;
reg MatA_V_8_ce0;
reg MatA_V_8_we0;
reg MatA_V_9_ce0;
reg MatA_V_9_we0;
reg MatA_V_10_ce0;
reg MatA_V_10_we0;
reg MatA_V_11_ce0;
reg MatA_V_11_we0;
reg MatA_V_12_ce0;
reg MatA_V_12_we0;
reg MatA_V_13_ce0;
reg MatA_V_13_we0;
reg MatA_V_14_ce0;
reg MatA_V_14_we0;
reg MatA_V_15_ce0;
reg MatA_V_15_we0;
reg MatA_V_16_ce0;
reg MatA_V_16_we0;
reg MatA_V_17_ce0;
reg MatA_V_17_we0;
reg MatA_V_18_ce0;
reg MatA_V_18_we0;
reg MatA_V_19_ce0;
reg MatA_V_19_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg   [0:0] icmp_ln35_reg_853;
reg   [0:0] icmp_ln35_reg_853_pp0_iter3_reg;
reg   [0:0] trunc_ln39_reg_894;
reg    ap_predicate_op75_readreq_state5;
reg    ap_block_state5_io;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
reg   [0:0] icmp_ln35_reg_853_pp0_iter10_reg;
reg   [0:0] trunc_ln39_reg_894_pp0_iter10_reg;
reg    ap_predicate_op91_read_state12;
reg    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln35_fu_520_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    mem_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    mem_blk_n_R;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln35_reg_853_pp0_iter1_reg;
reg   [0:0] icmp_ln35_reg_853_pp0_iter2_reg;
reg   [0:0] icmp_ln35_reg_853_pp0_iter4_reg;
reg   [0:0] icmp_ln35_reg_853_pp0_iter5_reg;
reg   [0:0] icmp_ln35_reg_853_pp0_iter6_reg;
reg   [0:0] icmp_ln35_reg_853_pp0_iter7_reg;
reg   [0:0] icmp_ln35_reg_853_pp0_iter8_reg;
reg   [0:0] icmp_ln35_reg_853_pp0_iter9_reg;
reg   [0:0] icmp_ln35_reg_853_pp0_iter11_reg;
reg   [0:0] icmp_ln35_reg_853_pp0_iter12_reg;
wire   [0:0] icmp_ln37_fu_544_p2;
reg   [0:0] icmp_ln37_reg_857;
reg   [0:0] icmp_ln37_reg_857_pp0_iter1_reg;
reg   [0:0] icmp_ln37_reg_857_pp0_iter2_reg;
reg   [0:0] icmp_ln37_reg_857_pp0_iter3_reg;
reg   [0:0] icmp_ln37_reg_857_pp0_iter4_reg;
reg   [0:0] icmp_ln37_reg_857_pp0_iter5_reg;
reg   [0:0] icmp_ln37_reg_857_pp0_iter6_reg;
reg   [0:0] icmp_ln37_reg_857_pp0_iter7_reg;
reg   [0:0] icmp_ln37_reg_857_pp0_iter8_reg;
reg   [0:0] icmp_ln37_reg_857_pp0_iter9_reg;
reg   [0:0] icmp_ln37_reg_857_pp0_iter10_reg;
reg   [0:0] icmp_ln37_reg_857_pp0_iter11_reg;
reg   [0:0] icmp_ln37_reg_857_pp0_iter12_reg;
wire   [7:0] j_mid2_fu_550_p3;
reg   [7:0] j_mid2_reg_862;
reg   [7:0] j_mid2_reg_862_pp0_iter1_reg;
reg   [7:0] j_mid2_reg_862_pp0_iter2_reg;
wire   [6:0] i_cast_mid2_v_fu_558_p3;
reg   [6:0] i_cast_mid2_v_reg_868;
wire   [0:0] trunc_ln39_fu_625_p1;
reg   [0:0] trunc_ln39_reg_894_pp0_iter4_reg;
reg   [0:0] trunc_ln39_reg_894_pp0_iter5_reg;
reg   [0:0] trunc_ln39_reg_894_pp0_iter6_reg;
reg   [0:0] trunc_ln39_reg_894_pp0_iter7_reg;
reg   [0:0] trunc_ln39_reg_894_pp0_iter8_reg;
reg   [0:0] trunc_ln39_reg_894_pp0_iter9_reg;
reg   [0:0] trunc_ln39_reg_894_pp0_iter11_reg;
reg   [0:0] trunc_ln39_reg_894_pp0_iter12_reg;
reg   [1:0] tmp_4_reg_898;
reg   [1:0] tmp_4_reg_898_pp0_iter4_reg;
reg   [1:0] tmp_4_reg_898_pp0_iter5_reg;
reg   [1:0] tmp_4_reg_898_pp0_iter6_reg;
reg   [1:0] tmp_4_reg_898_pp0_iter7_reg;
reg   [1:0] tmp_4_reg_898_pp0_iter8_reg;
reg   [1:0] tmp_4_reg_898_pp0_iter9_reg;
reg   [1:0] tmp_4_reg_898_pp0_iter10_reg;
reg   [59:0] trunc_ln39_4_reg_903;
wire   [9:0] grp_fu_807_p3;
reg   [9:0] add_ln39_3_reg_908;
reg   [9:0] add_ln39_3_reg_908_pp0_iter5_reg;
reg   [9:0] add_ln39_3_reg_908_pp0_iter6_reg;
reg   [9:0] add_ln39_3_reg_908_pp0_iter7_reg;
reg   [9:0] add_ln39_3_reg_908_pp0_iter8_reg;
reg   [9:0] add_ln39_3_reg_908_pp0_iter9_reg;
reg   [9:0] add_ln39_3_reg_908_pp0_iter10_reg;
reg   [9:0] add_ln39_3_reg_908_pp0_iter11_reg;
reg   [9:0] add_ln39_3_reg_908_pp0_iter12_reg;
wire   [4:0] empty_47_fu_683_p1;
reg   [4:0] empty_47_reg_919;
reg   [4:0] empty_47_reg_919_pp0_iter12_reg;
reg   [127:0] mem_addr_read_reg_923;
wire   [3:0] add_ln39_2_fu_694_p2;
reg   [3:0] add_ln39_2_reg_928;
wire   [31:0] trunc_ln39_1_fu_715_p1;
reg   [31:0] ap_phi_mux_empty_phi_fu_491_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter1_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter2_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter3_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter4_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter5_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter6_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter7_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter8_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter9_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter10_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter11_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter12_empty_reg_488;
reg   [31:0] ap_phi_reg_pp0_iter13_empty_reg_488;
wire   [31:0] shiftreg25_cast_fu_729_p1;
wire   [63:0] zext_ln39_3_fu_734_p1;
wire  signed [63:0] sext_ln39_fu_673_p1;
reg   [15:0] shiftreg25_fu_188;
wire    ap_loop_init;
reg   [7:0] j_fu_192;
wire   [7:0] add_ln37_fu_570_p2;
reg   [7:0] ap_sig_allocacmp_j_load;
reg   [6:0] i_fu_196;
reg   [6:0] ap_sig_allocacmp_i_load;
reg   [13:0] indvar_flatten_fu_200;
wire   [13:0] add_ln35_1_fu_526_p2;
reg   [13:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [15:0] trunc_ln39_2_fu_757_p1;
wire   [6:0] add_ln35_fu_538_p2;
wire   [5:0] grp_fu_591_p1;
wire   [6:0] mul_fu_599_p0;
wire   [8:0] mul_fu_599_p1;
wire   [14:0] mul_fu_599_p2;
wire   [2:0] tmp_fu_605_p4;
wire   [13:0] grp_fu_796_p3;
wire   [12:0] tmp_3_fu_628_p4;
wire   [14:0] and_ln_fu_637_p3;
wire   [63:0] zext_ln39_fu_645_p1;
wire   [63:0] add_ln39_1_fu_658_p2;
wire   [4:0] grp_fu_591_p2;
wire   [3:0] and_ln39_1_fu_687_p3;
wire   [6:0] shl_ln39_1_fu_699_p3;
wire   [127:0] zext_ln39_1_fu_706_p1;
wire   [127:0] lshr_ln39_fu_710_p2;
wire   [15:0] shiftreg25_mid2_fu_722_p3;
wire   [6:0] grp_fu_796_p0;
wire   [7:0] grp_fu_796_p1;
wire   [7:0] grp_fu_796_p2;
wire   [2:0] grp_fu_807_p0;
wire   [7:0] grp_fu_807_p1;
wire   [7:0] grp_fu_807_p2;
reg    grp_fu_591_ce;
reg    grp_fu_796_ce;
reg    grp_fu_807_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [13:0] grp_fu_796_p00;
wire   [13:0] grp_fu_796_p20;
wire   [9:0] grp_fu_807_p00;
wire   [9:0] grp_fu_807_p20;
wire   [14:0] mul_fu_599_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_done_reg = 1'b0;
end

real_matmul_urem_7ns_6ns_5_11_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 5 ))
urem_7ns_6ns_5_11_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_cast_mid2_v_reg_868),
    .din1(grp_fu_591_p1),
    .ce(grp_fu_591_ce),
    .dout(grp_fu_591_p2)
);

real_matmul_mul_7ns_9ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_7ns_9ns_15_1_1_U2(
    .din0(mul_fu_599_p0),
    .din1(mul_fu_599_p1),
    .dout(mul_fu_599_p2)
);

real_matmul_mac_muladd_7ns_8ns_8ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 14 ))
mac_muladd_7ns_8ns_8ns_14_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_796_p0),
    .din1(grp_fu_796_p1),
    .din2(grp_fu_796_p2),
    .ce(grp_fu_796_ce),
    .dout(grp_fu_796_p3)
);

real_matmul_mac_muladd_3ns_8ns_8ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
mac_muladd_3ns_8ns_8ns_10_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_807_p0),
    .din1(grp_fu_807_p1),
    .din2(grp_fu_807_p2),
    .ce(grp_fu_807_ce),
    .dout(grp_fu_807_p3)
);

real_matmul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((trunc_ln39_reg_894_pp0_iter11_reg == 1'd0) & (icmp_ln35_reg_853_pp0_iter11_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter13_empty_reg_488 <= trunc_ln39_1_fu_715_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter13_empty_reg_488 <= ap_phi_reg_pp0_iter12_empty_reg_488;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln35_fu_520_p2 == 1'd0))) begin
            i_fu_196 <= i_cast_mid2_v_fu_558_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_196 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln35_fu_520_p2 == 1'd0))) begin
            indvar_flatten_fu_200 <= add_ln35_1_fu_526_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_200 <= 14'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln35_fu_520_p2 == 1'd0))) begin
            j_fu_192 <= add_ln37_fu_570_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_192 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shiftreg25_fu_188 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter13 == 1'b1)) begin
            shiftreg25_fu_188 <= {{ap_phi_mux_empty_phi_fu_491_p4[31:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln39_reg_894_pp0_iter10_reg == 1'd0) & (icmp_ln35_reg_853_pp0_iter10_reg == 1'd0))) begin
        add_ln39_2_reg_928 <= add_ln39_2_fu_694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln35_reg_853_pp0_iter3_reg == 1'd0))) begin
        add_ln39_3_reg_908 <= grp_fu_807_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln39_3_reg_908_pp0_iter10_reg <= add_ln39_3_reg_908_pp0_iter9_reg;
        add_ln39_3_reg_908_pp0_iter11_reg <= add_ln39_3_reg_908_pp0_iter10_reg;
        add_ln39_3_reg_908_pp0_iter12_reg <= add_ln39_3_reg_908_pp0_iter11_reg;
        add_ln39_3_reg_908_pp0_iter5_reg <= add_ln39_3_reg_908;
        add_ln39_3_reg_908_pp0_iter6_reg <= add_ln39_3_reg_908_pp0_iter5_reg;
        add_ln39_3_reg_908_pp0_iter7_reg <= add_ln39_3_reg_908_pp0_iter6_reg;
        add_ln39_3_reg_908_pp0_iter8_reg <= add_ln39_3_reg_908_pp0_iter7_reg;
        add_ln39_3_reg_908_pp0_iter9_reg <= add_ln39_3_reg_908_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_47_reg_919_pp0_iter12_reg <= empty_47_reg_919;
        icmp_ln35_reg_853_pp0_iter10_reg <= icmp_ln35_reg_853_pp0_iter9_reg;
        icmp_ln35_reg_853_pp0_iter11_reg <= icmp_ln35_reg_853_pp0_iter10_reg;
        icmp_ln35_reg_853_pp0_iter12_reg <= icmp_ln35_reg_853_pp0_iter11_reg;
        icmp_ln35_reg_853_pp0_iter2_reg <= icmp_ln35_reg_853_pp0_iter1_reg;
        icmp_ln35_reg_853_pp0_iter3_reg <= icmp_ln35_reg_853_pp0_iter2_reg;
        icmp_ln35_reg_853_pp0_iter4_reg <= icmp_ln35_reg_853_pp0_iter3_reg;
        icmp_ln35_reg_853_pp0_iter5_reg <= icmp_ln35_reg_853_pp0_iter4_reg;
        icmp_ln35_reg_853_pp0_iter6_reg <= icmp_ln35_reg_853_pp0_iter5_reg;
        icmp_ln35_reg_853_pp0_iter7_reg <= icmp_ln35_reg_853_pp0_iter6_reg;
        icmp_ln35_reg_853_pp0_iter8_reg <= icmp_ln35_reg_853_pp0_iter7_reg;
        icmp_ln35_reg_853_pp0_iter9_reg <= icmp_ln35_reg_853_pp0_iter8_reg;
        icmp_ln37_reg_857_pp0_iter10_reg <= icmp_ln37_reg_857_pp0_iter9_reg;
        icmp_ln37_reg_857_pp0_iter11_reg <= icmp_ln37_reg_857_pp0_iter10_reg;
        icmp_ln37_reg_857_pp0_iter12_reg <= icmp_ln37_reg_857_pp0_iter11_reg;
        icmp_ln37_reg_857_pp0_iter2_reg <= icmp_ln37_reg_857_pp0_iter1_reg;
        icmp_ln37_reg_857_pp0_iter3_reg <= icmp_ln37_reg_857_pp0_iter2_reg;
        icmp_ln37_reg_857_pp0_iter4_reg <= icmp_ln37_reg_857_pp0_iter3_reg;
        icmp_ln37_reg_857_pp0_iter5_reg <= icmp_ln37_reg_857_pp0_iter4_reg;
        icmp_ln37_reg_857_pp0_iter6_reg <= icmp_ln37_reg_857_pp0_iter5_reg;
        icmp_ln37_reg_857_pp0_iter7_reg <= icmp_ln37_reg_857_pp0_iter6_reg;
        icmp_ln37_reg_857_pp0_iter8_reg <= icmp_ln37_reg_857_pp0_iter7_reg;
        icmp_ln37_reg_857_pp0_iter9_reg <= icmp_ln37_reg_857_pp0_iter8_reg;
        j_mid2_reg_862_pp0_iter2_reg <= j_mid2_reg_862_pp0_iter1_reg;
        tmp_4_reg_898_pp0_iter10_reg <= tmp_4_reg_898_pp0_iter9_reg;
        tmp_4_reg_898_pp0_iter4_reg <= tmp_4_reg_898;
        tmp_4_reg_898_pp0_iter5_reg <= tmp_4_reg_898_pp0_iter4_reg;
        tmp_4_reg_898_pp0_iter6_reg <= tmp_4_reg_898_pp0_iter5_reg;
        tmp_4_reg_898_pp0_iter7_reg <= tmp_4_reg_898_pp0_iter6_reg;
        tmp_4_reg_898_pp0_iter8_reg <= tmp_4_reg_898_pp0_iter7_reg;
        tmp_4_reg_898_pp0_iter9_reg <= tmp_4_reg_898_pp0_iter8_reg;
        trunc_ln39_reg_894_pp0_iter10_reg <= trunc_ln39_reg_894_pp0_iter9_reg;
        trunc_ln39_reg_894_pp0_iter11_reg <= trunc_ln39_reg_894_pp0_iter10_reg;
        trunc_ln39_reg_894_pp0_iter12_reg <= trunc_ln39_reg_894_pp0_iter11_reg;
        trunc_ln39_reg_894_pp0_iter4_reg <= trunc_ln39_reg_894;
        trunc_ln39_reg_894_pp0_iter5_reg <= trunc_ln39_reg_894_pp0_iter4_reg;
        trunc_ln39_reg_894_pp0_iter6_reg <= trunc_ln39_reg_894_pp0_iter5_reg;
        trunc_ln39_reg_894_pp0_iter7_reg <= trunc_ln39_reg_894_pp0_iter6_reg;
        trunc_ln39_reg_894_pp0_iter8_reg <= trunc_ln39_reg_894_pp0_iter7_reg;
        trunc_ln39_reg_894_pp0_iter9_reg <= trunc_ln39_reg_894_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln35_reg_853 <= icmp_ln35_fu_520_p2;
        icmp_ln35_reg_853_pp0_iter1_reg <= icmp_ln35_reg_853;
        icmp_ln37_reg_857_pp0_iter1_reg <= icmp_ln37_reg_857;
        j_mid2_reg_862_pp0_iter1_reg <= j_mid2_reg_862;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_empty_reg_488 <= ap_phi_reg_pp0_iter9_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_empty_reg_488 <= ap_phi_reg_pp0_iter10_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_empty_reg_488 <= ap_phi_reg_pp0_iter11_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_empty_reg_488 <= ap_phi_reg_pp0_iter0_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_empty_reg_488 <= ap_phi_reg_pp0_iter1_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_empty_reg_488 <= ap_phi_reg_pp0_iter2_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_empty_reg_488 <= ap_phi_reg_pp0_iter3_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_empty_reg_488 <= ap_phi_reg_pp0_iter4_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_empty_reg_488 <= ap_phi_reg_pp0_iter5_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_empty_reg_488 <= ap_phi_reg_pp0_iter6_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_empty_reg_488 <= ap_phi_reg_pp0_iter7_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_empty_reg_488 <= ap_phi_reg_pp0_iter8_empty_reg_488;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln35_reg_853_pp0_iter10_reg == 1'd0))) begin
        empty_47_reg_919 <= empty_47_fu_683_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln35_fu_520_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_cast_mid2_v_reg_868 <= i_cast_mid2_v_fu_558_p3;
        icmp_ln37_reg_857 <= icmp_ln37_fu_544_p2;
        j_mid2_reg_862 <= j_mid2_fu_550_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op91_read_state12 == 1'b1))) begin
        mem_addr_read_reg_923 <= m_axi_mem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln39_fu_625_p1 == 1'd0) & (icmp_ln35_reg_853_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_reg_898 <= {{grp_fu_796_p3[2:1]}};
        trunc_ln39_4_reg_903 <= {{add_ln39_1_fu_658_p2[63:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_reg_853_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln39_reg_894 <= trunc_ln39_fu_625_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_10_ce0 = 1'b1;
    end else begin
        MatA_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd10) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_10_we0 = 1'b1;
    end else begin
        MatA_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_11_ce0 = 1'b1;
    end else begin
        MatA_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd11) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_11_we0 = 1'b1;
    end else begin
        MatA_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_12_ce0 = 1'b1;
    end else begin
        MatA_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd12) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_12_we0 = 1'b1;
    end else begin
        MatA_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_13_ce0 = 1'b1;
    end else begin
        MatA_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd13) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_13_we0 = 1'b1;
    end else begin
        MatA_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_14_ce0 = 1'b1;
    end else begin
        MatA_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd14) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_14_we0 = 1'b1;
    end else begin
        MatA_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_15_ce0 = 1'b1;
    end else begin
        MatA_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd15) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_15_we0 = 1'b1;
    end else begin
        MatA_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_16_ce0 = 1'b1;
    end else begin
        MatA_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd16) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_16_we0 = 1'b1;
    end else begin
        MatA_V_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_17_ce0 = 1'b1;
    end else begin
        MatA_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd17) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_17_we0 = 1'b1;
    end else begin
        MatA_V_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_18_ce0 = 1'b1;
    end else begin
        MatA_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd18) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_18_we0 = 1'b1;
    end else begin
        MatA_V_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_19_ce0 = 1'b1;
    end else begin
        MatA_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & ((empty_47_reg_919_pp0_iter12_reg == 5'd19) | ((empty_47_reg_919_pp0_iter12_reg == 5'd20) | ((empty_47_reg_919_pp0_iter12_reg == 5'd21) | ((empty_47_reg_919_pp0_iter12_reg == 5'd22) | ((empty_47_reg_919_pp0_iter12_reg == 5'd23) | ((empty_47_reg_919_pp0_iter12_reg == 5'd24) | ((empty_47_reg_919_pp0_iter12_reg == 5'd25) | ((empty_47_reg_919_pp0_iter12_reg == 5'd26) | ((empty_47_reg_919_pp0_iter12_reg == 5'd27) | ((empty_47_reg_919_pp0_iter12_reg == 5'd28) | ((empty_47_reg_919_pp0_iter12_reg == 5'd29) | ((empty_47_reg_919_pp0_iter12_reg == 5'd30) | (empty_47_reg_919_pp0_iter12_reg == 5'd31))))))))))))))) begin
        MatA_V_19_we0 = 1'b1;
    end else begin
        MatA_V_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_1_ce0 = 1'b1;
    end else begin
        MatA_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_1_we0 = 1'b1;
    end else begin
        MatA_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_2_ce0 = 1'b1;
    end else begin
        MatA_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_2_we0 = 1'b1;
    end else begin
        MatA_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_3_ce0 = 1'b1;
    end else begin
        MatA_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_3_we0 = 1'b1;
    end else begin
        MatA_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_4_ce0 = 1'b1;
    end else begin
        MatA_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_4_we0 = 1'b1;
    end else begin
        MatA_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_5_ce0 = 1'b1;
    end else begin
        MatA_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_5_we0 = 1'b1;
    end else begin
        MatA_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_6_ce0 = 1'b1;
    end else begin
        MatA_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_6_we0 = 1'b1;
    end else begin
        MatA_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_7_ce0 = 1'b1;
    end else begin
        MatA_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_7_we0 = 1'b1;
    end else begin
        MatA_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_8_ce0 = 1'b1;
    end else begin
        MatA_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd8) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_8_we0 = 1'b1;
    end else begin
        MatA_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_9_ce0 = 1'b1;
    end else begin
        MatA_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_9_we0 = 1'b1;
    end else begin
        MatA_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_ce0 = 1'b1;
    end else begin
        MatA_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (empty_47_reg_919_pp0_iter12_reg == 5'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        MatA_V_we0 = 1'b1;
    end else begin
        MatA_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln35_fu_520_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter12_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln39_reg_894_pp0_iter12_reg == 1'd1) & (icmp_ln35_reg_853_pp0_iter12_reg == 1'd0))) begin
        ap_phi_mux_empty_phi_fu_491_p4 = shiftreg25_cast_fu_729_p1;
    end else begin
        ap_phi_mux_empty_phi_fu_491_p4 = ap_phi_reg_pp0_iter13_empty_reg_488;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 7'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_196;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 14'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_200;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 8'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_192;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_591_ce = 1'b1;
    end else begin
        grp_fu_591_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_796_ce = 1'b1;
    end else begin
        grp_fu_796_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_807_ce = 1'b1;
    end else begin
        grp_fu_807_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op75_readreq_state5 == 1'b1))) begin
        m_axi_mem_ARVALID = 1'b1;
    end else begin
        m_axi_mem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op91_read_state12 == 1'b1))) begin
        m_axi_mem_RREADY = 1'b1;
    end else begin
        m_axi_mem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op75_readreq_state5 == 1'b1))) begin
        mem_blk_n_AR = m_axi_mem_ARREADY;
    end else begin
        mem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op91_read_state12 == 1'b1))) begin
        mem_blk_n_R = m_axi_mem_RVALID;
    end else begin
        mem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign MatA_V_10_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_10_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_11_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_11_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_12_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_12_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_13_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_13_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_14_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_14_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_15_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_15_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_16_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_16_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_17_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_17_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_18_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_18_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_19_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_19_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_1_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_1_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_2_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_2_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_3_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_3_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_4_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_4_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_5_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_5_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_6_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_6_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_7_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_7_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_8_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_8_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_9_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_9_d0 = trunc_ln39_2_fu_757_p1;

assign MatA_V_address0 = zext_ln39_3_fu_734_p1;

assign MatA_V_d0 = trunc_ln39_2_fu_757_p1;

assign add_ln35_1_fu_526_p2 = (ap_sig_allocacmp_indvar_flatten_load + 14'd1);

assign add_ln35_fu_538_p2 = (ap_sig_allocacmp_i_load + 7'd1);

assign add_ln37_fu_570_p2 = (j_mid2_fu_550_p3 + 8'd1);

assign add_ln39_1_fu_658_p2 = (zext_ln39_fu_645_p1 + MatA_DRAM);

assign add_ln39_2_fu_694_p2 = (and_ln39_1_fu_687_p3 + trunc_ln);

assign and_ln39_1_fu_687_p3 = {{tmp_4_reg_898_pp0_iter10_reg}, {2'd0}};

assign and_ln_fu_637_p3 = {{tmp_3_fu_628_p4}, {2'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter11 == 1'b1) & (ap_predicate_op91_read_state12 == 1'b1) & (m_axi_mem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter11 == 1'b1) & (ap_predicate_op91_read_state12 == 1'b1) & (m_axi_mem_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter11 = ((ap_predicate_op91_read_state12 == 1'b1) & (m_axi_mem_RVALID == 1'b0));
end

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((m_axi_mem_ARREADY == 1'b0) & (ap_predicate_op75_readreq_state5 == 1'b1));
end

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_empty_reg_488 = 'bx;

always @ (*) begin
    ap_predicate_op75_readreq_state5 = ((trunc_ln39_reg_894 == 1'd0) & (icmp_ln35_reg_853_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op91_read_state12 = ((trunc_ln39_reg_894_pp0_iter10_reg == 1'd0) & (icmp_ln35_reg_853_pp0_iter10_reg == 1'd0));
end

assign empty_47_fu_683_p1 = grp_fu_591_p2[4:0];

assign grp_fu_591_p1 = 7'd20;

assign grp_fu_796_p0 = grp_fu_796_p00;

assign grp_fu_796_p00 = i_cast_mid2_v_fu_558_p3;

assign grp_fu_796_p1 = 14'd150;

assign grp_fu_796_p2 = grp_fu_796_p20;

assign grp_fu_796_p20 = j_mid2_reg_862_pp0_iter1_reg;

assign grp_fu_807_p0 = grp_fu_807_p00;

assign grp_fu_807_p00 = tmp_fu_605_p4;

assign grp_fu_807_p1 = 10'd150;

assign grp_fu_807_p2 = grp_fu_807_p20;

assign grp_fu_807_p20 = j_mid2_reg_862_pp0_iter2_reg;

assign i_cast_mid2_v_fu_558_p3 = ((icmp_ln37_fu_544_p2[0:0] == 1'b1) ? add_ln35_fu_538_p2 : ap_sig_allocacmp_i_load);

assign icmp_ln35_fu_520_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 14'd15000) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_544_p2 = ((ap_sig_allocacmp_j_load == 8'd150) ? 1'b1 : 1'b0);

assign j_mid2_fu_550_p3 = ((icmp_ln37_fu_544_p2[0:0] == 1'b1) ? 8'd0 : ap_sig_allocacmp_j_load);

assign lshr_ln39_fu_710_p2 = mem_addr_read_reg_923 >> zext_ln39_1_fu_706_p1;

assign m_axi_mem_ARADDR = sext_ln39_fu_673_p1;

assign m_axi_mem_ARBURST = 2'd0;

assign m_axi_mem_ARCACHE = 4'd0;

assign m_axi_mem_ARID = 1'd0;

assign m_axi_mem_ARLEN = 32'd1;

assign m_axi_mem_ARLOCK = 2'd0;

assign m_axi_mem_ARPROT = 3'd0;

assign m_axi_mem_ARQOS = 4'd0;

assign m_axi_mem_ARREGION = 4'd0;

assign m_axi_mem_ARSIZE = 3'd0;

assign m_axi_mem_ARUSER = 1'd0;

assign m_axi_mem_AWADDR = 64'd0;

assign m_axi_mem_AWBURST = 2'd0;

assign m_axi_mem_AWCACHE = 4'd0;

assign m_axi_mem_AWID = 1'd0;

assign m_axi_mem_AWLEN = 32'd0;

assign m_axi_mem_AWLOCK = 2'd0;

assign m_axi_mem_AWPROT = 3'd0;

assign m_axi_mem_AWQOS = 4'd0;

assign m_axi_mem_AWREGION = 4'd0;

assign m_axi_mem_AWSIZE = 3'd0;

assign m_axi_mem_AWUSER = 1'd0;

assign m_axi_mem_AWVALID = 1'b0;

assign m_axi_mem_BREADY = 1'b0;

assign m_axi_mem_WDATA = 128'd0;

assign m_axi_mem_WID = 1'd0;

assign m_axi_mem_WLAST = 1'b0;

assign m_axi_mem_WSTRB = 16'd0;

assign m_axi_mem_WUSER = 1'd0;

assign m_axi_mem_WVALID = 1'b0;

assign mul_fu_599_p0 = mul_fu_599_p00;

assign mul_fu_599_p00 = i_cast_mid2_v_reg_868;

assign mul_fu_599_p1 = 15'd205;

assign sext_ln39_fu_673_p1 = $signed(trunc_ln39_4_reg_903);

assign shiftreg25_cast_fu_729_p1 = shiftreg25_mid2_fu_722_p3;

assign shiftreg25_mid2_fu_722_p3 = ((icmp_ln37_reg_857_pp0_iter12_reg[0:0] == 1'b1) ? 16'd0 : shiftreg25_fu_188);

assign shl_ln39_1_fu_699_p3 = {{add_ln39_2_reg_928}, {3'd0}};

assign tmp_3_fu_628_p4 = {{grp_fu_796_p3[13:1]}};

assign tmp_fu_605_p4 = {{mul_fu_599_p2[14:12]}};

assign trunc_ln39_1_fu_715_p1 = lshr_ln39_fu_710_p2[31:0];

assign trunc_ln39_2_fu_757_p1 = ap_phi_mux_empty_phi_fu_491_p4[15:0];

assign trunc_ln39_fu_625_p1 = grp_fu_796_p3[0:0];

assign zext_ln39_1_fu_706_p1 = shl_ln39_1_fu_699_p3;

assign zext_ln39_3_fu_734_p1 = add_ln39_3_reg_908_pp0_iter12_reg;

assign zext_ln39_fu_645_p1 = and_ln_fu_637_p3;

endmodule //real_matmul_real_matmul_Pipeline_MAT_A_ROWS_MAT_A_COLS
