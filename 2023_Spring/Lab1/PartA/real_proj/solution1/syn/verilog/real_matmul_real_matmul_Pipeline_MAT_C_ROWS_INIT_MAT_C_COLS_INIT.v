// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module real_matmul_real_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        MatC_V_address0,
        MatC_V_ce0,
        MatC_V_we0,
        MatC_V_d0,
        MatC_V_1_address0,
        MatC_V_1_ce0,
        MatC_V_1_we0,
        MatC_V_1_d0,
        MatC_V_2_address0,
        MatC_V_2_ce0,
        MatC_V_2_we0,
        MatC_V_2_d0,
        MatC_V_3_address0,
        MatC_V_3_ce0,
        MatC_V_3_we0,
        MatC_V_3_d0,
        MatC_V_4_address0,
        MatC_V_4_ce0,
        MatC_V_4_we0,
        MatC_V_4_d0,
        MatC_V_5_address0,
        MatC_V_5_ce0,
        MatC_V_5_we0,
        MatC_V_5_d0,
        MatC_V_6_address0,
        MatC_V_6_ce0,
        MatC_V_6_we0,
        MatC_V_6_d0,
        MatC_V_7_address0,
        MatC_V_7_ce0,
        MatC_V_7_we0,
        MatC_V_7_d0,
        MatC_V_8_address0,
        MatC_V_8_ce0,
        MatC_V_8_we0,
        MatC_V_8_d0,
        MatC_V_9_address0,
        MatC_V_9_ce0,
        MatC_V_9_we0,
        MatC_V_9_d0,
        MatC_V_10_address0,
        MatC_V_10_ce0,
        MatC_V_10_we0,
        MatC_V_10_d0,
        MatC_V_11_address0,
        MatC_V_11_ce0,
        MatC_V_11_we0,
        MatC_V_11_d0,
        MatC_V_12_address0,
        MatC_V_12_ce0,
        MatC_V_12_we0,
        MatC_V_12_d0,
        MatC_V_13_address0,
        MatC_V_13_ce0,
        MatC_V_13_we0,
        MatC_V_13_d0,
        MatC_V_14_address0,
        MatC_V_14_ce0,
        MatC_V_14_we0,
        MatC_V_14_d0,
        MatC_V_15_address0,
        MatC_V_15_ce0,
        MatC_V_15_we0,
        MatC_V_15_d0,
        MatC_V_16_address0,
        MatC_V_16_ce0,
        MatC_V_16_we0,
        MatC_V_16_d0,
        MatC_V_17_address0,
        MatC_V_17_ce0,
        MatC_V_17_we0,
        MatC_V_17_d0,
        MatC_V_18_address0,
        MatC_V_18_ce0,
        MatC_V_18_we0,
        MatC_V_18_d0,
        MatC_V_19_address0,
        MatC_V_19_ce0,
        MatC_V_19_we0,
        MatC_V_19_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] MatC_V_address0;
output   MatC_V_ce0;
output   MatC_V_we0;
output  [15:0] MatC_V_d0;
output  [9:0] MatC_V_1_address0;
output   MatC_V_1_ce0;
output   MatC_V_1_we0;
output  [15:0] MatC_V_1_d0;
output  [9:0] MatC_V_2_address0;
output   MatC_V_2_ce0;
output   MatC_V_2_we0;
output  [15:0] MatC_V_2_d0;
output  [9:0] MatC_V_3_address0;
output   MatC_V_3_ce0;
output   MatC_V_3_we0;
output  [15:0] MatC_V_3_d0;
output  [9:0] MatC_V_4_address0;
output   MatC_V_4_ce0;
output   MatC_V_4_we0;
output  [15:0] MatC_V_4_d0;
output  [9:0] MatC_V_5_address0;
output   MatC_V_5_ce0;
output   MatC_V_5_we0;
output  [15:0] MatC_V_5_d0;
output  [9:0] MatC_V_6_address0;
output   MatC_V_6_ce0;
output   MatC_V_6_we0;
output  [15:0] MatC_V_6_d0;
output  [9:0] MatC_V_7_address0;
output   MatC_V_7_ce0;
output   MatC_V_7_we0;
output  [15:0] MatC_V_7_d0;
output  [9:0] MatC_V_8_address0;
output   MatC_V_8_ce0;
output   MatC_V_8_we0;
output  [15:0] MatC_V_8_d0;
output  [9:0] MatC_V_9_address0;
output   MatC_V_9_ce0;
output   MatC_V_9_we0;
output  [15:0] MatC_V_9_d0;
output  [9:0] MatC_V_10_address0;
output   MatC_V_10_ce0;
output   MatC_V_10_we0;
output  [15:0] MatC_V_10_d0;
output  [9:0] MatC_V_11_address0;
output   MatC_V_11_ce0;
output   MatC_V_11_we0;
output  [15:0] MatC_V_11_d0;
output  [9:0] MatC_V_12_address0;
output   MatC_V_12_ce0;
output   MatC_V_12_we0;
output  [15:0] MatC_V_12_d0;
output  [9:0] MatC_V_13_address0;
output   MatC_V_13_ce0;
output   MatC_V_13_we0;
output  [15:0] MatC_V_13_d0;
output  [9:0] MatC_V_14_address0;
output   MatC_V_14_ce0;
output   MatC_V_14_we0;
output  [15:0] MatC_V_14_d0;
output  [9:0] MatC_V_15_address0;
output   MatC_V_15_ce0;
output   MatC_V_15_we0;
output  [15:0] MatC_V_15_d0;
output  [9:0] MatC_V_16_address0;
output   MatC_V_16_ce0;
output   MatC_V_16_we0;
output  [15:0] MatC_V_16_d0;
output  [9:0] MatC_V_17_address0;
output   MatC_V_17_ce0;
output   MatC_V_17_we0;
output  [15:0] MatC_V_17_d0;
output  [9:0] MatC_V_18_address0;
output   MatC_V_18_ce0;
output   MatC_V_18_we0;
output  [15:0] MatC_V_18_d0;
output  [9:0] MatC_V_19_address0;
output   MatC_V_19_ce0;
output   MatC_V_19_we0;
output  [15:0] MatC_V_19_d0;

reg ap_idle;
reg MatC_V_ce0;
reg MatC_V_we0;
reg MatC_V_1_ce0;
reg MatC_V_1_we0;
reg MatC_V_2_ce0;
reg MatC_V_2_we0;
reg MatC_V_3_ce0;
reg MatC_V_3_we0;
reg MatC_V_4_ce0;
reg MatC_V_4_we0;
reg MatC_V_5_ce0;
reg MatC_V_5_we0;
reg MatC_V_6_ce0;
reg MatC_V_6_we0;
reg MatC_V_7_ce0;
reg MatC_V_7_we0;
reg MatC_V_8_ce0;
reg MatC_V_8_we0;
reg MatC_V_9_ce0;
reg MatC_V_9_we0;
reg MatC_V_10_ce0;
reg MatC_V_10_we0;
reg MatC_V_11_ce0;
reg MatC_V_11_we0;
reg MatC_V_12_ce0;
reg MatC_V_12_we0;
reg MatC_V_13_ce0;
reg MatC_V_13_we0;
reg MatC_V_14_ce0;
reg MatC_V_14_we0;
reg MatC_V_15_ce0;
reg MatC_V_15_we0;
reg MatC_V_16_ce0;
reg MatC_V_16_we0;
reg MatC_V_17_ce0;
reg MatC_V_17_we0;
reg MatC_V_18_ce0;
reg MatC_V_18_we0;
reg MatC_V_19_ce0;
reg MatC_V_19_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln56_fu_440_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] j_2_mid2_fu_470_p3;
reg   [7:0] j_2_mid2_reg_599;
reg   [7:0] j_2_mid2_reg_599_pp0_iter1_reg;
reg   [7:0] j_2_mid2_reg_599_pp0_iter2_reg;
wire   [6:0] select_ln56_fu_478_p3;
reg   [2:0] tmp_reg_609;
wire   [9:0] grp_fu_566_p3;
reg   [9:0] add_ln60_reg_624;
reg   [9:0] add_ln60_reg_624_pp0_iter5_reg;
reg   [9:0] add_ln60_reg_624_pp0_iter6_reg;
reg   [9:0] add_ln60_reg_624_pp0_iter7_reg;
reg   [9:0] add_ln60_reg_624_pp0_iter8_reg;
reg   [9:0] add_ln60_reg_624_pp0_iter9_reg;
reg   [9:0] add_ln60_reg_624_pp0_iter10_reg;
wire   [4:0] empty_40_fu_539_p1;
reg   [4:0] empty_40_reg_629;
wire   [63:0] zext_ln60_1_fu_543_p1;
wire    ap_block_pp0_stage0;
reg   [7:0] j_fu_130;
wire   [7:0] add_ln58_fu_512_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_j_load;
reg   [6:0] i_fu_134;
reg   [6:0] ap_sig_allocacmp_i_load;
reg   [14:0] indvar_flatten13_fu_138;
wire   [14:0] add_ln56_1_fu_446_p2;
reg   [14:0] ap_sig_allocacmp_indvar_flatten13_load;
wire   [0:0] icmp_ln58_fu_464_p2;
wire   [6:0] add_ln56_fu_458_p2;
wire   [5:0] grp_fu_486_p1;
wire   [6:0] mul158_fu_496_p0;
wire   [8:0] mul158_fu_496_p1;
wire   [14:0] mul158_fu_496_p2;
wire   [4:0] grp_fu_486_p2;
wire   [2:0] grp_fu_566_p0;
wire   [7:0] grp_fu_566_p1;
wire   [7:0] grp_fu_566_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [9:0] grp_fu_566_p00;
wire   [9:0] grp_fu_566_p20;
wire   [14:0] mul158_fu_496_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

real_matmul_urem_7ns_6ns_5_11_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 5 ))
urem_7ns_6ns_5_11_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln56_fu_478_p3),
    .din1(grp_fu_486_p1),
    .ce(1'b1),
    .dout(grp_fu_486_p2)
);

real_matmul_mul_7ns_9ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_7ns_9ns_15_1_1_U61(
    .din0(mul158_fu_496_p0),
    .din1(mul158_fu_496_p1),
    .dout(mul158_fu_496_p2)
);

real_matmul_mac_muladd_3ns_8ns_8ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
mac_muladd_3ns_8ns_8ns_10_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_566_p0),
    .din1(grp_fu_566_p1),
    .din2(grp_fu_566_p2),
    .ce(1'b1),
    .dout(grp_fu_566_p3)
);

real_matmul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln56_fu_440_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_134 <= select_ln56_fu_478_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_134 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln56_fu_440_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten13_fu_138 <= add_ln56_1_fu_446_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten13_fu_138 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln56_fu_440_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_130 <= add_ln58_fu_512_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_130 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        add_ln60_reg_624 <= grp_fu_566_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln60_reg_624_pp0_iter10_reg <= add_ln60_reg_624_pp0_iter9_reg;
        add_ln60_reg_624_pp0_iter5_reg <= add_ln60_reg_624;
        add_ln60_reg_624_pp0_iter6_reg <= add_ln60_reg_624_pp0_iter5_reg;
        add_ln60_reg_624_pp0_iter7_reg <= add_ln60_reg_624_pp0_iter6_reg;
        add_ln60_reg_624_pp0_iter8_reg <= add_ln60_reg_624_pp0_iter7_reg;
        add_ln60_reg_624_pp0_iter9_reg <= add_ln60_reg_624_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_40_reg_629 <= empty_40_fu_539_p1;
        j_2_mid2_reg_599_pp0_iter2_reg <= j_2_mid2_reg_599_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        j_2_mid2_reg_599_pp0_iter1_reg <= j_2_mid2_reg_599;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln56_fu_440_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_2_mid2_reg_599 <= j_2_mid2_fu_470_p3;
        tmp_reg_609 <= {{mul158_fu_496_p2[14:12]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_10_ce0 = 1'b1;
    end else begin
        MatC_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd10))) begin
        MatC_V_10_we0 = 1'b1;
    end else begin
        MatC_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_11_ce0 = 1'b1;
    end else begin
        MatC_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd11))) begin
        MatC_V_11_we0 = 1'b1;
    end else begin
        MatC_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_12_ce0 = 1'b1;
    end else begin
        MatC_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd12))) begin
        MatC_V_12_we0 = 1'b1;
    end else begin
        MatC_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_13_ce0 = 1'b1;
    end else begin
        MatC_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd13))) begin
        MatC_V_13_we0 = 1'b1;
    end else begin
        MatC_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_14_ce0 = 1'b1;
    end else begin
        MatC_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd14))) begin
        MatC_V_14_we0 = 1'b1;
    end else begin
        MatC_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_15_ce0 = 1'b1;
    end else begin
        MatC_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd15))) begin
        MatC_V_15_we0 = 1'b1;
    end else begin
        MatC_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_16_ce0 = 1'b1;
    end else begin
        MatC_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd16))) begin
        MatC_V_16_we0 = 1'b1;
    end else begin
        MatC_V_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_17_ce0 = 1'b1;
    end else begin
        MatC_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd17))) begin
        MatC_V_17_we0 = 1'b1;
    end else begin
        MatC_V_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_18_ce0 = 1'b1;
    end else begin
        MatC_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd18))) begin
        MatC_V_18_we0 = 1'b1;
    end else begin
        MatC_V_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_19_ce0 = 1'b1;
    end else begin
        MatC_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & ((empty_40_reg_629 == 5'd19) | ((empty_40_reg_629 == 5'd20) | ((empty_40_reg_629 == 5'd21) | ((empty_40_reg_629 == 5'd22) | ((empty_40_reg_629 == 5'd23) | ((empty_40_reg_629 == 5'd24) | ((empty_40_reg_629 == 5'd25) | ((empty_40_reg_629 == 5'd26) | ((empty_40_reg_629 == 5'd27) | ((empty_40_reg_629 == 5'd28) | ((empty_40_reg_629 == 5'd29) | ((empty_40_reg_629 == 5'd30) | (empty_40_reg_629 == 5'd31))))))))))))))) begin
        MatC_V_19_we0 = 1'b1;
    end else begin
        MatC_V_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_1_ce0 = 1'b1;
    end else begin
        MatC_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd1))) begin
        MatC_V_1_we0 = 1'b1;
    end else begin
        MatC_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_2_ce0 = 1'b1;
    end else begin
        MatC_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd2))) begin
        MatC_V_2_we0 = 1'b1;
    end else begin
        MatC_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_3_ce0 = 1'b1;
    end else begin
        MatC_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd3))) begin
        MatC_V_3_we0 = 1'b1;
    end else begin
        MatC_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_4_ce0 = 1'b1;
    end else begin
        MatC_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd4))) begin
        MatC_V_4_we0 = 1'b1;
    end else begin
        MatC_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_5_ce0 = 1'b1;
    end else begin
        MatC_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd5))) begin
        MatC_V_5_we0 = 1'b1;
    end else begin
        MatC_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_6_ce0 = 1'b1;
    end else begin
        MatC_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd6))) begin
        MatC_V_6_we0 = 1'b1;
    end else begin
        MatC_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_7_ce0 = 1'b1;
    end else begin
        MatC_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd7))) begin
        MatC_V_7_we0 = 1'b1;
    end else begin
        MatC_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_8_ce0 = 1'b1;
    end else begin
        MatC_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd8))) begin
        MatC_V_8_we0 = 1'b1;
    end else begin
        MatC_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_9_ce0 = 1'b1;
    end else begin
        MatC_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd9))) begin
        MatC_V_9_we0 = 1'b1;
    end else begin
        MatC_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        MatC_V_ce0 = 1'b1;
    end else begin
        MatC_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (empty_40_reg_629 == 5'd0))) begin
        MatC_V_we0 = 1'b1;
    end else begin
        MatC_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln56_fu_440_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 7'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_134;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten13_load = 15'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten13_load = indvar_flatten13_fu_138;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 8'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_130;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign MatC_V_10_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_10_d0 = 16'd0;

assign MatC_V_11_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_11_d0 = 16'd0;

assign MatC_V_12_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_12_d0 = 16'd0;

assign MatC_V_13_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_13_d0 = 16'd0;

assign MatC_V_14_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_14_d0 = 16'd0;

assign MatC_V_15_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_15_d0 = 16'd0;

assign MatC_V_16_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_16_d0 = 16'd0;

assign MatC_V_17_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_17_d0 = 16'd0;

assign MatC_V_18_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_18_d0 = 16'd0;

assign MatC_V_19_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_19_d0 = 16'd0;

assign MatC_V_1_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_1_d0 = 16'd0;

assign MatC_V_2_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_2_d0 = 16'd0;

assign MatC_V_3_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_3_d0 = 16'd0;

assign MatC_V_4_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_4_d0 = 16'd0;

assign MatC_V_5_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_5_d0 = 16'd0;

assign MatC_V_6_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_6_d0 = 16'd0;

assign MatC_V_7_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_7_d0 = 16'd0;

assign MatC_V_8_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_8_d0 = 16'd0;

assign MatC_V_9_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_9_d0 = 16'd0;

assign MatC_V_address0 = zext_ln60_1_fu_543_p1;

assign MatC_V_d0 = 16'd0;

assign add_ln56_1_fu_446_p2 = (ap_sig_allocacmp_indvar_flatten13_load + 15'd1);

assign add_ln56_fu_458_p2 = (ap_sig_allocacmp_i_load + 7'd1);

assign add_ln58_fu_512_p2 = (j_2_mid2_fu_470_p3 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_40_fu_539_p1 = grp_fu_486_p2[4:0];

assign grp_fu_486_p1 = 7'd20;

assign grp_fu_566_p0 = grp_fu_566_p00;

assign grp_fu_566_p00 = tmp_reg_609;

assign grp_fu_566_p1 = 10'd200;

assign grp_fu_566_p2 = grp_fu_566_p20;

assign grp_fu_566_p20 = j_2_mid2_reg_599_pp0_iter2_reg;

assign icmp_ln56_fu_440_p2 = ((ap_sig_allocacmp_indvar_flatten13_load == 15'd20000) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_464_p2 = ((ap_sig_allocacmp_j_load == 8'd200) ? 1'b1 : 1'b0);

assign j_2_mid2_fu_470_p3 = ((icmp_ln58_fu_464_p2[0:0] == 1'b1) ? 8'd0 : ap_sig_allocacmp_j_load);

assign mul158_fu_496_p0 = mul158_fu_496_p00;

assign mul158_fu_496_p00 = select_ln56_fu_478_p3;

assign mul158_fu_496_p1 = 15'd205;

assign select_ln56_fu_478_p3 = ((icmp_ln58_fu_464_p2[0:0] == 1'b1) ? add_ln56_fu_458_p2 : ap_sig_allocacmp_i_load);

assign zext_ln60_1_fu_543_p1 = add_ln60_reg_624_pp0_iter10_reg;

endmodule //real_matmul_real_matmul_Pipeline_MAT_C_ROWS_INIT_MAT_C_COLS_INIT
