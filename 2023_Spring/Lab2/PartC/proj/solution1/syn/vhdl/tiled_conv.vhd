-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tiled_conv is
generic (
    C_M_AXI_FM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_FM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_FM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_FM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_WT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_WT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_WT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_FM_USER_VALUE : INTEGER := 0;
    C_M_AXI_FM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_FM_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_WT_USER_VALUE : INTEGER := 0;
    C_M_AXI_WT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_WT_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_fm_AWVALID : OUT STD_LOGIC;
    m_axi_fm_AWREADY : IN STD_LOGIC;
    m_axi_fm_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ADDR_WIDTH-1 downto 0);
    m_axi_fm_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fm_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_AWUSER_WIDTH-1 downto 0);
    m_axi_fm_WVALID : OUT STD_LOGIC;
    m_axi_fm_WREADY : IN STD_LOGIC;
    m_axi_fm_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_DATA_WIDTH-1 downto 0);
    m_axi_fm_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_DATA_WIDTH/8-1 downto 0);
    m_axi_fm_WLAST : OUT STD_LOGIC;
    m_axi_fm_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_WUSER_WIDTH-1 downto 0);
    m_axi_fm_ARVALID : OUT STD_LOGIC;
    m_axi_fm_ARREADY : IN STD_LOGIC;
    m_axi_fm_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ADDR_WIDTH-1 downto 0);
    m_axi_fm_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fm_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ARUSER_WIDTH-1 downto 0);
    m_axi_fm_RVALID : IN STD_LOGIC;
    m_axi_fm_RREADY : OUT STD_LOGIC;
    m_axi_fm_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_FM_DATA_WIDTH-1 downto 0);
    m_axi_fm_RLAST : IN STD_LOGIC;
    m_axi_fm_RID : IN STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FM_RUSER_WIDTH-1 downto 0);
    m_axi_fm_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_BVALID : IN STD_LOGIC;
    m_axi_fm_BREADY : OUT STD_LOGIC;
    m_axi_fm_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_BID : IN STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FM_BUSER_WIDTH-1 downto 0);
    m_axi_wt_AWVALID : OUT STD_LOGIC;
    m_axi_wt_AWREADY : IN STD_LOGIC;
    m_axi_wt_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ADDR_WIDTH-1 downto 0);
    m_axi_wt_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_wt_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_AWUSER_WIDTH-1 downto 0);
    m_axi_wt_WVALID : OUT STD_LOGIC;
    m_axi_wt_WREADY : IN STD_LOGIC;
    m_axi_wt_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_DATA_WIDTH-1 downto 0);
    m_axi_wt_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_DATA_WIDTH/8-1 downto 0);
    m_axi_wt_WLAST : OUT STD_LOGIC;
    m_axi_wt_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_WUSER_WIDTH-1 downto 0);
    m_axi_wt_ARVALID : OUT STD_LOGIC;
    m_axi_wt_ARREADY : IN STD_LOGIC;
    m_axi_wt_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ADDR_WIDTH-1 downto 0);
    m_axi_wt_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_wt_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ARUSER_WIDTH-1 downto 0);
    m_axi_wt_RVALID : IN STD_LOGIC;
    m_axi_wt_RREADY : OUT STD_LOGIC;
    m_axi_wt_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_WT_DATA_WIDTH-1 downto 0);
    m_axi_wt_RLAST : IN STD_LOGIC;
    m_axi_wt_RID : IN STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_WT_RUSER_WIDTH-1 downto 0);
    m_axi_wt_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_BVALID : IN STD_LOGIC;
    m_axi_wt_BREADY : OUT STD_LOGIC;
    m_axi_wt_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_BID : IN STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_WT_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of tiled_conv is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "tiled_conv_tiled_conv,hls_ip_2022_1_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=549388289,HLS_SYN_TPT=none,HLS_SYN_MEM=72,HLS_SYN_DSP=0,HLS_SYN_FF=10959,HLS_SYN_LUT=42500,HLS_VERSION=2022_1_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (29 downto 0) := "000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (29 downto 0) := "000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (29 downto 0) := "000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (29 downto 0) := "000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (29 downto 0) := "000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (29 downto 0) := "000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (29 downto 0) := "000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (29 downto 0) := "000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (29 downto 0) := "000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (29 downto 0) := "001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (29 downto 0) := "010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (29 downto 0) := "100000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_24C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001001100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv320_lc_1 : STD_LOGIC_VECTOR (319 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv10_6 : STD_LOGIC_VECTOR (9 downto 0) := "0000000110";
    constant ap_const_lv10_7 : STD_LOGIC_VECTOR (9 downto 0) := "0000000111";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv10_9 : STD_LOGIC_VECTOR (9 downto 0) := "0000001001";
    constant ap_const_lv10_A : STD_LOGIC_VECTOR (9 downto 0) := "0000001010";
    constant ap_const_lv10_B : STD_LOGIC_VECTOR (9 downto 0) := "0000001011";
    constant ap_const_lv10_C : STD_LOGIC_VECTOR (9 downto 0) := "0000001100";
    constant ap_const_lv10_D : STD_LOGIC_VECTOR (9 downto 0) := "0000001101";
    constant ap_const_lv10_E : STD_LOGIC_VECTOR (9 downto 0) := "0000001110";
    constant ap_const_lv10_F : STD_LOGIC_VECTOR (9 downto 0) := "0000001111";
    constant ap_const_lv10_10 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_const_lv10_11 : STD_LOGIC_VECTOR (9 downto 0) := "0000010001";
    constant ap_const_lv10_12 : STD_LOGIC_VECTOR (9 downto 0) := "0000010010";
    constant ap_const_lv10_13 : STD_LOGIC_VECTOR (9 downto 0) := "0000010011";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv11_6 : STD_LOGIC_VECTOR (10 downto 0) := "00000000110";
    constant ap_const_lv11_8 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_const_lv11_A : STD_LOGIC_VECTOR (10 downto 0) := "00000001010";
    constant ap_const_lv11_C : STD_LOGIC_VECTOR (10 downto 0) := "00000001100";
    constant ap_const_lv11_E : STD_LOGIC_VECTOR (10 downto 0) := "00000001110";
    constant ap_const_lv11_10 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_const_lv11_12 : STD_LOGIC_VECTOR (10 downto 0) := "00000010010";
    constant ap_const_lv11_14 : STD_LOGIC_VECTOR (10 downto 0) := "00000010100";
    constant ap_const_lv11_16 : STD_LOGIC_VECTOR (10 downto 0) := "00000010110";
    constant ap_const_lv11_18 : STD_LOGIC_VECTOR (10 downto 0) := "00000011000";
    constant ap_const_lv11_1A : STD_LOGIC_VECTOR (10 downto 0) := "00000011010";
    constant ap_const_lv11_1C : STD_LOGIC_VECTOR (10 downto 0) := "00000011100";
    constant ap_const_lv11_1E : STD_LOGIC_VECTOR (10 downto 0) := "00000011110";
    constant ap_const_lv11_20 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_const_lv11_22 : STD_LOGIC_VECTOR (10 downto 0) := "00000100010";
    constant ap_const_lv11_24 : STD_LOGIC_VECTOR (10 downto 0) := "00000100100";
    constant ap_const_lv11_26 : STD_LOGIC_VECTOR (10 downto 0) := "00000100110";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv9_17 : STD_LOGIC_VECTOR (8 downto 0) := "000010111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv7_5C : STD_LOGIC_VECTOR (6 downto 0) := "1011100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv320_lc_2 : STD_LOGIC_VECTOR (319 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111111111";
    constant ap_const_lv320_lc_5 : STD_LOGIC_VECTOR (319 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv16_498 : STD_LOGIC_VECTOR (15 downto 0) := "0000010010011000";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_feature_map : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_bias : STD_LOGIC_VECTOR (63 downto 0);
    signal output_feature_map : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_7x7_ap_fixed_23_20_ap_fixed_52_46_ap_fixed_3_7_7_ap_fixe : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal wt_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal output_feature_map_read_reg_2147 : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_bias_read_reg_2152 : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_weights_read_reg_2157 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_feature_map_read_reg_2162 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_612_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_reg_2206 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal shl_ln133_2_fu_646_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_2_reg_2211 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_3_fu_660_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_3_reg_2216 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_4_fu_674_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_4_reg_2221 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_5_fu_688_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_5_reg_2226 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_6_fu_702_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_6_reg_2231 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_7_fu_716_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_7_reg_2236 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_8_fu_730_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_8_reg_2241 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_9_fu_744_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_9_reg_2246 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_s_fu_758_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_s_reg_2251 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_1_fu_772_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_1_reg_2256 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_10_fu_786_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_10_reg_2261 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_11_fu_800_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_11_reg_2266 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_12_fu_814_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_12_reg_2271 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_13_fu_828_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_13_reg_2276 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_14_fu_842_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_14_reg_2281 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_15_fu_856_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_15_reg_2286 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_16_fu_870_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_16_reg_2291 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_17_fu_884_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_17_reg_2296 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_18_fu_898_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_18_reg_2301 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_19_fu_912_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_19_reg_2306 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln50_1_fu_926_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln50_1_reg_2314 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln53_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_reg_2319 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln66_mid2477_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln66_mid2477_reg_2347 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_fu_965_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln53_reg_2373 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln68_fu_973_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln68_reg_2380 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln53_1_fu_1143_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln53_1_reg_2386 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal select_ln53_2_fu_1164_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_2_reg_2391 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_3_fu_1185_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_3_reg_2396 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_4_fu_1206_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_4_reg_2401 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_5_fu_1227_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_5_reg_2406 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_6_fu_1248_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_6_reg_2411 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_7_fu_1269_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_7_reg_2416 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_8_fu_1290_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_8_reg_2421 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_9_fu_1311_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_9_reg_2426 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_10_fu_1332_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_10_reg_2431 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_11_fu_1353_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_11_reg_2436 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_12_fu_1374_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_12_reg_2441 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_13_fu_1395_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_13_reg_2446 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_14_fu_1416_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_14_reg_2451 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_15_fu_1437_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_15_reg_2456 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_16_fu_1458_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_16_reg_2461 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_17_fu_1479_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_17_reg_2466 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_18_fu_1500_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_18_reg_2471 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_19_fu_1521_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_19_reg_2476 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_20_fu_1542_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_20_reg_2481 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_21_fu_1563_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_21_reg_2486 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_22_fu_1570_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln53_22_reg_2491 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln68_fu_1591_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_reg_2496 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln68_fu_2073_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln68_reg_2501 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_mid2299_v_v_fu_1605_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid2299_v_v_reg_2506 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_mid2299_fu_1616_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid2299_reg_2511 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_52_fu_1622_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_52_reg_2516 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln68_1_fu_1630_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln68_1_reg_2521 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln68_fu_1635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln68_reg_2526 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_1640_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln_reg_2530 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln1_reg_2540 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln31_1_fu_1731_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln31_1_reg_2581 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal select_ln31_fu_1749_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln31_reg_2586 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln31_fu_1725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_1_fu_1757_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_1_reg_2592 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln31_2_fu_1765_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_2_reg_2598 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln31_3_fu_1787_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln31_3_reg_2606 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln73_1_fu_1795_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln73_1_reg_2611 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_out_buf5_addr_1_reg_2616 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal sub_ln1319_fu_1889_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln1319_reg_2621 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal conv_out_buf5_q0 : STD_LOGIC_VECTOR (319 downto 0);
    signal add_ln40_fu_1901_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln40_reg_2634 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal shl_ln2_fu_1907_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln2_reg_2639 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln40_fu_1895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1317_1_fu_1922_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1317_1_reg_2644 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1317_fu_1931_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1317_reg_2649 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln1317_2_fu_1937_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1317_2_reg_2654 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1317_3_fu_1952_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1317_3_reg_2659 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1317_4_fu_1967_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1317_4_reg_2664 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1317_5_fu_1982_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1317_5_reg_2669 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1317_6_fu_1997_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1317_6_reg_2674 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln36_fu_2006_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln36_1_fu_2011_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln73_fu_2067_p2 : STD_LOGIC_VECTOR (319 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal conv_in_buf_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_in_buf_V_ce0 : STD_LOGIC;
    signal conv_in_buf_V_we0 : STD_LOGIC;
    signal conv_in_buf_V_q0 : STD_LOGIC_VECTOR (735 downto 0);
    signal conv_wt_buf_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_V_ce0 : STD_LOGIC;
    signal conv_wt_buf_V_we0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_wt_buf_V_q0 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_ce1 : STD_LOGIC;
    signal conv_wt_buf_V_q1 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_ce2 : STD_LOGIC;
    signal conv_wt_buf_V_q2 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_ce3 : STD_LOGIC;
    signal conv_wt_buf_V_q3 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_ce4 : STD_LOGIC;
    signal conv_wt_buf_V_q4 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_ce5 : STD_LOGIC;
    signal conv_wt_buf_V_q5 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_ce6 : STD_LOGIC;
    signal conv_wt_buf_V_q6 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_out_buf5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_out_buf5_ce0 : STD_LOGIC;
    signal conv_out_buf5_we0 : STD_LOGIC;
    signal conv_out_buf5_d0 : STD_LOGIC_VECTOR (319 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_start : STD_LOGIC;
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_done : STD_LOGIC;
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_idle : STD_LOGIC;
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_ready : STD_LOGIC;
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_ce0 : STD_LOGIC;
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_we0 : STD_LOGIC;
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_d0 : STD_LOGIC_VECTOR (735 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWVALID : STD_LOGIC;
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WVALID : STD_LOGIC;
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WLAST : STD_LOGIC;
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARVALID : STD_LOGIC;
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_RREADY : STD_LOGIC;
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_BREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_start : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_done : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_idle : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_ready : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WLAST : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_RREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_BREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_ce0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_we0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_d0 : STD_LOGIC_VECTOR (111 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_ap_start : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_ap_done : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_ap_idle : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_ap_ready : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WLAST : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_RREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_BREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_3_3_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_3_3_out_ap_vld : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_2_3_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_2_3_out_ap_vld : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_1_3_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_1_3_out_ap_vld : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_0_3_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_0_3_out_ap_vld : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_start : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_done : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_idle : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_ready : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WLAST : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_RREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_BREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_conv_out_buf5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_conv_out_buf5_ce0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_start : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_done : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_idle : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_ready : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce1 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce2 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce3 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address4 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce4 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address5 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce5 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address6 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce6 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_in_buf_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_in_buf_V_ce0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_p_lcssa14_out : STD_LOGIC_VECTOR (111 downto 0);
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_p_lcssa14_out_ap_vld : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_val_V_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_val_V_out_ap_vld : STD_LOGIC;
    signal fm_AWVALID : STD_LOGIC;
    signal fm_AWREADY : STD_LOGIC;
    signal fm_WVALID : STD_LOGIC;
    signal fm_WREADY : STD_LOGIC;
    signal fm_ARVALID : STD_LOGIC;
    signal fm_ARREADY : STD_LOGIC;
    signal fm_RVALID : STD_LOGIC;
    signal fm_RREADY : STD_LOGIC;
    signal fm_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal fm_RFIFONUM : STD_LOGIC_VECTOR (9 downto 0);
    signal fm_BVALID : STD_LOGIC;
    signal fm_BREADY : STD_LOGIC;
    signal wt_AWREADY : STD_LOGIC;
    signal wt_WREADY : STD_LOGIC;
    signal wt_ARVALID : STD_LOGIC;
    signal wt_ARREADY : STD_LOGIC;
    signal wt_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal wt_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal wt_RVALID : STD_LOGIC;
    signal wt_RREADY : STD_LOGIC;
    signal wt_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal wt_RFIFONUM : STD_LOGIC_VECTOR (9 downto 0);
    signal wt_BVALID : STD_LOGIC;
    signal indvar_flatten256_reg_396 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal kernel_reg_407 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_lcssa_lcssa_lcssa_lcssa19_reg_418 : STD_LOGIC_VECTOR (111 downto 0);
    signal oh_reg_428 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_reg_439 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_45_reg_450 : STD_LOGIC_VECTOR (319 downto 0);
    signal p_lcssa_lcssa_lcssa17_reg_461 : STD_LOGIC_VECTOR (111 downto 0);
    signal ow_reg_473 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_reg_485 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_start_reg : STD_LOGIC := '0';
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_tiled_conv_Pipeline_BIAS_fu_514_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal p_cast554_fu_1871_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln76_fu_1649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln94_fu_1669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state5_on_subcall_done : BOOLEAN;
    signal kernel_group_fu_264 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln66_fu_1809_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_bias_buf_V_0_2_fu_268 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_V_1_2_fu_272 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_V_2_2_fu_276 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_V_3_2_fu_280 : STD_LOGIC_VECTOR (15 downto 0);
    signal tj_fu_284 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten279_fu_288 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln53_23_fu_1820_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ti_fu_292 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten478_fu_296 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_6_fu_616_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_fu_628_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast_fu_636_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast15_fu_624_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_fu_640_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln133_fu_654_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln133_1_fu_668_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln133_2_fu_682_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_1_fu_696_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_2_fu_710_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_8_fu_724_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_10_fu_738_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_12_fu_752_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_14_fu_766_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_16_fu_780_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_18_fu_794_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_20_fu_808_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_22_fu_822_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_23_fu_836_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_24_fu_850_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_25_fu_864_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_26_fu_878_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_27_fu_892_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_28_fu_906_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln66_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten281_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln53_fu_959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tj_mid2292_fu_977_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln53_fu_1109_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_53_fu_1115_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid_fu_1119_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_mid2_fu_1131_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tj_cast14_mid2315_fu_983_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_cast_mid1_fu_1139_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast15_mid1_fu_1127_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_29_fu_1150_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_2_mid1_fu_1156_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_1_mid2323_fu_989_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln133_3_fu_1171_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_3_mid1_fu_1177_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_3_mid2331_fu_995_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln133_4_fu_1192_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_4_mid1_fu_1198_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_5_mid2339_fu_1001_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln133_5_fu_1213_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_5_mid1_fu_1219_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_7_mid2347_fu_1007_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_30_fu_1234_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_6_mid1_fu_1240_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_9_mid2355_fu_1013_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_31_fu_1255_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_7_mid1_fu_1261_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_11_mid2363_fu_1019_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_32_fu_1276_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_8_mid1_fu_1282_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_13_mid2371_fu_1025_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_33_fu_1297_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_9_mid1_fu_1303_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_15_mid2379_fu_1031_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_34_fu_1318_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_10_mid1_fu_1324_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_17_mid2387_fu_1037_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_35_fu_1339_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_11_mid1_fu_1345_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_19_mid2395_fu_1043_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_36_fu_1360_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_12_mid1_fu_1366_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_21_mid2403_fu_1049_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_37_fu_1381_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_13_mid1_fu_1387_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_23_mid2411_fu_1055_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_38_fu_1402_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_14_mid1_fu_1408_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_25_mid2419_fu_1061_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_39_fu_1423_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_15_mid1_fu_1429_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_27_mid2427_fu_1067_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_40_fu_1444_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_16_mid1_fu_1450_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_29_mid2435_fu_1073_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_41_fu_1465_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_17_mid1_fu_1471_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_31_mid2443_fu_1079_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_42_fu_1486_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_18_mid1_fu_1492_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_33_mid2451_fu_1085_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_43_fu_1507_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_19_mid1_fu_1513_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_35_mid2459_fu_1091_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_44_fu_1528_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_20_mid1_fu_1534_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_37_mid2467_fu_1097_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln133_45_fu_1549_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_21_mid1_fu_1555_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln66_mid2475_fu_1103_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln_fu_1580_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln68_fu_1587_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln50_fu_1599_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid2299_fu_1616_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid2299_fu_1616_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln68_1_fu_1627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1715_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln36_fu_1743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln31_fu_1737_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_mid1_fu_1777_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_mid1_fu_1777_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_1715_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln53_1_fu_1814_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2079_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_1878_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1319_16_fu_1885_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1319_fu_1875_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln1317_fu_1916_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1317_1_fu_1946_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1317_2_fu_1961_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1317_3_fu_1976_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1317_4_fu_1991_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln3_fu_2027_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln73_fu_2035_p1 : STD_LOGIC_VECTOR (319 downto 0);
    signal shl_ln73_fu_2039_p2 : STD_LOGIC_VECTOR (319 downto 0);
    signal xor_ln73_fu_2045_p2 : STD_LOGIC_VECTOR (319 downto 0);
    signal add_ln859_fu_2022_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln73_1_fu_2057_p1 : STD_LOGIC_VECTOR (319 downto 0);
    signal and_ln73_fu_2051_p2 : STD_LOGIC_VECTOR (319 downto 0);
    signal shl_ln73_2_fu_2061_p2 : STD_LOGIC_VECTOR (319 downto 0);
    signal mul_ln68_fu_2073_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln68_fu_2073_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2079_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_2079_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_2079_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal grp_fu_2079_p00 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2079_p20 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln68_fu_2073_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_mid2299_fu_1616_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component tiled_conv_load_input_tile_block_from_DRAM_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_fm_buf_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        in_fm_buf_ce0 : OUT STD_LOGIC;
        in_fm_buf_we0 : OUT STD_LOGIC;
        in_fm_buf_d0 : OUT STD_LOGIC_VECTOR (735 downto 0);
        in_fm_buf_q0 : IN STD_LOGIC_VECTOR (735 downto 0);
        m_axi_fm_AWVALID : OUT STD_LOGIC;
        m_axi_fm_AWREADY : IN STD_LOGIC;
        m_axi_fm_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fm_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fm_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_WVALID : OUT STD_LOGIC;
        m_axi_fm_WREADY : IN STD_LOGIC;
        m_axi_fm_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_fm_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_WLAST : OUT STD_LOGIC;
        m_axi_fm_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_ARVALID : OUT STD_LOGIC;
        m_axi_fm_ARREADY : IN STD_LOGIC;
        m_axi_fm_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fm_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fm_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RVALID : IN STD_LOGIC;
        m_axi_fm_RREADY : OUT STD_LOGIC;
        m_axi_fm_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_fm_RLAST : IN STD_LOGIC;
        m_axi_fm_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_fm_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_BVALID : IN STD_LOGIC;
        m_axi_fm_BREADY : OUT STD_LOGIC;
        m_axi_fm_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        in_fm : IN STD_LOGIC_VECTOR (63 downto 0);
        ti : IN STD_LOGIC_VECTOR (3 downto 0);
        tj : IN STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component tiled_conv_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_wt_AWVALID : OUT STD_LOGIC;
        m_axi_wt_AWREADY : IN STD_LOGIC;
        m_axi_wt_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_wt_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_wt_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_WVALID : OUT STD_LOGIC;
        m_axi_wt_WREADY : IN STD_LOGIC;
        m_axi_wt_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_wt_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_WLAST : OUT STD_LOGIC;
        m_axi_wt_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_ARVALID : OUT STD_LOGIC;
        m_axi_wt_ARREADY : IN STD_LOGIC;
        m_axi_wt_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_wt_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_wt_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RVALID : IN STD_LOGIC;
        m_axi_wt_RREADY : OUT STD_LOGIC;
        m_axi_wt_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_wt_RLAST : IN STD_LOGIC;
        m_axi_wt_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_wt_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_BVALID : IN STD_LOGIC;
        m_axi_wt_BREADY : OUT STD_LOGIC;
        m_axi_wt_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln76 : IN STD_LOGIC_VECTOR (62 downto 0);
        conv_wt_buf_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_wt_buf_V_ce0 : OUT STD_LOGIC;
        conv_wt_buf_V_we0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv_wt_buf_V_d0 : OUT STD_LOGIC_VECTOR (111 downto 0) );
    end component;


    component tiled_conv_tiled_conv_Pipeline_BIAS IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_wt_AWVALID : OUT STD_LOGIC;
        m_axi_wt_AWREADY : IN STD_LOGIC;
        m_axi_wt_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_wt_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_wt_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_WVALID : OUT STD_LOGIC;
        m_axi_wt_WREADY : IN STD_LOGIC;
        m_axi_wt_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_wt_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_WLAST : OUT STD_LOGIC;
        m_axi_wt_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_ARVALID : OUT STD_LOGIC;
        m_axi_wt_ARREADY : IN STD_LOGIC;
        m_axi_wt_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_wt_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_wt_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RVALID : IN STD_LOGIC;
        m_axi_wt_RREADY : OUT STD_LOGIC;
        m_axi_wt_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_wt_RLAST : IN STD_LOGIC;
        m_axi_wt_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_wt_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_BVALID : IN STD_LOGIC;
        m_axi_wt_BREADY : OUT STD_LOGIC;
        m_axi_wt_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv_bias_buf_V_3_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_2_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_1_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln94 : IN STD_LOGIC_VECTOR (62 downto 0);
        conv_bias_buf_V_3_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_3_3_out_ap_vld : OUT STD_LOGIC;
        conv_bias_buf_V_2_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_2_3_out_ap_vld : OUT STD_LOGIC;
        conv_bias_buf_V_1_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_1_3_out_ap_vld : OUT STD_LOGIC;
        conv_bias_buf_V_0_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_0_3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component tiled_conv_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_fm_AWVALID : OUT STD_LOGIC;
        m_axi_fm_AWREADY : IN STD_LOGIC;
        m_axi_fm_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fm_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fm_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_WVALID : OUT STD_LOGIC;
        m_axi_fm_WREADY : IN STD_LOGIC;
        m_axi_fm_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_fm_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_WLAST : OUT STD_LOGIC;
        m_axi_fm_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_ARVALID : OUT STD_LOGIC;
        m_axi_fm_ARREADY : IN STD_LOGIC;
        m_axi_fm_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fm_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fm_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RVALID : IN STD_LOGIC;
        m_axi_fm_RREADY : OUT STD_LOGIC;
        m_axi_fm_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_fm_RLAST : IN STD_LOGIC;
        m_axi_fm_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_fm_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_BVALID : IN STD_LOGIC;
        m_axi_fm_BREADY : OUT STD_LOGIC;
        m_axi_fm_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        shl_ln73_1 : IN STD_LOGIC_VECTOR (5 downto 0);
        output_feature_map : IN STD_LOGIC_VECTOR (63 downto 0);
        conv_out_buf5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_out_buf5_ce0 : OUT STD_LOGIC;
        conv_out_buf5_q0 : IN STD_LOGIC_VECTOR (319 downto 0);
        p_mid2299 : IN STD_LOGIC_VECTOR (8 downto 0);
        select_ln53_2 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_3 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_4 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_5 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_6 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_7 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_8 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_9 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_10 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_11 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_12 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_13 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_14 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_15 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_16 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_17 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_18 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_19 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_20 : IN STD_LOGIC_VECTOR (10 downto 0);
        select_ln53_21 : IN STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component tiled_conv_tiled_conv_Pipeline_CHANNEL_KERN_I IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_lcssa_lcssa_lcssa17 : IN STD_LOGIC_VECTOR (111 downto 0);
        sub_ln1319 : IN STD_LOGIC_VECTOR (5 downto 0);
        conv_wt_buf_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_wt_buf_V_ce0 : OUT STD_LOGIC;
        conv_wt_buf_V_q0 : IN STD_LOGIC_VECTOR (111 downto 0);
        conv_wt_buf_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_wt_buf_V_ce1 : OUT STD_LOGIC;
        conv_wt_buf_V_q1 : IN STD_LOGIC_VECTOR (111 downto 0);
        conv_wt_buf_V_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_wt_buf_V_ce2 : OUT STD_LOGIC;
        conv_wt_buf_V_q2 : IN STD_LOGIC_VECTOR (111 downto 0);
        conv_wt_buf_V_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_wt_buf_V_ce3 : OUT STD_LOGIC;
        conv_wt_buf_V_q3 : IN STD_LOGIC_VECTOR (111 downto 0);
        conv_wt_buf_V_address4 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_wt_buf_V_ce4 : OUT STD_LOGIC;
        conv_wt_buf_V_q4 : IN STD_LOGIC_VECTOR (111 downto 0);
        conv_wt_buf_V_address5 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_wt_buf_V_ce5 : OUT STD_LOGIC;
        conv_wt_buf_V_q5 : IN STD_LOGIC_VECTOR (111 downto 0);
        conv_wt_buf_V_address6 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv_wt_buf_V_ce6 : OUT STD_LOGIC;
        conv_wt_buf_V_q6 : IN STD_LOGIC_VECTOR (111 downto 0);
        select_ln31_1 : IN STD_LOGIC_VECTOR (5 downto 0);
        conv_in_buf_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv_in_buf_V_ce0 : OUT STD_LOGIC;
        conv_in_buf_V_q0 : IN STD_LOGIC_VECTOR (735 downto 0);
        zext_ln1317 : IN STD_LOGIC_VECTOR (9 downto 0);
        zext_ln1317_1 : IN STD_LOGIC_VECTOR (9 downto 0);
        zext_ln1317_2 : IN STD_LOGIC_VECTOR (9 downto 0);
        zext_ln1317_3 : IN STD_LOGIC_VECTOR (9 downto 0);
        zext_ln1317_4 : IN STD_LOGIC_VECTOR (9 downto 0);
        zext_ln1317_5 : IN STD_LOGIC_VECTOR (9 downto 0);
        zext_ln46 : IN STD_LOGIC_VECTOR (9 downto 0);
        p_lcssa14_out : OUT STD_LOGIC_VECTOR (111 downto 0);
        p_lcssa14_out_ap_vld : OUT STD_LOGIC;
        val_V_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        val_V_out_ap_vld : OUT STD_LOGIC );
    end component;


    component tiled_conv_mul_5ns_6ns_9_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component tiled_conv_mux_42_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_mul_mul_5ns_11ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_mac_muladd_3ns_5ns_5ns_7_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component tiled_conv_conv_in_buf_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (735 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (735 downto 0) );
    end component;


    component tiled_conv_conv_wt_buf_V_RAM_1WNR_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (13 downto 0);
        d0 : IN STD_LOGIC_VECTOR (111 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (111 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (111 downto 0);
        address2 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (111 downto 0);
        address3 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (111 downto 0);
        address4 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (111 downto 0);
        address5 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (111 downto 0);
        address6 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (111 downto 0) );
    end component;


    component tiled_conv_conv_out_buf5_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (319 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (319 downto 0) );
    end component;


    component tiled_conv_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_feature_map : OUT STD_LOGIC_VECTOR (63 downto 0);
        layer_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        layer_bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_feature_map : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component tiled_conv_fm_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (9 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component tiled_conv_wt_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (9 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    conv_in_buf_V_U : component tiled_conv_conv_in_buf_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 736,
        AddressRange => 156,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_in_buf_V_address0,
        ce0 => conv_in_buf_V_ce0,
        we0 => conv_in_buf_V_we0,
        d0 => grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_d0,
        q0 => conv_in_buf_V_q0);

    conv_wt_buf_V_U : component tiled_conv_conv_wt_buf_V_RAM_1WNR_AUTO_1R1W
    generic map (
        DataWidth => 112,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_V_address0,
        ce0 => conv_wt_buf_V_ce0,
        we0 => conv_wt_buf_V_we0,
        d0 => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_d0,
        q0 => conv_wt_buf_V_q0,
        address1 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address1,
        ce1 => conv_wt_buf_V_ce1,
        q1 => conv_wt_buf_V_q1,
        address2 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address2,
        ce2 => conv_wt_buf_V_ce2,
        q2 => conv_wt_buf_V_q2,
        address3 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address3,
        ce3 => conv_wt_buf_V_ce3,
        q3 => conv_wt_buf_V_q3,
        address4 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address4,
        ce4 => conv_wt_buf_V_ce4,
        q4 => conv_wt_buf_V_q4,
        address5 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address5,
        ce5 => conv_wt_buf_V_ce5,
        q5 => conv_wt_buf_V_q5,
        address6 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address6,
        ce6 => conv_wt_buf_V_ce6,
        q6 => conv_wt_buf_V_q6);

    conv_out_buf5_U : component tiled_conv_conv_out_buf5_RAM_AUTO_1R1W
    generic map (
        DataWidth => 320,
        AddressRange => 92,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_out_buf5_address0,
        ce0 => conv_out_buf5_ce0,
        we0 => conv_out_buf5_we0,
        d0 => conv_out_buf5_d0,
        q0 => conv_out_buf5_q0);

    grp_load_input_tile_block_from_DRAM_0_0_fu_496 : component tiled_conv_load_input_tile_block_from_DRAM_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_start,
        ap_done => grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_done,
        ap_idle => grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_idle,
        ap_ready => grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_ready,
        in_fm_buf_address0 => grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_address0,
        in_fm_buf_ce0 => grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_ce0,
        in_fm_buf_we0 => grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_we0,
        in_fm_buf_d0 => grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_d0,
        in_fm_buf_q0 => conv_in_buf_V_q0,
        m_axi_fm_AWVALID => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWVALID,
        m_axi_fm_AWREADY => ap_const_logic_0,
        m_axi_fm_AWADDR => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWADDR,
        m_axi_fm_AWID => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWID,
        m_axi_fm_AWLEN => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWLEN,
        m_axi_fm_AWSIZE => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWSIZE,
        m_axi_fm_AWBURST => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWBURST,
        m_axi_fm_AWLOCK => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWLOCK,
        m_axi_fm_AWCACHE => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWCACHE,
        m_axi_fm_AWPROT => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWPROT,
        m_axi_fm_AWQOS => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWQOS,
        m_axi_fm_AWREGION => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWREGION,
        m_axi_fm_AWUSER => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_AWUSER,
        m_axi_fm_WVALID => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WVALID,
        m_axi_fm_WREADY => ap_const_logic_0,
        m_axi_fm_WDATA => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WDATA,
        m_axi_fm_WSTRB => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WSTRB,
        m_axi_fm_WLAST => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WLAST,
        m_axi_fm_WID => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WID,
        m_axi_fm_WUSER => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_WUSER,
        m_axi_fm_ARVALID => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARVALID,
        m_axi_fm_ARREADY => fm_ARREADY,
        m_axi_fm_ARADDR => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARADDR,
        m_axi_fm_ARID => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARID,
        m_axi_fm_ARLEN => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARLEN,
        m_axi_fm_ARSIZE => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARSIZE,
        m_axi_fm_ARBURST => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARBURST,
        m_axi_fm_ARLOCK => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARLOCK,
        m_axi_fm_ARCACHE => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARCACHE,
        m_axi_fm_ARPROT => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARPROT,
        m_axi_fm_ARQOS => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARQOS,
        m_axi_fm_ARREGION => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARREGION,
        m_axi_fm_ARUSER => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARUSER,
        m_axi_fm_RVALID => fm_RVALID,
        m_axi_fm_RREADY => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_RREADY,
        m_axi_fm_RDATA => fm_RDATA,
        m_axi_fm_RLAST => ap_const_logic_0,
        m_axi_fm_RID => ap_const_lv1_0,
        m_axi_fm_RFIFONUM => fm_RFIFONUM,
        m_axi_fm_RUSER => ap_const_lv1_0,
        m_axi_fm_RRESP => ap_const_lv2_0,
        m_axi_fm_BVALID => ap_const_logic_0,
        m_axi_fm_BREADY => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_BREADY,
        m_axi_fm_BRESP => ap_const_lv2_0,
        m_axi_fm_BID => ap_const_lv1_0,
        m_axi_fm_BUSER => ap_const_lv1_0,
        in_fm => input_feature_map_read_reg_2162,
        ti => empty_52_reg_2516,
        tj => select_ln53_1_reg_2386);

    grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506 : component tiled_conv_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_start,
        ap_done => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_done,
        ap_idle => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_idle,
        ap_ready => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_ready,
        m_axi_wt_AWVALID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWVALID,
        m_axi_wt_AWREADY => ap_const_logic_0,
        m_axi_wt_AWADDR => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWADDR,
        m_axi_wt_AWID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWID,
        m_axi_wt_AWLEN => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWLEN,
        m_axi_wt_AWSIZE => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWSIZE,
        m_axi_wt_AWBURST => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWBURST,
        m_axi_wt_AWLOCK => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWLOCK,
        m_axi_wt_AWCACHE => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWCACHE,
        m_axi_wt_AWPROT => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWPROT,
        m_axi_wt_AWQOS => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWQOS,
        m_axi_wt_AWREGION => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWREGION,
        m_axi_wt_AWUSER => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_AWUSER,
        m_axi_wt_WVALID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WVALID,
        m_axi_wt_WREADY => ap_const_logic_0,
        m_axi_wt_WDATA => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WDATA,
        m_axi_wt_WSTRB => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WSTRB,
        m_axi_wt_WLAST => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WLAST,
        m_axi_wt_WID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WID,
        m_axi_wt_WUSER => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_WUSER,
        m_axi_wt_ARVALID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARVALID,
        m_axi_wt_ARREADY => wt_ARREADY,
        m_axi_wt_ARADDR => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARADDR,
        m_axi_wt_ARID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARID,
        m_axi_wt_ARLEN => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARLEN,
        m_axi_wt_ARSIZE => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARSIZE,
        m_axi_wt_ARBURST => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARBURST,
        m_axi_wt_ARLOCK => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARLOCK,
        m_axi_wt_ARCACHE => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARCACHE,
        m_axi_wt_ARPROT => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARPROT,
        m_axi_wt_ARQOS => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARQOS,
        m_axi_wt_ARREGION => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARREGION,
        m_axi_wt_ARUSER => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARUSER,
        m_axi_wt_RVALID => wt_RVALID,
        m_axi_wt_RREADY => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_RREADY,
        m_axi_wt_RDATA => wt_RDATA,
        m_axi_wt_RLAST => ap_const_logic_0,
        m_axi_wt_RID => ap_const_lv1_0,
        m_axi_wt_RFIFONUM => wt_RFIFONUM,
        m_axi_wt_RUSER => ap_const_lv1_0,
        m_axi_wt_RRESP => ap_const_lv2_0,
        m_axi_wt_BVALID => ap_const_logic_0,
        m_axi_wt_BREADY => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_BREADY,
        m_axi_wt_BRESP => ap_const_lv2_0,
        m_axi_wt_BID => ap_const_lv1_0,
        m_axi_wt_BUSER => ap_const_lv1_0,
        sext_ln76 => trunc_ln_reg_2530,
        conv_wt_buf_V_address0 => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_address0,
        conv_wt_buf_V_ce0 => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_ce0,
        conv_wt_buf_V_we0 => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_we0,
        conv_wt_buf_V_d0 => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_d0);

    grp_tiled_conv_Pipeline_BIAS_fu_514 : component tiled_conv_tiled_conv_Pipeline_BIAS
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_tiled_conv_Pipeline_BIAS_fu_514_ap_start,
        ap_done => grp_tiled_conv_Pipeline_BIAS_fu_514_ap_done,
        ap_idle => grp_tiled_conv_Pipeline_BIAS_fu_514_ap_idle,
        ap_ready => grp_tiled_conv_Pipeline_BIAS_fu_514_ap_ready,
        m_axi_wt_AWVALID => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWVALID,
        m_axi_wt_AWREADY => ap_const_logic_0,
        m_axi_wt_AWADDR => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWADDR,
        m_axi_wt_AWID => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWID,
        m_axi_wt_AWLEN => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWLEN,
        m_axi_wt_AWSIZE => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWSIZE,
        m_axi_wt_AWBURST => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWBURST,
        m_axi_wt_AWLOCK => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWLOCK,
        m_axi_wt_AWCACHE => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWCACHE,
        m_axi_wt_AWPROT => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWPROT,
        m_axi_wt_AWQOS => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWQOS,
        m_axi_wt_AWREGION => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWREGION,
        m_axi_wt_AWUSER => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_AWUSER,
        m_axi_wt_WVALID => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WVALID,
        m_axi_wt_WREADY => ap_const_logic_0,
        m_axi_wt_WDATA => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WDATA,
        m_axi_wt_WSTRB => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WSTRB,
        m_axi_wt_WLAST => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WLAST,
        m_axi_wt_WID => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WID,
        m_axi_wt_WUSER => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_WUSER,
        m_axi_wt_ARVALID => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARVALID,
        m_axi_wt_ARREADY => wt_ARREADY,
        m_axi_wt_ARADDR => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARADDR,
        m_axi_wt_ARID => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARID,
        m_axi_wt_ARLEN => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARLEN,
        m_axi_wt_ARSIZE => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARSIZE,
        m_axi_wt_ARBURST => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARBURST,
        m_axi_wt_ARLOCK => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARLOCK,
        m_axi_wt_ARCACHE => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARCACHE,
        m_axi_wt_ARPROT => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARPROT,
        m_axi_wt_ARQOS => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARQOS,
        m_axi_wt_ARREGION => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARREGION,
        m_axi_wt_ARUSER => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARUSER,
        m_axi_wt_RVALID => wt_RVALID,
        m_axi_wt_RREADY => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_RREADY,
        m_axi_wt_RDATA => wt_RDATA,
        m_axi_wt_RLAST => ap_const_logic_0,
        m_axi_wt_RID => ap_const_lv1_0,
        m_axi_wt_RFIFONUM => wt_RFIFONUM,
        m_axi_wt_RUSER => ap_const_lv1_0,
        m_axi_wt_RRESP => ap_const_lv2_0,
        m_axi_wt_BVALID => ap_const_logic_0,
        m_axi_wt_BREADY => grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_BREADY,
        m_axi_wt_BRESP => ap_const_lv2_0,
        m_axi_wt_BID => ap_const_lv1_0,
        m_axi_wt_BUSER => ap_const_lv1_0,
        conv_bias_buf_V_3_2 => conv_bias_buf_V_3_2_fu_280,
        conv_bias_buf_V_2_2 => conv_bias_buf_V_2_2_fu_276,
        conv_bias_buf_V_1_2 => conv_bias_buf_V_1_2_fu_272,
        conv_bias_buf_V_0_2 => conv_bias_buf_V_0_2_fu_268,
        sext_ln94 => trunc_ln1_reg_2540,
        conv_bias_buf_V_3_3_out => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_3_3_out,
        conv_bias_buf_V_3_3_out_ap_vld => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_3_3_out_ap_vld,
        conv_bias_buf_V_2_3_out => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_2_3_out,
        conv_bias_buf_V_2_3_out_ap_vld => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_2_3_out_ap_vld,
        conv_bias_buf_V_1_3_out => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_1_3_out,
        conv_bias_buf_V_1_3_out_ap_vld => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_1_3_out_ap_vld,
        conv_bias_buf_V_0_3_out => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_0_3_out,
        conv_bias_buf_V_0_3_out_ap_vld => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_0_3_out_ap_vld);

    grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529 : component tiled_conv_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_start,
        ap_done => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_done,
        ap_idle => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_idle,
        ap_ready => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_ready,
        m_axi_fm_AWVALID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWVALID,
        m_axi_fm_AWREADY => fm_AWREADY,
        m_axi_fm_AWADDR => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWADDR,
        m_axi_fm_AWID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWID,
        m_axi_fm_AWLEN => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWLEN,
        m_axi_fm_AWSIZE => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWSIZE,
        m_axi_fm_AWBURST => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWBURST,
        m_axi_fm_AWLOCK => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWLOCK,
        m_axi_fm_AWCACHE => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWCACHE,
        m_axi_fm_AWPROT => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWPROT,
        m_axi_fm_AWQOS => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWQOS,
        m_axi_fm_AWREGION => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWREGION,
        m_axi_fm_AWUSER => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWUSER,
        m_axi_fm_WVALID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WVALID,
        m_axi_fm_WREADY => fm_WREADY,
        m_axi_fm_WDATA => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WDATA,
        m_axi_fm_WSTRB => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WSTRB,
        m_axi_fm_WLAST => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WLAST,
        m_axi_fm_WID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WID,
        m_axi_fm_WUSER => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WUSER,
        m_axi_fm_ARVALID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARVALID,
        m_axi_fm_ARREADY => ap_const_logic_0,
        m_axi_fm_ARADDR => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARADDR,
        m_axi_fm_ARID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARID,
        m_axi_fm_ARLEN => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARLEN,
        m_axi_fm_ARSIZE => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARSIZE,
        m_axi_fm_ARBURST => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARBURST,
        m_axi_fm_ARLOCK => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARLOCK,
        m_axi_fm_ARCACHE => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARCACHE,
        m_axi_fm_ARPROT => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARPROT,
        m_axi_fm_ARQOS => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARQOS,
        m_axi_fm_ARREGION => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARREGION,
        m_axi_fm_ARUSER => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_ARUSER,
        m_axi_fm_RVALID => ap_const_logic_0,
        m_axi_fm_RREADY => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_RREADY,
        m_axi_fm_RDATA => ap_const_lv16_0,
        m_axi_fm_RLAST => ap_const_logic_0,
        m_axi_fm_RID => ap_const_lv1_0,
        m_axi_fm_RFIFONUM => ap_const_lv10_0,
        m_axi_fm_RUSER => ap_const_lv1_0,
        m_axi_fm_RRESP => ap_const_lv2_0,
        m_axi_fm_BVALID => fm_BVALID,
        m_axi_fm_BREADY => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_BREADY,
        m_axi_fm_BRESP => ap_const_lv2_0,
        m_axi_fm_BID => ap_const_lv1_0,
        m_axi_fm_BUSER => ap_const_lv1_0,
        shl_ln73_1 => shl_ln73_1_reg_2611,
        output_feature_map => output_feature_map_read_reg_2147,
        conv_out_buf5_address0 => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_conv_out_buf5_address0,
        conv_out_buf5_ce0 => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_conv_out_buf5_ce0,
        conv_out_buf5_q0 => conv_out_buf5_q0,
        p_mid2299 => p_mid2299_reg_2511,
        select_ln53_2 => select_ln53_2_reg_2391,
        select_ln53_3 => select_ln53_3_reg_2396,
        select_ln53_4 => select_ln53_4_reg_2401,
        select_ln53_5 => select_ln53_5_reg_2406,
        select_ln53_6 => select_ln53_6_reg_2411,
        select_ln53_7 => select_ln53_7_reg_2416,
        select_ln53_8 => select_ln53_8_reg_2421,
        select_ln53_9 => select_ln53_9_reg_2426,
        select_ln53_10 => select_ln53_10_reg_2431,
        select_ln53_11 => select_ln53_11_reg_2436,
        select_ln53_12 => select_ln53_12_reg_2441,
        select_ln53_13 => select_ln53_13_reg_2446,
        select_ln53_14 => select_ln53_14_reg_2451,
        select_ln53_15 => select_ln53_15_reg_2456,
        select_ln53_16 => select_ln53_16_reg_2461,
        select_ln53_17 => select_ln53_17_reg_2466,
        select_ln53_18 => select_ln53_18_reg_2471,
        select_ln53_19 => select_ln53_19_reg_2476,
        select_ln53_20 => select_ln53_20_reg_2481,
        select_ln53_21 => select_ln53_21_reg_2486);

    grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559 : component tiled_conv_tiled_conv_Pipeline_CHANNEL_KERN_I
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_start,
        ap_done => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_done,
        ap_idle => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_idle,
        ap_ready => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_ready,
        p_lcssa_lcssa_lcssa17 => p_lcssa_lcssa_lcssa17_reg_461,
        sub_ln1319 => sub_ln1319_reg_2621,
        conv_wt_buf_V_address0 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address0,
        conv_wt_buf_V_ce0 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce0,
        conv_wt_buf_V_q0 => conv_wt_buf_V_q0,
        conv_wt_buf_V_address1 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address1,
        conv_wt_buf_V_ce1 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce1,
        conv_wt_buf_V_q1 => conv_wt_buf_V_q1,
        conv_wt_buf_V_address2 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address2,
        conv_wt_buf_V_ce2 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce2,
        conv_wt_buf_V_q2 => conv_wt_buf_V_q2,
        conv_wt_buf_V_address3 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address3,
        conv_wt_buf_V_ce3 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce3,
        conv_wt_buf_V_q3 => conv_wt_buf_V_q3,
        conv_wt_buf_V_address4 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address4,
        conv_wt_buf_V_ce4 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce4,
        conv_wt_buf_V_q4 => conv_wt_buf_V_q4,
        conv_wt_buf_V_address5 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address5,
        conv_wt_buf_V_ce5 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce5,
        conv_wt_buf_V_q5 => conv_wt_buf_V_q5,
        conv_wt_buf_V_address6 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address6,
        conv_wt_buf_V_ce6 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce6,
        conv_wt_buf_V_q6 => conv_wt_buf_V_q6,
        select_ln31_1 => select_ln31_1_reg_2592,
        conv_in_buf_V_address0 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_in_buf_V_address0,
        conv_in_buf_V_ce0 => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_in_buf_V_ce0,
        conv_in_buf_V_q0 => conv_in_buf_V_q0,
        zext_ln1317 => shl_ln2_reg_2639,
        zext_ln1317_1 => shl_ln1317_1_reg_2644,
        zext_ln1317_2 => shl_ln1317_2_reg_2654,
        zext_ln1317_3 => shl_ln1317_3_reg_2659,
        zext_ln1317_4 => shl_ln1317_4_reg_2664,
        zext_ln1317_5 => shl_ln1317_5_reg_2669,
        zext_ln46 => shl_ln1317_6_reg_2674,
        p_lcssa14_out => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_p_lcssa14_out,
        p_lcssa14_out_ap_vld => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_p_lcssa14_out_ap_vld,
        val_V_out => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_val_V_out,
        val_V_out_ap_vld => grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_val_V_out_ap_vld);

    control_s_axi_U : component tiled_conv_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_feature_map => input_feature_map,
        layer_weights => layer_weights,
        layer_bias => layer_bias,
        output_feature_map => output_feature_map,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    fm_m_axi_U : component tiled_conv_fm_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 10,
        C_M_AXI_ID_WIDTH => C_M_AXI_FM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_FM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_FM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_FM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_FM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_FM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_FM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_FM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_FM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_FM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_FM_CACHE_VALUE,
        USER_DW => 16,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_fm_AWVALID,
        AWREADY => m_axi_fm_AWREADY,
        AWADDR => m_axi_fm_AWADDR,
        AWID => m_axi_fm_AWID,
        AWLEN => m_axi_fm_AWLEN,
        AWSIZE => m_axi_fm_AWSIZE,
        AWBURST => m_axi_fm_AWBURST,
        AWLOCK => m_axi_fm_AWLOCK,
        AWCACHE => m_axi_fm_AWCACHE,
        AWPROT => m_axi_fm_AWPROT,
        AWQOS => m_axi_fm_AWQOS,
        AWREGION => m_axi_fm_AWREGION,
        AWUSER => m_axi_fm_AWUSER,
        WVALID => m_axi_fm_WVALID,
        WREADY => m_axi_fm_WREADY,
        WDATA => m_axi_fm_WDATA,
        WSTRB => m_axi_fm_WSTRB,
        WLAST => m_axi_fm_WLAST,
        WID => m_axi_fm_WID,
        WUSER => m_axi_fm_WUSER,
        ARVALID => m_axi_fm_ARVALID,
        ARREADY => m_axi_fm_ARREADY,
        ARADDR => m_axi_fm_ARADDR,
        ARID => m_axi_fm_ARID,
        ARLEN => m_axi_fm_ARLEN,
        ARSIZE => m_axi_fm_ARSIZE,
        ARBURST => m_axi_fm_ARBURST,
        ARLOCK => m_axi_fm_ARLOCK,
        ARCACHE => m_axi_fm_ARCACHE,
        ARPROT => m_axi_fm_ARPROT,
        ARQOS => m_axi_fm_ARQOS,
        ARREGION => m_axi_fm_ARREGION,
        ARUSER => m_axi_fm_ARUSER,
        RVALID => m_axi_fm_RVALID,
        RREADY => m_axi_fm_RREADY,
        RDATA => m_axi_fm_RDATA,
        RLAST => m_axi_fm_RLAST,
        RID => m_axi_fm_RID,
        RUSER => m_axi_fm_RUSER,
        RRESP => m_axi_fm_RRESP,
        BVALID => m_axi_fm_BVALID,
        BREADY => m_axi_fm_BREADY,
        BRESP => m_axi_fm_BRESP,
        BID => m_axi_fm_BID,
        BUSER => m_axi_fm_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => fm_ARVALID,
        I_ARREADY => fm_ARREADY,
        I_ARADDR => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARADDR,
        I_ARLEN => grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARLEN,
        I_RVALID => fm_RVALID,
        I_RREADY => fm_RREADY,
        I_RDATA => fm_RDATA,
        I_RFIFONUM => fm_RFIFONUM,
        I_AWVALID => fm_AWVALID,
        I_AWREADY => fm_AWREADY,
        I_AWADDR => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWADDR,
        I_AWLEN => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWLEN,
        I_WVALID => fm_WVALID,
        I_WREADY => fm_WREADY,
        I_WDATA => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WDATA,
        I_WSTRB => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WSTRB,
        I_BVALID => fm_BVALID,
        I_BREADY => fm_BREADY);

    wt_m_axi_U : component tiled_conv_wt_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 10,
        C_M_AXI_ID_WIDTH => C_M_AXI_WT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_WT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_WT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_WT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_WT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_WT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_WT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_WT_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_WT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_WT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_WT_CACHE_VALUE,
        USER_DW => 16,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_wt_AWVALID,
        AWREADY => m_axi_wt_AWREADY,
        AWADDR => m_axi_wt_AWADDR,
        AWID => m_axi_wt_AWID,
        AWLEN => m_axi_wt_AWLEN,
        AWSIZE => m_axi_wt_AWSIZE,
        AWBURST => m_axi_wt_AWBURST,
        AWLOCK => m_axi_wt_AWLOCK,
        AWCACHE => m_axi_wt_AWCACHE,
        AWPROT => m_axi_wt_AWPROT,
        AWQOS => m_axi_wt_AWQOS,
        AWREGION => m_axi_wt_AWREGION,
        AWUSER => m_axi_wt_AWUSER,
        WVALID => m_axi_wt_WVALID,
        WREADY => m_axi_wt_WREADY,
        WDATA => m_axi_wt_WDATA,
        WSTRB => m_axi_wt_WSTRB,
        WLAST => m_axi_wt_WLAST,
        WID => m_axi_wt_WID,
        WUSER => m_axi_wt_WUSER,
        ARVALID => m_axi_wt_ARVALID,
        ARREADY => m_axi_wt_ARREADY,
        ARADDR => m_axi_wt_ARADDR,
        ARID => m_axi_wt_ARID,
        ARLEN => m_axi_wt_ARLEN,
        ARSIZE => m_axi_wt_ARSIZE,
        ARBURST => m_axi_wt_ARBURST,
        ARLOCK => m_axi_wt_ARLOCK,
        ARCACHE => m_axi_wt_ARCACHE,
        ARPROT => m_axi_wt_ARPROT,
        ARQOS => m_axi_wt_ARQOS,
        ARREGION => m_axi_wt_ARREGION,
        ARUSER => m_axi_wt_ARUSER,
        RVALID => m_axi_wt_RVALID,
        RREADY => m_axi_wt_RREADY,
        RDATA => m_axi_wt_RDATA,
        RLAST => m_axi_wt_RLAST,
        RID => m_axi_wt_RID,
        RUSER => m_axi_wt_RUSER,
        RRESP => m_axi_wt_RRESP,
        BVALID => m_axi_wt_BVALID,
        BREADY => m_axi_wt_BREADY,
        BRESP => m_axi_wt_BRESP,
        BID => m_axi_wt_BID,
        BUSER => m_axi_wt_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => wt_ARVALID,
        I_ARREADY => wt_ARREADY,
        I_ARADDR => wt_ARADDR,
        I_ARLEN => wt_ARLEN,
        I_RVALID => wt_RVALID,
        I_RREADY => wt_RREADY,
        I_RDATA => wt_RDATA,
        I_RFIFONUM => wt_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => wt_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => wt_WREADY,
        I_WDATA => ap_const_lv16_0,
        I_WSTRB => ap_const_lv2_0,
        I_BVALID => wt_BVALID,
        I_BREADY => ap_const_logic_0);

    mul_5ns_6ns_9_1_1_U85 : component tiled_conv_mul_5ns_6ns_9_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 6,
        dout_WIDTH => 9)
    port map (
        din0 => p_mid2299_fu_1616_p0,
        din1 => p_mid2299_fu_1616_p1,
        dout => p_mid2299_fu_1616_p2);

    mux_42_16_1_1_U86 : component tiled_conv_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_0_3_out,
        din1 => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_1_3_out,
        din2 => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_2_3_out,
        din3 => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_3_3_out,
        din4 => tmp_1_fu_1715_p5,
        dout => tmp_1_fu_1715_p6);

    mux_42_16_1_1_U87 : component tiled_conv_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_0_3_out,
        din1 => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_1_3_out,
        din2 => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_2_3_out,
        din3 => grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_3_3_out,
        din4 => tmp_1_mid1_fu_1777_p5,
        dout => tmp_1_mid1_fu_1777_p6);

    mul_mul_5ns_11ns_16_1_1_U88 : component tiled_conv_mul_mul_5ns_11ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 11,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln68_fu_2073_p0,
        din1 => mul_ln68_fu_2073_p1,
        dout => mul_ln68_fu_2073_p2);

    mac_muladd_3ns_5ns_5ns_7_1_1_U89 : component tiled_conv_mac_muladd_3ns_5ns_5ns_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 5,
        din2_WIDTH => 5,
        dout_WIDTH => 7)
    port map (
        din0 => grp_fu_2079_p0,
        din1 => grp_fu_2079_p1,
        din2 => grp_fu_2079_p2,
        dout => grp_fu_2079_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln68_fu_1635_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_ready = ap_const_logic_1)) then 
                    grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tiled_conv_Pipeline_BIAS_fu_514_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_tiled_conv_Pipeline_BIAS_fu_514_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    grp_tiled_conv_Pipeline_BIAS_fu_514_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tiled_conv_Pipeline_BIAS_fu_514_ap_ready = ap_const_logic_1)) then 
                    grp_tiled_conv_Pipeline_BIAS_fu_514_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln40_fu_1895_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_ready = ap_const_logic_1)) then 
                    grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln31_fu_1725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                    grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_ready = ap_const_logic_1)) then 
                    grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_ready = ap_const_logic_1)) then 
                    grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_45_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                empty_45_reg_450 <= conv_out_buf5_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                empty_45_reg_450 <= or_ln73_fu_2067_p2;
            end if; 
        end if;
    end process;

    h_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_1895_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                h_reg_439 <= add_ln36_fu_2006_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                h_reg_439 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten256_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_1895_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                indvar_flatten256_reg_396 <= add_ln31_1_reg_2581;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                indvar_flatten256_reg_396 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    indvar_flatten279_fu_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten279_fu_288 <= ap_const_lv11_0;
            elsif (((icmp_ln31_fu_1725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                indvar_flatten279_fu_288 <= select_ln53_23_fu_1820_p3;
            end if; 
        end if;
    end process;

    indvar_flatten478_fu_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten478_fu_296 <= ap_const_lv14_0;
            elsif (((icmp_ln31_fu_1725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                indvar_flatten478_fu_296 <= add_ln50_1_reg_2314;
            end if; 
        end if;
    end process;

    kernel_group_fu_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                kernel_group_fu_264 <= ap_const_lv5_0;
            elsif (((icmp_ln31_fu_1725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                kernel_group_fu_264 <= add_ln66_fu_1809_p2;
            end if; 
        end if;
    end process;

    kernel_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_1895_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                kernel_reg_407 <= select_ln31_2_reg_2598;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                kernel_reg_407 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    oh_reg_428_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_1895_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                oh_reg_428 <= add_ln36_1_fu_2011_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                oh_reg_428 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    ow_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                ow_reg_473 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                ow_reg_473 <= add_ln40_reg_2634;
            end if; 
        end if;
    end process;

    p_lcssa_lcssa_lcssa17_reg_461_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                p_lcssa_lcssa_lcssa17_reg_461 <= p_lcssa_lcssa_lcssa_lcssa19_reg_418;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                p_lcssa_lcssa_lcssa17_reg_461 <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_p_lcssa14_out;
            end if; 
        end if;
    end process;

    p_lcssa_lcssa_lcssa_lcssa19_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_1895_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                p_lcssa_lcssa_lcssa_lcssa19_reg_418 <= p_lcssa_lcssa_lcssa17_reg_461;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                p_lcssa_lcssa_lcssa_lcssa19_reg_418 <= conv_7x7_ap_fixed_23_20_ap_fixed_52_46_ap_fixed_3_7_7_ap_fixe;
            end if; 
        end if;
    end process;

    ti_fu_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                ti_fu_292 <= ap_const_lv5_0;
            elsif (((icmp_ln31_fu_1725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                ti_fu_292 <= p_mid2299_v_v_reg_2506;
            end if; 
        end if;
    end process;

    tj_fu_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tj_fu_284 <= ap_const_lv6_0;
            elsif (((icmp_ln31_fu_1725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                tj_fu_284 <= select_ln53_22_reg_2491;
            end if; 
        end if;
    end process;

    w_reg_485_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                w_reg_485 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                w_reg_485 <= add_ln1317_reg_2649;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_1895_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                add_ln1317_reg_2649 <= add_ln1317_fu_1931_p2;
                    shl_ln1317_1_reg_2644(9 downto 5) <= shl_ln1317_1_fu_1922_p3(9 downto 5);
                    shl_ln1317_2_reg_2654(9 downto 4) <= shl_ln1317_2_fu_1937_p3(9 downto 4);
                    shl_ln1317_3_reg_2659(9 downto 4) <= shl_ln1317_3_fu_1952_p3(9 downto 4);
                    shl_ln1317_4_reg_2664(9 downto 4) <= shl_ln1317_4_fu_1967_p3(9 downto 4);
                    shl_ln1317_5_reg_2669(9 downto 4) <= shl_ln1317_5_fu_1982_p3(9 downto 4);
                    shl_ln1317_6_reg_2674(9 downto 4) <= shl_ln1317_6_fu_1997_p3(9 downto 4);
                    shl_ln2_reg_2639(9 downto 4) <= shl_ln2_fu_1907_p3(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                add_ln31_1_reg_2581 <= add_ln31_1_fu_1731_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                add_ln40_reg_2634 <= add_ln40_fu_1901_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln50_1_reg_2314 <= add_ln50_1_fu_926_p2;
                empty_reg_2206 <= empty_fu_612_p1;
                    shl_ln133_10_reg_2261(10 downto 3) <= shl_ln133_10_fu_786_p3(10 downto 3);
                    shl_ln133_11_reg_2266(10 downto 3) <= shl_ln133_11_fu_800_p3(10 downto 3);
                    shl_ln133_12_reg_2271(10 downto 3) <= shl_ln133_12_fu_814_p3(10 downto 3);
                    shl_ln133_13_reg_2276(10 downto 3) <= shl_ln133_13_fu_828_p3(10 downto 3);
                    shl_ln133_14_reg_2281(10 downto 3) <= shl_ln133_14_fu_842_p3(10 downto 3);
                    shl_ln133_15_reg_2286(10 downto 3) <= shl_ln133_15_fu_856_p3(10 downto 3);
                    shl_ln133_16_reg_2291(10 downto 3) <= shl_ln133_16_fu_870_p3(10 downto 3);
                    shl_ln133_17_reg_2296(10 downto 3) <= shl_ln133_17_fu_884_p3(10 downto 3);
                    shl_ln133_18_reg_2301(10 downto 3) <= shl_ln133_18_fu_898_p3(10 downto 3);
                    shl_ln133_19_reg_2306(10 downto 3) <= shl_ln133_19_fu_912_p3(10 downto 3);
                    shl_ln133_1_reg_2256(10 downto 3) <= shl_ln133_1_fu_772_p3(10 downto 3);
                    shl_ln133_2_reg_2211(10 downto 3) <= shl_ln133_2_fu_646_p3(10 downto 3);
                    shl_ln133_3_reg_2216(10 downto 3) <= shl_ln133_3_fu_660_p3(10 downto 3);
                    shl_ln133_4_reg_2221(10 downto 3) <= shl_ln133_4_fu_674_p3(10 downto 3);
                    shl_ln133_5_reg_2226(10 downto 3) <= shl_ln133_5_fu_688_p3(10 downto 3);
                    shl_ln133_6_reg_2231(10 downto 3) <= shl_ln133_6_fu_702_p3(10 downto 3);
                    shl_ln133_7_reg_2236(10 downto 3) <= shl_ln133_7_fu_716_p3(10 downto 3);
                    shl_ln133_8_reg_2241(10 downto 3) <= shl_ln133_8_fu_730_p3(10 downto 3);
                    shl_ln133_9_reg_2246(10 downto 3) <= shl_ln133_9_fu_744_p3(10 downto 3);
                    shl_ln133_s_reg_2251(10 downto 3) <= shl_ln133_s_fu_758_p3(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln68_1_reg_2521 <= add_ln68_1_fu_1630_p2;
                empty_52_reg_2516 <= empty_52_fu_1622_p1;
                icmp_ln68_reg_2526 <= icmp_ln68_fu_1635_p2;
                p_mid2299_reg_2511 <= p_mid2299_fu_1616_p2;
                p_mid2299_v_v_reg_2506 <= p_mid2299_v_v_fu_1605_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln68_reg_2496 <= add_ln68_fu_1591_p2;
                mul_ln68_reg_2501 <= mul_ln68_fu_2073_p2;
                    select_ln53_10_reg_2431(10 downto 3) <= select_ln53_10_fu_1332_p3(10 downto 3);
                    select_ln53_11_reg_2436(10 downto 3) <= select_ln53_11_fu_1353_p3(10 downto 3);
                    select_ln53_12_reg_2441(10 downto 3) <= select_ln53_12_fu_1374_p3(10 downto 3);
                    select_ln53_13_reg_2446(10 downto 3) <= select_ln53_13_fu_1395_p3(10 downto 3);
                    select_ln53_14_reg_2451(10 downto 3) <= select_ln53_14_fu_1416_p3(10 downto 3);
                    select_ln53_15_reg_2456(10 downto 3) <= select_ln53_15_fu_1437_p3(10 downto 3);
                    select_ln53_16_reg_2461(10 downto 3) <= select_ln53_16_fu_1458_p3(10 downto 3);
                    select_ln53_17_reg_2466(10 downto 3) <= select_ln53_17_fu_1479_p3(10 downto 3);
                    select_ln53_18_reg_2471(10 downto 3) <= select_ln53_18_fu_1500_p3(10 downto 3);
                    select_ln53_19_reg_2476(10 downto 3) <= select_ln53_19_fu_1521_p3(10 downto 3);
                select_ln53_1_reg_2386 <= select_ln53_1_fu_1143_p3;
                    select_ln53_20_reg_2481(10 downto 3) <= select_ln53_20_fu_1542_p3(10 downto 3);
                    select_ln53_21_reg_2486(10 downto 3) <= select_ln53_21_fu_1563_p3(10 downto 3);
                select_ln53_22_reg_2491 <= select_ln53_22_fu_1570_p3;
                    select_ln53_2_reg_2391(10 downto 3) <= select_ln53_2_fu_1164_p3(10 downto 3);
                    select_ln53_3_reg_2396(10 downto 3) <= select_ln53_3_fu_1185_p3(10 downto 3);
                    select_ln53_4_reg_2401(10 downto 3) <= select_ln53_4_fu_1206_p3(10 downto 3);
                    select_ln53_5_reg_2406(10 downto 3) <= select_ln53_5_fu_1227_p3(10 downto 3);
                    select_ln53_6_reg_2411(10 downto 3) <= select_ln53_6_fu_1248_p3(10 downto 3);
                    select_ln53_7_reg_2416(10 downto 3) <= select_ln53_7_fu_1269_p3(10 downto 3);
                    select_ln53_8_reg_2421(10 downto 3) <= select_ln53_8_fu_1290_p3(10 downto 3);
                    select_ln53_9_reg_2426(10 downto 3) <= select_ln53_9_fu_1311_p3(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_fu_1725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                conv_7x7_ap_fixed_23_20_ap_fixed_52_46_ap_fixed_3_7_7_ap_fixe <= p_lcssa_lcssa_lcssa_lcssa19_reg_418;
                conv_bias_buf_V_0_2_fu_268 <= grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_0_3_out;
                conv_bias_buf_V_1_2_fu_272 <= grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_1_3_out;
                conv_bias_buf_V_2_2_fu_276 <= grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_2_3_out;
                conv_bias_buf_V_3_2_fu_280 <= grp_tiled_conv_Pipeline_BIAS_fu_514_conv_bias_buf_V_3_3_out;
                    shl_ln73_1_reg_2611(5 downto 2) <= shl_ln73_1_fu_1795_p3(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                conv_out_buf5_addr_1_reg_2616 <= p_cast554_fu_1871_p1(7 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln50_fu_920_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln53_reg_2319 <= icmp_ln53_fu_935_p2;
                icmp_ln66_mid2477_reg_2347 <= icmp_ln66_mid2477_fu_953_p2;
                select_ln53_reg_2373 <= select_ln53_fu_965_p3;
                trunc_ln68_reg_2380 <= trunc_ln68_fu_973_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                input_feature_map_read_reg_2162 <= input_feature_map;
                layer_bias_read_reg_2152 <= layer_bias;
                layer_weights_read_reg_2157 <= layer_weights;
                output_feature_map_read_reg_2147 <= output_feature_map;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_fu_1725_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                select_ln31_1_reg_2592 <= select_ln31_1_fu_1757_p3;
                select_ln31_2_reg_2598 <= select_ln31_2_fu_1765_p3;
                select_ln31_3_reg_2606 <= select_ln31_3_fu_1787_p3;
                select_ln31_reg_2586 <= select_ln31_fu_1749_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                sub_ln1319_reg_2621 <= sub_ln1319_fu_1889_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                trunc_ln1_reg_2540 <= add_ln68_reg_2496(63 downto 1);
                trunc_ln_reg_2530 <= add_ln68_1_reg_2521(63 downto 1);
            end if;
        end if;
    end process;
    shl_ln133_2_reg_2211(2 downto 0) <= "000";
    shl_ln133_3_reg_2216(2 downto 0) <= "010";
    shl_ln133_4_reg_2221(2 downto 0) <= "100";
    shl_ln133_5_reg_2226(2 downto 0) <= "110";
    shl_ln133_6_reg_2231(2 downto 0) <= "000";
    shl_ln133_7_reg_2236(2 downto 0) <= "010";
    shl_ln133_8_reg_2241(2 downto 0) <= "100";
    shl_ln133_9_reg_2246(2 downto 0) <= "110";
    shl_ln133_s_reg_2251(2 downto 0) <= "000";
    shl_ln133_1_reg_2256(2 downto 0) <= "010";
    shl_ln133_10_reg_2261(2 downto 0) <= "100";
    shl_ln133_11_reg_2266(2 downto 0) <= "110";
    shl_ln133_12_reg_2271(2 downto 0) <= "000";
    shl_ln133_13_reg_2276(2 downto 0) <= "010";
    shl_ln133_14_reg_2281(2 downto 0) <= "100";
    shl_ln133_15_reg_2286(2 downto 0) <= "110";
    shl_ln133_16_reg_2291(2 downto 0) <= "000";
    shl_ln133_17_reg_2296(2 downto 0) <= "010";
    shl_ln133_18_reg_2301(2 downto 0) <= "100";
    shl_ln133_19_reg_2306(2 downto 0) <= "110";
    select_ln53_2_reg_2391(2 downto 0) <= "000";
    select_ln53_3_reg_2396(2 downto 0) <= "010";
    select_ln53_4_reg_2401(2 downto 0) <= "100";
    select_ln53_5_reg_2406(2 downto 0) <= "110";
    select_ln53_6_reg_2411(2 downto 0) <= "000";
    select_ln53_7_reg_2416(2 downto 0) <= "010";
    select_ln53_8_reg_2421(2 downto 0) <= "100";
    select_ln53_9_reg_2426(2 downto 0) <= "110";
    select_ln53_10_reg_2431(2 downto 0) <= "000";
    select_ln53_11_reg_2436(2 downto 0) <= "010";
    select_ln53_12_reg_2441(2 downto 0) <= "100";
    select_ln53_13_reg_2446(2 downto 0) <= "110";
    select_ln53_14_reg_2451(2 downto 0) <= "000";
    select_ln53_15_reg_2456(2 downto 0) <= "010";
    select_ln53_16_reg_2461(2 downto 0) <= "100";
    select_ln53_17_reg_2466(2 downto 0) <= "110";
    select_ln53_18_reg_2471(2 downto 0) <= "000";
    select_ln53_19_reg_2476(2 downto 0) <= "010";
    select_ln53_20_reg_2481(2 downto 0) <= "100";
    select_ln53_21_reg_2486(2 downto 0) <= "110";
    shl_ln73_1_reg_2611(1 downto 0) <= "00";
    shl_ln2_reg_2639(3 downto 0) <= "0000";
    shl_ln1317_1_reg_2644(4 downto 0) <= "10000";
    shl_ln1317_2_reg_2654(3 downto 0) <= "0000";
    shl_ln1317_3_reg_2659(3 downto 0) <= "0000";
    shl_ln1317_4_reg_2664(3 downto 0) <= "0000";
    shl_ln1317_5_reg_2669(3 downto 0) <= "0000";
    shl_ln1317_6_reg_2674(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state2, icmp_ln50_fu_920_p2, ap_CS_fsm_state24, icmp_ln31_fu_1725_p2, ap_CS_fsm_state27, icmp_ln40_fu_1895_p2, grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_done, grp_tiled_conv_Pipeline_BIAS_fu_514_ap_done, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_done, grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_done, wt_ARREADY, ap_CS_fsm_state13, ap_CS_fsm_state22, ap_CS_fsm_state30, ap_CS_fsm_state28, ap_block_state5_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln50_fu_920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if ((not(((wt_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((wt_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((grp_tiled_conv_Pipeline_BIAS_fu_514_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln31_fu_1725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((icmp_ln40_fu_1895_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                if (((grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state30 => 
                if (((grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1317_1_fu_1946_p2 <= std_logic_vector(unsigned(w_reg_485) + unsigned(ap_const_lv6_3));
    add_ln1317_2_fu_1961_p2 <= std_logic_vector(unsigned(w_reg_485) + unsigned(ap_const_lv6_4));
    add_ln1317_3_fu_1976_p2 <= std_logic_vector(unsigned(w_reg_485) + unsigned(ap_const_lv6_5));
    add_ln1317_4_fu_1991_p2 <= std_logic_vector(unsigned(w_reg_485) + unsigned(ap_const_lv6_6));
    add_ln1317_fu_1931_p2 <= std_logic_vector(unsigned(w_reg_485) + unsigned(ap_const_lv6_2));
    add_ln133_10_fu_738_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_7));
    add_ln133_12_fu_752_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_8));
    add_ln133_14_fu_766_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_9));
    add_ln133_16_fu_780_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_A));
    add_ln133_18_fu_794_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_B));
    add_ln133_1_fu_696_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_4));
    add_ln133_20_fu_808_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_C));
    add_ln133_22_fu_822_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_D));
    add_ln133_23_fu_836_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_E));
    add_ln133_24_fu_850_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_F));
    add_ln133_25_fu_864_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_10));
    add_ln133_26_fu_878_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_11));
    add_ln133_27_fu_892_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_12));
    add_ln133_28_fu_906_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_13));
    add_ln133_29_fu_1150_p2 <= std_logic_vector(unsigned(p_cast_mid1_fu_1139_p1) + unsigned(p_cast15_mid1_fu_1127_p1));
    add_ln133_2_fu_710_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_5));
    add_ln133_30_fu_1234_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_4));
    add_ln133_31_fu_1255_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_5));
    add_ln133_32_fu_1276_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_6));
    add_ln133_33_fu_1297_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_7));
    add_ln133_34_fu_1318_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_8));
    add_ln133_35_fu_1339_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_9));
    add_ln133_36_fu_1360_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_A));
    add_ln133_37_fu_1381_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_B));
    add_ln133_38_fu_1402_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_C));
    add_ln133_39_fu_1423_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_D));
    add_ln133_40_fu_1444_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_E));
    add_ln133_41_fu_1465_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_F));
    add_ln133_42_fu_1486_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_10));
    add_ln133_43_fu_1507_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_11));
    add_ln133_44_fu_1528_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_12));
    add_ln133_45_fu_1549_p2 <= std_logic_vector(unsigned(add_ln133_29_fu_1150_p2) + unsigned(ap_const_lv10_13));
    add_ln133_8_fu_724_p2 <= std_logic_vector(unsigned(add_ln133_fu_640_p2) + unsigned(ap_const_lv10_6));
    add_ln133_fu_640_p2 <= std_logic_vector(unsigned(p_cast_fu_636_p1) + unsigned(p_cast15_fu_624_p1));
    add_ln31_1_fu_1731_p2 <= std_logic_vector(unsigned(indvar_flatten256_reg_396) + unsigned(ap_const_lv7_1));
    add_ln31_fu_1737_p2 <= std_logic_vector(unsigned(kernel_reg_407) + unsigned(ap_const_lv3_1));
    add_ln36_1_fu_2011_p2 <= std_logic_vector(unsigned(select_ln31_reg_2586) + unsigned(ap_const_lv5_1));
    add_ln36_fu_2006_p2 <= std_logic_vector(unsigned(select_ln31_1_reg_2592) + unsigned(ap_const_lv6_2));
    add_ln40_fu_1901_p2 <= std_logic_vector(unsigned(ow_reg_473) + unsigned(ap_const_lv5_1));
    add_ln50_1_fu_926_p2 <= std_logic_vector(unsigned(indvar_flatten478_fu_296) + unsigned(ap_const_lv14_1));
    add_ln50_fu_1599_p2 <= std_logic_vector(unsigned(ti_fu_292) + unsigned(ap_const_lv5_1));
    add_ln53_1_fu_1814_p2 <= std_logic_vector(unsigned(indvar_flatten279_fu_288) + unsigned(ap_const_lv11_1));
    add_ln53_fu_1109_p2 <= std_logic_vector(unsigned(tj_mid2292_fu_977_p3) + unsigned(ap_const_lv6_1));
    add_ln66_fu_1809_p2 <= std_logic_vector(unsigned(select_ln53_reg_2373) + unsigned(ap_const_lv5_1));
    add_ln68_1_fu_1630_p2 <= std_logic_vector(unsigned(zext_ln68_1_fu_1627_p1) + unsigned(layer_weights_read_reg_2157));
    add_ln68_fu_1591_p2 <= std_logic_vector(unsigned(zext_ln68_fu_1587_p1) + unsigned(layer_bias_read_reg_2152));
    add_ln859_fu_2022_p2 <= std_logic_vector(unsigned(grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_val_V_out) + unsigned(select_ln31_3_reg_2606));
    and_ln73_fu_2051_p2 <= (xor_ln73_fu_2045_p2 and empty_45_reg_450);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_done)
    begin
        if ((grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state14_blk_assign_proc : process(wt_ARREADY)
    begin
        if ((wt_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(grp_tiled_conv_Pipeline_BIAS_fu_514_ap_done)
    begin
        if ((grp_tiled_conv_Pipeline_BIAS_fu_514_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_done)
    begin
        if ((grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state30_blk_assign_proc : process(grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_done)
    begin
        if ((grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(wt_ARREADY, ap_block_state5_on_subcall_done)
    begin
        if (((wt_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5_on_subcall_done))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state5_on_subcall_done_assign_proc : process(icmp_ln68_reg_2526, grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_done)
    begin
                ap_block_state5_on_subcall_done <= ((grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_done = ap_const_logic_0) and (icmp_ln68_reg_2526 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln50_fu_920_p2)
    begin
        if (((icmp_ln50_fu_920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln50_fu_920_p2)
    begin
        if (((icmp_ln50_fu_920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    conv_in_buf_V_address0_assign_proc : process(ap_CS_fsm_state5, icmp_ln68_reg_2526, grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_address0, grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_in_buf_V_address0, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv_in_buf_V_address0 <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_in_buf_V_address0;
        elsif (((icmp_ln68_reg_2526 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            conv_in_buf_V_address0 <= grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_address0;
        else 
            conv_in_buf_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    conv_in_buf_V_ce0_assign_proc : process(ap_CS_fsm_state5, icmp_ln68_reg_2526, grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_ce0, grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_in_buf_V_ce0, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv_in_buf_V_ce0 <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_in_buf_V_ce0;
        elsif (((icmp_ln68_reg_2526 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            conv_in_buf_V_ce0 <= grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_ce0;
        else 
            conv_in_buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_in_buf_V_we0_assign_proc : process(ap_CS_fsm_state5, icmp_ln68_reg_2526, grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_we0)
    begin
        if (((icmp_ln68_reg_2526 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            conv_in_buf_V_we0 <= grp_load_input_tile_block_from_DRAM_0_0_fu_496_in_fm_buf_we0;
        else 
            conv_in_buf_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf5_address0_assign_proc : process(ap_CS_fsm_state1, conv_out_buf5_addr_1_reg_2616, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_conv_out_buf5_address0, ap_CS_fsm_state30, p_cast554_fu_1871_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv_out_buf5_address0 <= conv_out_buf5_addr_1_reg_2616;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv_out_buf5_address0 <= p_cast554_fu_1871_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            conv_out_buf5_address0 <= ap_const_lv64_0(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv_out_buf5_address0 <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_conv_out_buf5_address0;
        else 
            conv_out_buf5_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_out_buf5_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_conv_out_buf5_ce0, ap_CS_fsm_state30)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            conv_out_buf5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv_out_buf5_ce0 <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_conv_out_buf5_ce0;
        else 
            conv_out_buf5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf5_d0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state27, empty_45_reg_450)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv_out_buf5_d0 <= empty_45_reg_450;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            conv_out_buf5_d0 <= ap_const_lv320_lc_1;
        else 
            conv_out_buf5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_out_buf5_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state27, icmp_ln40_fu_1895_p2)
    begin
        if ((((icmp_ln40_fu_1895_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            conv_out_buf5_we0 <= ap_const_logic_1;
        else 
            conv_out_buf5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_address0_assign_proc : process(grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_address0, grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address0, ap_CS_fsm_state13, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv_wt_buf_V_address0 <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv_wt_buf_V_address0 <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_address0;
        else 
            conv_wt_buf_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_V_ce0_assign_proc : process(grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_ce0, grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce0, ap_CS_fsm_state13, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv_wt_buf_V_ce0 <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv_wt_buf_V_ce0 <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_ce0;
        else 
            conv_wt_buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce1_assign_proc : process(grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce1, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv_wt_buf_V_ce1 <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce1;
        else 
            conv_wt_buf_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce2_assign_proc : process(grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce2, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv_wt_buf_V_ce2 <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce2;
        else 
            conv_wt_buf_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce3_assign_proc : process(grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce3, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv_wt_buf_V_ce3 <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce3;
        else 
            conv_wt_buf_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce4_assign_proc : process(grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce4, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv_wt_buf_V_ce4 <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce4;
        else 
            conv_wt_buf_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce5_assign_proc : process(grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce5, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv_wt_buf_V_ce5 <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce5;
        else 
            conv_wt_buf_V_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce6_assign_proc : process(grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce6, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv_wt_buf_V_ce6 <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_conv_wt_buf_V_ce6;
        else 
            conv_wt_buf_V_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_we0_assign_proc : process(grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv_wt_buf_V_we0 <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_conv_wt_buf_V_we0;
        else 
            conv_wt_buf_V_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;

    empty_52_fu_1622_p1 <= p_mid2299_v_v_fu_1605_p3(4 - 1 downto 0);
    empty_53_fu_1115_p1 <= add_ln53_fu_1109_p2(5 - 1 downto 0);
    empty_fu_612_p1 <= tj_fu_284(5 - 1 downto 0);

    fm_ARVALID_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state4, icmp_ln68_fu_1635_p2, icmp_ln68_reg_2526, grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARVALID)
    begin
        if ((((icmp_ln68_reg_2526 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln68_fu_1635_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            fm_ARVALID <= grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_ARVALID;
        else 
            fm_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    fm_AWVALID_assign_proc : process(ap_CS_fsm_state24, icmp_ln31_fu_1725_p2, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWVALID, ap_CS_fsm_state30)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or ((icmp_ln31_fu_1725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            fm_AWVALID <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_AWVALID;
        else 
            fm_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    fm_BREADY_assign_proc : process(ap_CS_fsm_state24, icmp_ln31_fu_1725_p2, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_BREADY, ap_CS_fsm_state30)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or ((icmp_ln31_fu_1725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            fm_BREADY <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_BREADY;
        else 
            fm_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    fm_RREADY_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state4, icmp_ln68_fu_1635_p2, icmp_ln68_reg_2526, grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_RREADY)
    begin
        if ((((icmp_ln68_reg_2526 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((icmp_ln68_fu_1635_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            fm_RREADY <= grp_load_input_tile_block_from_DRAM_0_0_fu_496_m_axi_fm_RREADY;
        else 
            fm_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    fm_WVALID_assign_proc : process(ap_CS_fsm_state24, icmp_ln31_fu_1725_p2, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WVALID, ap_CS_fsm_state30)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or ((icmp_ln31_fu_1725_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            fm_WVALID <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_m_axi_fm_WVALID;
        else 
            fm_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2079_p0 <= grp_fu_2079_p00(3 - 1 downto 0);
    grp_fu_2079_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_2_reg_2598),7));
    grp_fu_2079_p1 <= ap_const_lv7_17(5 - 1 downto 0);
    grp_fu_2079_p2 <= grp_fu_2079_p20(5 - 1 downto 0);
    grp_fu_2079_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_reg_2586),7));
    grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_start <= grp_load_input_tile_block_from_DRAM_0_0_fu_496_ap_start_reg;
    grp_tiled_conv_Pipeline_BIAS_fu_514_ap_start <= grp_tiled_conv_Pipeline_BIAS_fu_514_ap_start_reg;
    grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_start <= grp_tiled_conv_Pipeline_CHANNEL_KERN_I_fu_559_ap_start_reg;
    grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_start <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_fu_529_ap_start_reg;
    grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_start <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_ap_start_reg;
    icmp_ln31_fu_1725_p2 <= "1" when (indvar_flatten256_reg_396 = ap_const_lv7_5C) else "0";
    icmp_ln36_fu_1743_p2 <= "1" when (oh_reg_428 = ap_const_lv5_17) else "0";
    icmp_ln40_fu_1895_p2 <= "1" when (ow_reg_473 = ap_const_lv5_14) else "0";
    icmp_ln50_fu_920_p2 <= "1" when (indvar_flatten478_fu_296 = ap_const_lv14_2000) else "0";
    icmp_ln53_fu_935_p2 <= "1" when (indvar_flatten279_fu_288 = ap_const_lv11_200) else "0";
    icmp_ln66_fu_947_p2 <= "1" when (kernel_group_fu_264 = ap_const_lv5_10) else "0";
    icmp_ln66_mid2477_fu_953_p2 <= (not_exitcond_flatten281_fu_941_p2 and icmp_ln66_fu_947_p2);
    icmp_ln68_fu_1635_p2 <= "1" when (select_ln53_reg_2373 = ap_const_lv5_0) else "0";
    mul_ln68_fu_2073_p0 <= mul_ln68_fu_2073_p00(5 - 1 downto 0);
    mul_ln68_fu_2073_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln53_reg_2373),16));
    mul_ln68_fu_2073_p1 <= ap_const_lv16_498(11 - 1 downto 0);
    not_exitcond_flatten281_fu_941_p2 <= (icmp_ln53_fu_935_p2 xor ap_const_lv1_1);
    or_ln1317_fu_1916_p2 <= (w_reg_485 or ap_const_lv6_1);
    or_ln133_1_fu_668_p2 <= (ap_const_lv10_2 or add_ln133_fu_640_p2);
    or_ln133_2_fu_682_p2 <= (ap_const_lv10_3 or add_ln133_fu_640_p2);
    or_ln133_3_fu_1171_p2 <= (ap_const_lv10_1 or add_ln133_29_fu_1150_p2);
    or_ln133_4_fu_1192_p2 <= (ap_const_lv10_2 or add_ln133_29_fu_1150_p2);
    or_ln133_5_fu_1213_p2 <= (ap_const_lv10_3 or add_ln133_29_fu_1150_p2);
    or_ln133_fu_654_p2 <= (ap_const_lv10_1 or add_ln133_fu_640_p2);
    or_ln53_fu_959_p2 <= (icmp_ln66_mid2477_fu_953_p2 or icmp_ln53_fu_935_p2);
    or_ln73_fu_2067_p2 <= (shl_ln73_2_fu_2061_p2 or and_ln73_fu_2051_p2);
    p_cast15_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_616_p3),10));
    p_cast15_mid1_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid_fu_1119_p3),10));
    p_cast554_fu_1871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2079_p3),64));
    p_cast_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_628_p3),10));
    p_cast_mid1_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid2_fu_1131_p3),10));
    p_mid2299_fu_1616_p0 <= p_mid2299_fu_1616_p00(5 - 1 downto 0);
    p_mid2299_fu_1616_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid2299_v_v_fu_1605_p3),9));
    p_mid2299_fu_1616_p1 <= ap_const_lv9_17(6 - 1 downto 0);
    p_mid2299_v_v_fu_1605_p3 <= 
        add_ln50_fu_1599_p2 when (icmp_ln53_reg_2319(0) = '1') else 
        ti_fu_292;
    p_mid2_fu_1131_p3 <= (empty_53_fu_1115_p1 & ap_const_lv4_0);
    p_mid_fu_1119_p3 <= (empty_53_fu_1115_p1 & ap_const_lv2_0);
    select_ln31_1_fu_1757_p3 <= 
        ap_const_lv6_0 when (icmp_ln36_fu_1743_p2(0) = '1') else 
        h_reg_439;
    select_ln31_2_fu_1765_p3 <= 
        add_ln31_fu_1737_p2 when (icmp_ln36_fu_1743_p2(0) = '1') else 
        kernel_reg_407;
    select_ln31_3_fu_1787_p3 <= 
        tmp_1_mid1_fu_1777_p6 when (icmp_ln36_fu_1743_p2(0) = '1') else 
        tmp_1_fu_1715_p6;
    select_ln31_fu_1749_p3 <= 
        ap_const_lv5_0 when (icmp_ln36_fu_1743_p2(0) = '1') else 
        oh_reg_428;
    select_ln53_10_fu_1332_p3 <= 
        shl_ln133_10_mid1_fu_1324_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_17_mid2387_fu_1037_p3;
    select_ln53_11_fu_1353_p3 <= 
        shl_ln133_11_mid1_fu_1345_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_19_mid2395_fu_1043_p3;
    select_ln53_12_fu_1374_p3 <= 
        shl_ln133_12_mid1_fu_1366_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_21_mid2403_fu_1049_p3;
    select_ln53_13_fu_1395_p3 <= 
        shl_ln133_13_mid1_fu_1387_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_23_mid2411_fu_1055_p3;
    select_ln53_14_fu_1416_p3 <= 
        shl_ln133_14_mid1_fu_1408_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_25_mid2419_fu_1061_p3;
    select_ln53_15_fu_1437_p3 <= 
        shl_ln133_15_mid1_fu_1429_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_27_mid2427_fu_1067_p3;
    select_ln53_16_fu_1458_p3 <= 
        shl_ln133_16_mid1_fu_1450_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_29_mid2435_fu_1073_p3;
    select_ln53_17_fu_1479_p3 <= 
        shl_ln133_17_mid1_fu_1471_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_31_mid2443_fu_1079_p3;
    select_ln53_18_fu_1500_p3 <= 
        shl_ln133_18_mid1_fu_1492_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_33_mid2451_fu_1085_p3;
    select_ln53_19_fu_1521_p3 <= 
        shl_ln133_19_mid1_fu_1513_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_35_mid2459_fu_1091_p3;
    select_ln53_1_fu_1143_p3 <= 
        empty_53_fu_1115_p1 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        tj_cast14_mid2315_fu_983_p3;
    select_ln53_20_fu_1542_p3 <= 
        shl_ln133_20_mid1_fu_1534_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_37_mid2467_fu_1097_p3;
    select_ln53_21_fu_1563_p3 <= 
        shl_ln133_21_mid1_fu_1555_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln66_mid2475_fu_1103_p3;
    select_ln53_22_fu_1570_p3 <= 
        add_ln53_fu_1109_p2 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        tj_mid2292_fu_977_p3;
    select_ln53_23_fu_1820_p3 <= 
        ap_const_lv11_1 when (icmp_ln53_reg_2319(0) = '1') else 
        add_ln53_1_fu_1814_p2;
    select_ln53_2_fu_1164_p3 <= 
        shl_ln133_2_mid1_fu_1156_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_1_mid2323_fu_989_p3;
    select_ln53_3_fu_1185_p3 <= 
        shl_ln133_3_mid1_fu_1177_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_3_mid2331_fu_995_p3;
    select_ln53_4_fu_1206_p3 <= 
        shl_ln133_4_mid1_fu_1198_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_5_mid2339_fu_1001_p3;
    select_ln53_5_fu_1227_p3 <= 
        shl_ln133_5_mid1_fu_1219_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_7_mid2347_fu_1007_p3;
    select_ln53_6_fu_1248_p3 <= 
        shl_ln133_6_mid1_fu_1240_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_9_mid2355_fu_1013_p3;
    select_ln53_7_fu_1269_p3 <= 
        shl_ln133_7_mid1_fu_1261_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_11_mid2363_fu_1019_p3;
    select_ln53_8_fu_1290_p3 <= 
        shl_ln133_8_mid1_fu_1282_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_13_mid2371_fu_1025_p3;
    select_ln53_9_fu_1311_p3 <= 
        shl_ln133_9_mid1_fu_1303_p3 when (icmp_ln66_mid2477_reg_2347(0) = '1') else 
        zext_ln133_15_mid2379_fu_1031_p3;
    select_ln53_fu_965_p3 <= 
        ap_const_lv5_0 when (or_ln53_fu_959_p2(0) = '1') else 
        kernel_group_fu_264;
        sext_ln76_fu_1649_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_1640_p4),64));

        sext_ln94_fu_1669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_reg_2540),64));

    shl_ln1317_1_fu_1922_p3 <= (or_ln1317_fu_1916_p2 & ap_const_lv4_0);
    shl_ln1317_2_fu_1937_p3 <= (add_ln1317_fu_1931_p2 & ap_const_lv4_0);
    shl_ln1317_3_fu_1952_p3 <= (add_ln1317_1_fu_1946_p2 & ap_const_lv4_0);
    shl_ln1317_4_fu_1967_p3 <= (add_ln1317_2_fu_1961_p2 & ap_const_lv4_0);
    shl_ln1317_5_fu_1982_p3 <= (add_ln1317_3_fu_1976_p2 & ap_const_lv4_0);
    shl_ln1317_6_fu_1997_p3 <= (add_ln1317_4_fu_1991_p2 & ap_const_lv4_0);
    shl_ln133_10_fu_786_p3 <= (add_ln133_16_fu_780_p2 & ap_const_lv1_0);
    shl_ln133_10_mid1_fu_1324_p3 <= (add_ln133_34_fu_1318_p2 & ap_const_lv1_0);
    shl_ln133_11_fu_800_p3 <= (add_ln133_18_fu_794_p2 & ap_const_lv1_0);
    shl_ln133_11_mid1_fu_1345_p3 <= (add_ln133_35_fu_1339_p2 & ap_const_lv1_0);
    shl_ln133_12_fu_814_p3 <= (add_ln133_20_fu_808_p2 & ap_const_lv1_0);
    shl_ln133_12_mid1_fu_1366_p3 <= (add_ln133_36_fu_1360_p2 & ap_const_lv1_0);
    shl_ln133_13_fu_828_p3 <= (add_ln133_22_fu_822_p2 & ap_const_lv1_0);
    shl_ln133_13_mid1_fu_1387_p3 <= (add_ln133_37_fu_1381_p2 & ap_const_lv1_0);
    shl_ln133_14_fu_842_p3 <= (add_ln133_23_fu_836_p2 & ap_const_lv1_0);
    shl_ln133_14_mid1_fu_1408_p3 <= (add_ln133_38_fu_1402_p2 & ap_const_lv1_0);
    shl_ln133_15_fu_856_p3 <= (add_ln133_24_fu_850_p2 & ap_const_lv1_0);
    shl_ln133_15_mid1_fu_1429_p3 <= (add_ln133_39_fu_1423_p2 & ap_const_lv1_0);
    shl_ln133_16_fu_870_p3 <= (add_ln133_25_fu_864_p2 & ap_const_lv1_0);
    shl_ln133_16_mid1_fu_1450_p3 <= (add_ln133_40_fu_1444_p2 & ap_const_lv1_0);
    shl_ln133_17_fu_884_p3 <= (add_ln133_26_fu_878_p2 & ap_const_lv1_0);
    shl_ln133_17_mid1_fu_1471_p3 <= (add_ln133_41_fu_1465_p2 & ap_const_lv1_0);
    shl_ln133_18_fu_898_p3 <= (add_ln133_27_fu_892_p2 & ap_const_lv1_0);
    shl_ln133_18_mid1_fu_1492_p3 <= (add_ln133_42_fu_1486_p2 & ap_const_lv1_0);
    shl_ln133_19_fu_912_p3 <= (add_ln133_28_fu_906_p2 & ap_const_lv1_0);
    shl_ln133_19_mid1_fu_1513_p3 <= (add_ln133_43_fu_1507_p2 & ap_const_lv1_0);
    shl_ln133_1_fu_772_p3 <= (add_ln133_14_fu_766_p2 & ap_const_lv1_0);
    shl_ln133_20_mid1_fu_1534_p3 <= (add_ln133_44_fu_1528_p2 & ap_const_lv1_0);
    shl_ln133_21_mid1_fu_1555_p3 <= (add_ln133_45_fu_1549_p2 & ap_const_lv1_0);
    shl_ln133_2_fu_646_p3 <= (add_ln133_fu_640_p2 & ap_const_lv1_0);
    shl_ln133_2_mid1_fu_1156_p3 <= (add_ln133_29_fu_1150_p2 & ap_const_lv1_0);
    shl_ln133_3_fu_660_p3 <= (or_ln133_fu_654_p2 & ap_const_lv1_0);
    shl_ln133_3_mid1_fu_1177_p3 <= (or_ln133_3_fu_1171_p2 & ap_const_lv1_0);
    shl_ln133_4_fu_674_p3 <= (or_ln133_1_fu_668_p2 & ap_const_lv1_0);
    shl_ln133_4_mid1_fu_1198_p3 <= (or_ln133_4_fu_1192_p2 & ap_const_lv1_0);
    shl_ln133_5_fu_688_p3 <= (or_ln133_2_fu_682_p2 & ap_const_lv1_0);
    shl_ln133_5_mid1_fu_1219_p3 <= (or_ln133_5_fu_1213_p2 & ap_const_lv1_0);
    shl_ln133_6_fu_702_p3 <= (add_ln133_1_fu_696_p2 & ap_const_lv1_0);
    shl_ln133_6_mid1_fu_1240_p3 <= (add_ln133_30_fu_1234_p2 & ap_const_lv1_0);
    shl_ln133_7_fu_716_p3 <= (add_ln133_2_fu_710_p2 & ap_const_lv1_0);
    shl_ln133_7_mid1_fu_1261_p3 <= (add_ln133_31_fu_1255_p2 & ap_const_lv1_0);
    shl_ln133_8_fu_730_p3 <= (add_ln133_8_fu_724_p2 & ap_const_lv1_0);
    shl_ln133_8_mid1_fu_1282_p3 <= (add_ln133_32_fu_1276_p2 & ap_const_lv1_0);
    shl_ln133_9_fu_744_p3 <= (add_ln133_10_fu_738_p2 & ap_const_lv1_0);
    shl_ln133_9_mid1_fu_1303_p3 <= (add_ln133_33_fu_1297_p2 & ap_const_lv1_0);
    shl_ln133_s_fu_758_p3 <= (add_ln133_12_fu_752_p2 & ap_const_lv1_0);
    shl_ln2_fu_1907_p3 <= (w_reg_485 & ap_const_lv4_0);
    shl_ln3_fu_2027_p3 <= (ow_reg_473 & ap_const_lv4_0);
    shl_ln73_1_fu_1795_p3 <= (trunc_ln68_reg_2380 & ap_const_lv2_0);
    shl_ln73_2_fu_2061_p2 <= std_logic_vector(shift_left(unsigned(zext_ln73_1_fu_2057_p1),to_integer(unsigned('0' & zext_ln73_fu_2035_p1(31-1 downto 0)))));
    shl_ln73_fu_2039_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv320_lc_2),to_integer(unsigned('0' & zext_ln73_fu_2035_p1(31-1 downto 0)))));
    shl_ln_fu_1580_p3 <= (trunc_ln68_reg_2380 & ap_const_lv3_0);
    sub_ln1319_fu_1889_p2 <= std_logic_vector(unsigned(zext_ln1319_16_fu_1885_p1) - unsigned(zext_ln1319_fu_1875_p1));
    tj_cast14_mid2315_fu_983_p3 <= 
        ap_const_lv5_0 when (icmp_ln53_reg_2319(0) = '1') else 
        empty_reg_2206;
    tj_mid2292_fu_977_p3 <= 
        ap_const_lv6_0 when (icmp_ln53_reg_2319(0) = '1') else 
        tj_fu_284;
    tmp_1_fu_1715_p5 <= kernel_reg_407(2 - 1 downto 0);
    tmp_1_mid1_fu_1777_p5 <= add_ln31_fu_1737_p2(2 - 1 downto 0);
    tmp_6_fu_616_p3 <= (empty_fu_612_p1 & ap_const_lv2_0);
    tmp_8_fu_628_p3 <= (empty_fu_612_p1 & ap_const_lv4_0);
    tmp_s_fu_1878_p3 <= (select_ln31_2_reg_2598 & ap_const_lv2_0);
    trunc_ln68_fu_973_p1 <= select_ln53_fu_965_p3(4 - 1 downto 0);
    trunc_ln_fu_1640_p4 <= add_ln68_1_reg_2521(63 downto 1);

    wt_ARADDR_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state14, grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARADDR, grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARADDR, wt_ARREADY, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state21, ap_CS_fsm_state22, sext_ln76_fu_1649_p1, sext_ln94_fu_1669_p1, ap_block_state5_on_subcall_done)
    begin
        if (((wt_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            wt_ARADDR <= sext_ln94_fu_1669_p1;
        elsif ((not(((wt_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            wt_ARADDR <= sext_ln76_fu_1649_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            wt_ARADDR <= grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            wt_ARADDR <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARADDR;
        else 
            wt_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wt_ARLEN_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state14, grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARLEN, grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARLEN, wt_ARREADY, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_block_state5_on_subcall_done)
    begin
        if (((wt_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            wt_ARLEN <= ap_const_lv32_4;
        elsif ((not(((wt_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            wt_ARLEN <= ap_const_lv32_24C;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            wt_ARLEN <= grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            wt_ARLEN <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARLEN;
        else 
            wt_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wt_ARVALID_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state14, grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARVALID, grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARVALID, wt_ARREADY, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_block_state5_on_subcall_done)
    begin
        if ((((wt_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((wt_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state5_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            wt_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            wt_ARVALID <= grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            wt_ARVALID <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_ARVALID;
        else 
            wt_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    wt_RREADY_assign_proc : process(grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_RREADY, grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_RREADY, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state21, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            wt_RREADY <= grp_tiled_conv_Pipeline_BIAS_fu_514_m_axi_wt_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            wt_RREADY <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_506_m_axi_wt_RREADY;
        else 
            wt_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    wt_blk_n_AR_assign_proc : process(m_axi_wt_ARREADY, ap_CS_fsm_state5, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            wt_blk_n_AR <= m_axi_wt_ARREADY;
        else 
            wt_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

    xor_ln73_fu_2045_p2 <= (shl_ln73_fu_2039_p2 xor ap_const_lv320_lc_5);
    zext_ln1319_16_fu_1885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1878_p3),6));
    zext_ln1319_fu_1875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_2_reg_2598),6));
    zext_ln133_11_mid2363_fu_1019_p3 <= 
        ap_const_lv11_A when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_7_reg_2236;
    zext_ln133_13_mid2371_fu_1025_p3 <= 
        ap_const_lv11_C when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_8_reg_2241;
    zext_ln133_15_mid2379_fu_1031_p3 <= 
        ap_const_lv11_E when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_9_reg_2246;
    zext_ln133_17_mid2387_fu_1037_p3 <= 
        ap_const_lv11_10 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_s_reg_2251;
    zext_ln133_19_mid2395_fu_1043_p3 <= 
        ap_const_lv11_12 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_1_reg_2256;
    zext_ln133_1_mid2323_fu_989_p3 <= 
        ap_const_lv11_0 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_2_reg_2211;
    zext_ln133_21_mid2403_fu_1049_p3 <= 
        ap_const_lv11_14 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_10_reg_2261;
    zext_ln133_23_mid2411_fu_1055_p3 <= 
        ap_const_lv11_16 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_11_reg_2266;
    zext_ln133_25_mid2419_fu_1061_p3 <= 
        ap_const_lv11_18 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_12_reg_2271;
    zext_ln133_27_mid2427_fu_1067_p3 <= 
        ap_const_lv11_1A when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_13_reg_2276;
    zext_ln133_29_mid2435_fu_1073_p3 <= 
        ap_const_lv11_1C when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_14_reg_2281;
    zext_ln133_31_mid2443_fu_1079_p3 <= 
        ap_const_lv11_1E when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_15_reg_2286;
    zext_ln133_33_mid2451_fu_1085_p3 <= 
        ap_const_lv11_20 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_16_reg_2291;
    zext_ln133_35_mid2459_fu_1091_p3 <= 
        ap_const_lv11_22 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_17_reg_2296;
    zext_ln133_37_mid2467_fu_1097_p3 <= 
        ap_const_lv11_24 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_18_reg_2301;
    zext_ln133_3_mid2331_fu_995_p3 <= 
        ap_const_lv11_2 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_3_reg_2216;
    zext_ln133_5_mid2339_fu_1001_p3 <= 
        ap_const_lv11_4 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_4_reg_2221;
    zext_ln133_7_mid2347_fu_1007_p3 <= 
        ap_const_lv11_6 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_5_reg_2226;
    zext_ln133_9_mid2355_fu_1013_p3 <= 
        ap_const_lv11_8 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_6_reg_2231;
    zext_ln66_mid2475_fu_1103_p3 <= 
        ap_const_lv11_26 when (icmp_ln53_reg_2319(0) = '1') else 
        shl_ln133_19_reg_2306;
    zext_ln68_1_fu_1627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln68_reg_2501),64));
    zext_ln68_fu_1587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1580_p3),64));
    zext_ln73_1_fu_2057_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln859_fu_2022_p2),320));
    zext_ln73_fu_2035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln3_fu_2027_p3),320));
end behav;
