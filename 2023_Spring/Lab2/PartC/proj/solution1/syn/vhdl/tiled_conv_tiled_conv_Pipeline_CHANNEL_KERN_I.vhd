-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tiled_conv_tiled_conv_Pipeline_CHANNEL_KERN_I is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_lcssa_lcssa_lcssa17 : IN STD_LOGIC_VECTOR (111 downto 0);
    sub_ln1319 : IN STD_LOGIC_VECTOR (5 downto 0);
    conv_wt_buf_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv_wt_buf_V_ce0 : OUT STD_LOGIC;
    conv_wt_buf_V_q0 : IN STD_LOGIC_VECTOR (111 downto 0);
    conv_wt_buf_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv_wt_buf_V_ce1 : OUT STD_LOGIC;
    conv_wt_buf_V_q1 : IN STD_LOGIC_VECTOR (111 downto 0);
    conv_wt_buf_V_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv_wt_buf_V_ce2 : OUT STD_LOGIC;
    conv_wt_buf_V_q2 : IN STD_LOGIC_VECTOR (111 downto 0);
    conv_wt_buf_V_address3 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv_wt_buf_V_ce3 : OUT STD_LOGIC;
    conv_wt_buf_V_q3 : IN STD_LOGIC_VECTOR (111 downto 0);
    conv_wt_buf_V_address4 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv_wt_buf_V_ce4 : OUT STD_LOGIC;
    conv_wt_buf_V_q4 : IN STD_LOGIC_VECTOR (111 downto 0);
    conv_wt_buf_V_address5 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv_wt_buf_V_ce5 : OUT STD_LOGIC;
    conv_wt_buf_V_q5 : IN STD_LOGIC_VECTOR (111 downto 0);
    conv_wt_buf_V_address6 : OUT STD_LOGIC_VECTOR (6 downto 0);
    conv_wt_buf_V_ce6 : OUT STD_LOGIC;
    conv_wt_buf_V_q6 : IN STD_LOGIC_VECTOR (111 downto 0);
    select_ln31_1 : IN STD_LOGIC_VECTOR (5 downto 0);
    conv_in_buf_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_in_buf_V_ce0 : OUT STD_LOGIC;
    conv_in_buf_V_q0 : IN STD_LOGIC_VECTOR (735 downto 0);
    zext_ln1317 : IN STD_LOGIC_VECTOR (9 downto 0);
    zext_ln1317_1 : IN STD_LOGIC_VECTOR (9 downto 0);
    zext_ln1317_2 : IN STD_LOGIC_VECTOR (9 downto 0);
    zext_ln1317_3 : IN STD_LOGIC_VECTOR (9 downto 0);
    zext_ln1317_4 : IN STD_LOGIC_VECTOR (9 downto 0);
    zext_ln1317_5 : IN STD_LOGIC_VECTOR (9 downto 0);
    zext_ln46 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_lcssa14_out : OUT STD_LOGIC_VECTOR (111 downto 0);
    p_lcssa14_out_ap_vld : OUT STD_LOGIC;
    val_V_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    val_V_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of tiled_conv_tiled_conv_Pipeline_CHANNEL_KERN_I is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv8_34 : STD_LOGIC_VECTOR (7 downto 0) := "00110100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln46_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln46_reg_1025 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_1025_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_1025_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_1025_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_1025_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln46_fu_382_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln46_reg_1029 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln46_reg_1029_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln46_reg_1029_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln46_1_fu_412_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln46_1_reg_1035 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln46_2_fu_420_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln46_2_reg_1040 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_V_load_reg_1091 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_load_1_reg_1096 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_load_2_reg_1101 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_load_3_reg_1106 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_load_4_reg_1111 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_load_5_reg_1116 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_wt_buf_V_load_6_reg_1121 : STD_LOGIC_VECTOR (111 downto 0);
    signal conv_in_buf_V_load_reg_1126 : STD_LOGIC_VECTOR (735 downto 0);
    signal trunc_ln1317_fu_547_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_reg_1137 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_fu_560_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_reg_1142 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_1_fu_572_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_1_reg_1147 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_1_fu_585_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_1_reg_1152 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_2_fu_597_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_2_reg_1157 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_2_fu_610_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_2_reg_1162 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_3_fu_622_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_3_reg_1167 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_3_fu_635_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_3_reg_1172 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_4_fu_647_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_4_reg_1177 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_4_fu_660_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_4_reg_1182 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_5_fu_672_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_5_reg_1187 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_5_fu_685_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_5_reg_1192 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_6_fu_697_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1317_6_reg_1197 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_6_fu_710_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1319_6_reg_1202 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln864_fu_907_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_reg_1207 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_1_fu_913_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_1_reg_1212 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_2_fu_919_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_2_reg_1217 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_3_fu_925_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_3_reg_1222 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_4_fu_931_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_4_reg_1227 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_5_fu_937_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_5_reg_1232 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_6_fu_943_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_6_reg_1237 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln859_1_fu_843_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_1_reg_1242 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_4_fu_861_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_4_reg_1247 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1319_2_fu_452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln1319_3_fu_461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_4_fu_471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_5_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_6_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_7_fu_501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_8_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast1_fu_528_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal val_V_fu_106 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_6_fu_879_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal i_fu_110 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln52_fu_428_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (2 downto 0);
    signal p_lcssa14_fu_114 : STD_LOGIC_VECTOR (111 downto 0);
    signal tmp_6_6_fu_819_p8 : STD_LOGIC_VECTOR (111 downto 0);
    signal chan_fu_118 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_chan_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten249_fu_122 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln46_7_fu_361_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_indvar_flatten249_load : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal sub_ln1319_cast_fu_298_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1319_fu_333_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_fu_337_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1319_fu_343_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln52_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln46_fu_370_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln1319_1_fu_390_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_1_fu_394_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1319_1_fu_400_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln1319_2_fu_406_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln1319_1_fu_349_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_1_fu_456_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_2_fu_466_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_3_fu_476_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_4_fu_486_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_5_fu_496_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_6_fu_506_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_1_cast_fu_516_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_40_fu_519_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_898_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1317_6_fu_539_p1 : STD_LOGIC_VECTOR (735 downto 0);
    signal lshr_ln1317_fu_542_p2 : STD_LOGIC_VECTOR (735 downto 0);
    signal tmp_s_fu_532_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1319_9_fu_551_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln1319_fu_555_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln1317_7_fu_564_p1 : STD_LOGIC_VECTOR (735 downto 0);
    signal lshr_ln1317_1_fu_567_p2 : STD_LOGIC_VECTOR (735 downto 0);
    signal zext_ln1319_10_fu_576_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln1319_1_fu_580_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln1317_8_fu_589_p1 : STD_LOGIC_VECTOR (735 downto 0);
    signal lshr_ln1317_2_fu_592_p2 : STD_LOGIC_VECTOR (735 downto 0);
    signal zext_ln1319_11_fu_601_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln1319_2_fu_605_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln1317_9_fu_614_p1 : STD_LOGIC_VECTOR (735 downto 0);
    signal lshr_ln1317_3_fu_617_p2 : STD_LOGIC_VECTOR (735 downto 0);
    signal zext_ln1319_12_fu_626_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln1319_3_fu_630_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln1317_10_fu_639_p1 : STD_LOGIC_VECTOR (735 downto 0);
    signal lshr_ln1317_4_fu_642_p2 : STD_LOGIC_VECTOR (735 downto 0);
    signal zext_ln1319_13_fu_651_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln1319_4_fu_655_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln1317_11_fu_664_p1 : STD_LOGIC_VECTOR (735 downto 0);
    signal lshr_ln1317_5_fu_667_p2 : STD_LOGIC_VECTOR (735 downto 0);
    signal zext_ln1319_14_fu_676_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln1319_5_fu_680_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal zext_ln1317_12_fu_689_p1 : STD_LOGIC_VECTOR (735 downto 0);
    signal lshr_ln1317_6_fu_692_p2 : STD_LOGIC_VECTOR (735 downto 0);
    signal zext_ln1319_15_fu_701_p1 : STD_LOGIC_VECTOR (111 downto 0);
    signal lshr_ln1319_6_fu_705_p2 : STD_LOGIC_VECTOR (111 downto 0);
    signal trunc_ln864_6_fu_810_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_5_fu_801_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_4_fu_792_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_3_fu_783_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_2_fu_774_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_1_fu_765_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln4_fu_756_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_fu_837_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_2_fu_849_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_3_fu_855_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_5_fu_875_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_898_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_898_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_898_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_898_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_898_p20 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component tiled_conv_mac_muladd_2ns_6ns_6ns_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component tiled_conv_mul_mul_16s_16s_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component tiled_conv_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mac_muladd_2ns_6ns_6ns_8_1_1_U33 : component tiled_conv_mac_muladd_2ns_6ns_6ns_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_898_p0,
        din1 => grp_fu_898_p1,
        din2 => grp_fu_898_p2,
        dout => grp_fu_898_p3);

    mul_mul_16s_16s_29_1_1_U34 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => trunc_ln1319_reg_1142,
        din1 => trunc_ln1317_reg_1137,
        dout => mul_ln864_fu_907_p2);

    mul_mul_16s_16s_29_1_1_U35 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => trunc_ln1319_1_reg_1152,
        din1 => trunc_ln1317_1_reg_1147,
        dout => mul_ln864_1_fu_913_p2);

    mul_mul_16s_16s_29_1_1_U36 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => trunc_ln1319_2_reg_1162,
        din1 => trunc_ln1317_2_reg_1157,
        dout => mul_ln864_2_fu_919_p2);

    mul_mul_16s_16s_29_1_1_U37 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => trunc_ln1319_3_reg_1172,
        din1 => trunc_ln1317_3_reg_1167,
        dout => mul_ln864_3_fu_925_p2);

    mul_mul_16s_16s_29_1_1_U38 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => trunc_ln1319_4_reg_1182,
        din1 => trunc_ln1317_4_reg_1177,
        dout => mul_ln864_4_fu_931_p2);

    mul_mul_16s_16s_29_1_1_U39 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => trunc_ln1319_5_reg_1192,
        din1 => trunc_ln1317_5_reg_1187,
        dout => mul_ln864_5_fu_937_p2);

    mul_mul_16s_16s_29_1_1_U40 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => trunc_ln1319_6_reg_1202,
        din1 => trunc_ln1317_6_reg_1197,
        dout => mul_ln864_6_fu_943_p2);

    flow_control_loop_pipe_sequential_init_U : component tiled_conv_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    chan_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln46_fu_355_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    chan_fu_118 <= select_ln46_1_fu_412_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    chan_fu_118 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    i_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln46_fu_355_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_110 <= add_ln52_fu_428_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_110 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten249_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln46_fu_355_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten249_fu_122 <= add_ln46_7_fu_361_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten249_fu_122 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    p_lcssa14_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_lcssa14_fu_114 <= p_lcssa_lcssa_lcssa17;
                elsif ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then 
                    p_lcssa14_fu_114 <= tmp_6_6_fu_819_p8;
                end if;
            end if; 
        end if;
    end process;

    val_V_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    val_V_fu_106 <= ap_const_lv16_0;
                elsif ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then 
                    val_V_fu_106 <= add_ln859_6_fu_879_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln859_1_reg_1242 <= add_ln859_1_fu_843_p2;
                add_ln859_4_reg_1247 <= add_ln859_4_fu_861_p2;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                conv_in_buf_V_load_reg_1126 <= conv_in_buf_V_q0;
                icmp_ln46_reg_1025_pp0_iter2_reg <= icmp_ln46_reg_1025_pp0_iter1_reg;
                icmp_ln46_reg_1025_pp0_iter3_reg <= icmp_ln46_reg_1025_pp0_iter2_reg;
                icmp_ln46_reg_1025_pp0_iter4_reg <= icmp_ln46_reg_1025_pp0_iter3_reg;
                mul_ln864_1_reg_1212 <= mul_ln864_1_fu_913_p2;
                mul_ln864_2_reg_1217 <= mul_ln864_2_fu_919_p2;
                mul_ln864_3_reg_1222 <= mul_ln864_3_fu_925_p2;
                mul_ln864_4_reg_1227 <= mul_ln864_4_fu_931_p2;
                mul_ln864_5_reg_1232 <= mul_ln864_5_fu_937_p2;
                mul_ln864_6_reg_1237 <= mul_ln864_6_fu_943_p2;
                mul_ln864_reg_1207 <= mul_ln864_fu_907_p2;
                select_ln46_reg_1029_pp0_iter2_reg <= select_ln46_reg_1029_pp0_iter1_reg;
                trunc_ln1317_1_reg_1147 <= trunc_ln1317_1_fu_572_p1;
                trunc_ln1317_2_reg_1157 <= trunc_ln1317_2_fu_597_p1;
                trunc_ln1317_3_reg_1167 <= trunc_ln1317_3_fu_622_p1;
                trunc_ln1317_4_reg_1177 <= trunc_ln1317_4_fu_647_p1;
                trunc_ln1317_5_reg_1187 <= trunc_ln1317_5_fu_672_p1;
                trunc_ln1317_6_reg_1197 <= trunc_ln1317_6_fu_697_p1;
                trunc_ln1317_reg_1137 <= trunc_ln1317_fu_547_p1;
                trunc_ln1319_1_reg_1152 <= trunc_ln1319_1_fu_585_p1;
                trunc_ln1319_2_reg_1162 <= trunc_ln1319_2_fu_610_p1;
                trunc_ln1319_3_reg_1172 <= trunc_ln1319_3_fu_635_p1;
                trunc_ln1319_4_reg_1182 <= trunc_ln1319_4_fu_660_p1;
                trunc_ln1319_5_reg_1192 <= trunc_ln1319_5_fu_685_p1;
                trunc_ln1319_6_reg_1202 <= trunc_ln1319_6_fu_710_p1;
                trunc_ln1319_reg_1142 <= trunc_ln1319_fu_560_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln46_reg_1025 <= icmp_ln46_fu_355_p2;
                icmp_ln46_reg_1025_pp0_iter1_reg <= icmp_ln46_reg_1025;
                select_ln46_reg_1029_pp0_iter1_reg <= select_ln46_reg_1029;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                conv_wt_buf_V_load_1_reg_1096 <= conv_wt_buf_V_q5;
                conv_wt_buf_V_load_2_reg_1101 <= conv_wt_buf_V_q4;
                conv_wt_buf_V_load_3_reg_1106 <= conv_wt_buf_V_q3;
                conv_wt_buf_V_load_4_reg_1111 <= conv_wt_buf_V_q2;
                conv_wt_buf_V_load_5_reg_1116 <= conv_wt_buf_V_q1;
                conv_wt_buf_V_load_6_reg_1121 <= conv_wt_buf_V_q0;
                conv_wt_buf_V_load_reg_1091 <= conv_wt_buf_V_q6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_fu_355_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln46_1_reg_1035 <= select_ln46_1_fu_412_p3;
                select_ln46_2_reg_1040 <= select_ln46_2_fu_420_p3;
                select_ln46_reg_1029 <= select_ln46_fu_382_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1319_1_fu_394_p2 <= std_logic_vector(signed(sub_ln1319_cast_fu_298_p1) + signed(zext_ln1319_1_fu_390_p1));
    add_ln1319_fu_337_p2 <= std_logic_vector(signed(sub_ln1319_cast_fu_298_p1) + signed(zext_ln1319_fu_333_p1));
    add_ln46_1_fu_456_p2 <= std_logic_vector(unsigned(select_ln46_2_reg_1040) + unsigned(ap_const_lv7_1));
    add_ln46_2_fu_466_p2 <= std_logic_vector(unsigned(select_ln46_2_reg_1040) + unsigned(ap_const_lv7_2));
    add_ln46_3_fu_476_p2 <= std_logic_vector(unsigned(select_ln46_2_reg_1040) + unsigned(ap_const_lv7_3));
    add_ln46_4_fu_486_p2 <= std_logic_vector(unsigned(select_ln46_2_reg_1040) + unsigned(ap_const_lv7_4));
    add_ln46_5_fu_496_p2 <= std_logic_vector(unsigned(select_ln46_2_reg_1040) + unsigned(ap_const_lv7_5));
    add_ln46_6_fu_506_p2 <= std_logic_vector(unsigned(select_ln46_2_reg_1040) + unsigned(ap_const_lv7_6));
    add_ln46_7_fu_361_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten249_load) + unsigned(ap_const_lv5_1));
    add_ln46_fu_370_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_chan_1) + unsigned(ap_const_lv2_1));
    add_ln52_fu_428_p2 <= std_logic_vector(unsigned(select_ln46_fu_382_p3) + unsigned(ap_const_lv3_1));
    add_ln859_1_fu_843_p2 <= std_logic_vector(unsigned(add_ln859_fu_837_p2) + unsigned(trunc_ln4_fu_756_p4));
    add_ln859_2_fu_849_p2 <= std_logic_vector(unsigned(trunc_ln864_4_fu_792_p4) + unsigned(trunc_ln864_3_fu_783_p4));
    add_ln859_3_fu_855_p2 <= std_logic_vector(unsigned(add_ln859_2_fu_849_p2) + unsigned(trunc_ln864_5_fu_801_p4));
    add_ln859_4_fu_861_p2 <= std_logic_vector(unsigned(add_ln859_3_fu_855_p2) + unsigned(trunc_ln864_6_fu_810_p4));
    add_ln859_5_fu_875_p2 <= std_logic_vector(unsigned(add_ln859_4_reg_1247) + unsigned(add_ln859_1_reg_1242));
    add_ln859_6_fu_879_p2 <= std_logic_vector(unsigned(add_ln859_5_fu_875_p2) + unsigned(val_V_fu_106));
    add_ln859_fu_837_p2 <= std_logic_vector(unsigned(trunc_ln864_1_fu_765_p4) + unsigned(trunc_ln864_2_fu_774_p4));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln46_fu_355_p2)
    begin
        if (((icmp_ln46_fu_355_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter5_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_chan_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, chan_fu_118)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_chan_1 <= ap_const_lv2_0;
        else 
            ap_sig_allocacmp_chan_1 <= chan_fu_118;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_110)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_110;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten249_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten249_fu_122)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten249_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_indvar_flatten249_load <= indvar_flatten249_fu_122;
        end if; 
    end process;

    conv_in_buf_V_address0 <= p_cast1_fu_528_p1(8 - 1 downto 0);

    conv_in_buf_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_in_buf_V_ce0 <= ap_const_logic_1;
        else 
            conv_in_buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_wt_buf_V_address0 <= zext_ln1319_8_fu_511_p1(7 - 1 downto 0);
    conv_wt_buf_V_address1 <= zext_ln1319_7_fu_501_p1(7 - 1 downto 0);
    conv_wt_buf_V_address2 <= zext_ln1319_6_fu_491_p1(7 - 1 downto 0);
    conv_wt_buf_V_address3 <= zext_ln1319_5_fu_481_p1(7 - 1 downto 0);
    conv_wt_buf_V_address4 <= zext_ln1319_4_fu_471_p1(7 - 1 downto 0);
    conv_wt_buf_V_address5 <= zext_ln1319_3_fu_461_p1(7 - 1 downto 0);
    conv_wt_buf_V_address6 <= zext_ln1319_2_fu_452_p1(7 - 1 downto 0);

    conv_wt_buf_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_wt_buf_V_ce0 <= ap_const_logic_1;
        else 
            conv_wt_buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_wt_buf_V_ce1 <= ap_const_logic_1;
        else 
            conv_wt_buf_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_wt_buf_V_ce2 <= ap_const_logic_1;
        else 
            conv_wt_buf_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_wt_buf_V_ce3 <= ap_const_logic_1;
        else 
            conv_wt_buf_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_wt_buf_V_ce4 <= ap_const_logic_1;
        else 
            conv_wt_buf_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_wt_buf_V_ce5 <= ap_const_logic_1;
        else 
            conv_wt_buf_V_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_ce6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_wt_buf_V_ce6 <= ap_const_logic_1;
        else 
            conv_wt_buf_V_ce6 <= ap_const_logic_0;
        end if; 
    end process;

    empty_40_fu_519_p2 <= std_logic_vector(unsigned(i_1_cast_fu_516_p1) + unsigned(select_ln31_1));
    grp_fu_898_p0 <= grp_fu_898_p00(2 - 1 downto 0);
    grp_fu_898_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln46_1_reg_1035),8));
    grp_fu_898_p1 <= ap_const_lv8_34(6 - 1 downto 0);
    grp_fu_898_p2 <= grp_fu_898_p20(6 - 1 downto 0);
    grp_fu_898_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_40_fu_519_p2),8));
    i_1_cast_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln46_reg_1029),6));
    icmp_ln46_fu_355_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten249_load = ap_const_lv5_15) else "0";
    icmp_ln52_fu_376_p2 <= "1" when (ap_sig_allocacmp_i_load = ap_const_lv3_7) else "0";
    lshr_ln1317_1_fu_567_p2 <= std_logic_vector(shift_right(unsigned(conv_in_buf_V_load_reg_1126),to_integer(unsigned('0' & zext_ln1317_7_fu_564_p1(31-1 downto 0)))));
    lshr_ln1317_2_fu_592_p2 <= std_logic_vector(shift_right(unsigned(conv_in_buf_V_load_reg_1126),to_integer(unsigned('0' & zext_ln1317_8_fu_589_p1(31-1 downto 0)))));
    lshr_ln1317_3_fu_617_p2 <= std_logic_vector(shift_right(unsigned(conv_in_buf_V_load_reg_1126),to_integer(unsigned('0' & zext_ln1317_9_fu_614_p1(31-1 downto 0)))));
    lshr_ln1317_4_fu_642_p2 <= std_logic_vector(shift_right(unsigned(conv_in_buf_V_load_reg_1126),to_integer(unsigned('0' & zext_ln1317_10_fu_639_p1(31-1 downto 0)))));
    lshr_ln1317_5_fu_667_p2 <= std_logic_vector(shift_right(unsigned(conv_in_buf_V_load_reg_1126),to_integer(unsigned('0' & zext_ln1317_11_fu_664_p1(31-1 downto 0)))));
    lshr_ln1317_6_fu_692_p2 <= std_logic_vector(shift_right(unsigned(conv_in_buf_V_load_reg_1126),to_integer(unsigned('0' & zext_ln1317_12_fu_689_p1(31-1 downto 0)))));
    lshr_ln1317_fu_542_p2 <= std_logic_vector(shift_right(unsigned(conv_in_buf_V_load_reg_1126),to_integer(unsigned('0' & zext_ln1317_6_fu_539_p1(31-1 downto 0)))));
    lshr_ln1319_1_fu_580_p2 <= std_logic_vector(shift_right(unsigned(conv_wt_buf_V_load_1_reg_1096),to_integer(unsigned('0' & zext_ln1319_10_fu_576_p1(31-1 downto 0)))));
    lshr_ln1319_2_fu_605_p2 <= std_logic_vector(shift_right(unsigned(conv_wt_buf_V_load_2_reg_1101),to_integer(unsigned('0' & zext_ln1319_11_fu_601_p1(31-1 downto 0)))));
    lshr_ln1319_3_fu_630_p2 <= std_logic_vector(shift_right(unsigned(conv_wt_buf_V_load_3_reg_1106),to_integer(unsigned('0' & zext_ln1319_12_fu_626_p1(31-1 downto 0)))));
    lshr_ln1319_4_fu_655_p2 <= std_logic_vector(shift_right(unsigned(conv_wt_buf_V_load_4_reg_1111),to_integer(unsigned('0' & zext_ln1319_13_fu_651_p1(31-1 downto 0)))));
    lshr_ln1319_5_fu_680_p2 <= std_logic_vector(shift_right(unsigned(conv_wt_buf_V_load_5_reg_1116),to_integer(unsigned('0' & zext_ln1319_14_fu_676_p1(31-1 downto 0)))));
    lshr_ln1319_6_fu_705_p2 <= std_logic_vector(shift_right(unsigned(conv_wt_buf_V_load_6_reg_1121),to_integer(unsigned('0' & zext_ln1319_15_fu_701_p1(31-1 downto 0)))));
    lshr_ln1319_fu_555_p2 <= std_logic_vector(shift_right(unsigned(conv_wt_buf_V_load_reg_1091),to_integer(unsigned('0' & zext_ln1319_9_fu_551_p1(31-1 downto 0)))));
    p_cast1_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_898_p3),64));
    p_lcssa14_out <= p_lcssa14_fu_114;

    p_lcssa14_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln46_reg_1025_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln46_reg_1025_pp0_iter4_reg = ap_const_lv1_1))) then 
            p_lcssa14_out_ap_vld <= ap_const_logic_1;
        else 
            p_lcssa14_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln46_1_fu_412_p3 <= 
        add_ln46_fu_370_p2 when (icmp_ln52_fu_376_p2(0) = '1') else 
        ap_sig_allocacmp_chan_1;
    select_ln46_2_fu_420_p3 <= 
        sub_ln1319_2_fu_406_p2 when (icmp_ln52_fu_376_p2(0) = '1') else 
        sub_ln1319_1_fu_349_p2;
    select_ln46_fu_382_p3 <= 
        ap_const_lv3_0 when (icmp_ln52_fu_376_p2(0) = '1') else 
        ap_sig_allocacmp_i_load;
    shl_ln1319_1_fu_400_p2 <= std_logic_vector(shift_left(unsigned(add_ln1319_1_fu_394_p2),to_integer(unsigned('0' & ap_const_lv7_3(7-1 downto 0)))));
    shl_ln1319_fu_343_p2 <= std_logic_vector(shift_left(unsigned(add_ln1319_fu_337_p2),to_integer(unsigned('0' & ap_const_lv7_3(7-1 downto 0)))));
    sub_ln1319_1_fu_349_p2 <= std_logic_vector(unsigned(shl_ln1319_fu_343_p2) - unsigned(add_ln1319_fu_337_p2));
    sub_ln1319_2_fu_406_p2 <= std_logic_vector(unsigned(shl_ln1319_1_fu_400_p2) - unsigned(add_ln1319_1_fu_394_p2));
        sub_ln1319_cast_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1319),7));

    tmp_6_6_fu_819_p8 <= ((((((trunc_ln864_6_fu_810_p4 & trunc_ln864_5_fu_801_p4) & trunc_ln864_4_fu_792_p4) & trunc_ln864_3_fu_783_p4) & trunc_ln864_2_fu_774_p4) & trunc_ln864_1_fu_765_p4) & trunc_ln4_fu_756_p4);
    tmp_s_fu_532_p3 <= (select_ln46_reg_1029_pp0_iter2_reg & ap_const_lv4_0);
    trunc_ln1317_1_fu_572_p1 <= lshr_ln1317_1_fu_567_p2(16 - 1 downto 0);
    trunc_ln1317_2_fu_597_p1 <= lshr_ln1317_2_fu_592_p2(16 - 1 downto 0);
    trunc_ln1317_3_fu_622_p1 <= lshr_ln1317_3_fu_617_p2(16 - 1 downto 0);
    trunc_ln1317_4_fu_647_p1 <= lshr_ln1317_4_fu_642_p2(16 - 1 downto 0);
    trunc_ln1317_5_fu_672_p1 <= lshr_ln1317_5_fu_667_p2(16 - 1 downto 0);
    trunc_ln1317_6_fu_697_p1 <= lshr_ln1317_6_fu_692_p2(16 - 1 downto 0);
    trunc_ln1317_fu_547_p1 <= lshr_ln1317_fu_542_p2(16 - 1 downto 0);
    trunc_ln1319_1_fu_585_p1 <= lshr_ln1319_1_fu_580_p2(16 - 1 downto 0);
    trunc_ln1319_2_fu_610_p1 <= lshr_ln1319_2_fu_605_p2(16 - 1 downto 0);
    trunc_ln1319_3_fu_635_p1 <= lshr_ln1319_3_fu_630_p2(16 - 1 downto 0);
    trunc_ln1319_4_fu_660_p1 <= lshr_ln1319_4_fu_655_p2(16 - 1 downto 0);
    trunc_ln1319_5_fu_685_p1 <= lshr_ln1319_5_fu_680_p2(16 - 1 downto 0);
    trunc_ln1319_6_fu_710_p1 <= lshr_ln1319_6_fu_705_p2(16 - 1 downto 0);
    trunc_ln1319_fu_560_p1 <= lshr_ln1319_fu_555_p2(16 - 1 downto 0);
    trunc_ln4_fu_756_p4 <= mul_ln864_reg_1207(28 downto 13);
    trunc_ln864_1_fu_765_p4 <= mul_ln864_1_reg_1212(28 downto 13);
    trunc_ln864_2_fu_774_p4 <= mul_ln864_2_reg_1217(28 downto 13);
    trunc_ln864_3_fu_783_p4 <= mul_ln864_3_reg_1222(28 downto 13);
    trunc_ln864_4_fu_792_p4 <= mul_ln864_4_reg_1227(28 downto 13);
    trunc_ln864_5_fu_801_p4 <= mul_ln864_5_reg_1232(28 downto 13);
    trunc_ln864_6_fu_810_p4 <= mul_ln864_6_reg_1237(28 downto 13);
    val_V_out <= val_V_fu_106;

    val_V_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln46_reg_1025_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln46_reg_1025_pp0_iter4_reg = ap_const_lv1_1))) then 
            val_V_out_ap_vld <= ap_const_logic_1;
        else 
            val_V_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1317_10_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1317_4),736));
    zext_ln1317_11_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1317_5),736));
    zext_ln1317_12_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln46),736));
    zext_ln1317_6_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1317),736));
    zext_ln1317_7_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1317_1),736));
    zext_ln1317_8_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1317_2),736));
    zext_ln1317_9_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1317_3),736));
    zext_ln1319_10_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_532_p3),112));
    zext_ln1319_11_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_532_p3),112));
    zext_ln1319_12_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_532_p3),112));
    zext_ln1319_13_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_532_p3),112));
    zext_ln1319_14_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_532_p3),112));
    zext_ln1319_15_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_532_p3),112));
    zext_ln1319_1_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_fu_370_p2),7));
    zext_ln1319_2_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln46_2_reg_1040),64));
    zext_ln1319_3_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_1_fu_456_p2),64));
    zext_ln1319_4_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_2_fu_466_p2),64));
    zext_ln1319_5_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_3_fu_476_p2),64));
    zext_ln1319_6_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_4_fu_486_p2),64));
    zext_ln1319_7_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_5_fu_496_p2),64));
    zext_ln1319_8_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_6_fu_506_p2),64));
    zext_ln1319_9_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_532_p3),112));
    zext_ln1319_fu_333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_chan_1),7));
end behav;
