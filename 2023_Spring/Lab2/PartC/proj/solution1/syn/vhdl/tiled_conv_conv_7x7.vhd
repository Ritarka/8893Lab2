-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tiled_conv_conv_7x7 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Y_buf_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    Y_buf_0_ce0 : OUT STD_LOGIC;
    Y_buf_0_we0 : OUT STD_LOGIC;
    Y_buf_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    Y_buf_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    Y_buf_1_ce0 : OUT STD_LOGIC;
    Y_buf_1_we0 : OUT STD_LOGIC;
    Y_buf_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    Y_buf_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    Y_buf_2_ce0 : OUT STD_LOGIC;
    Y_buf_2_we0 : OUT STD_LOGIC;
    Y_buf_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    Y_buf_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    Y_buf_3_ce0 : OUT STD_LOGIC;
    Y_buf_3_we0 : OUT STD_LOGIC;
    Y_buf_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    X_buf_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_0_ce0 : OUT STD_LOGIC;
    X_buf_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_1_ce0 : OUT STD_LOGIC;
    X_buf_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_2_ce0 : OUT STD_LOGIC;
    X_buf_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_3_ce0 : OUT STD_LOGIC;
    X_buf_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_4_ce0 : OUT STD_LOGIC;
    X_buf_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_5_ce0 : OUT STD_LOGIC;
    X_buf_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_6_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_6_ce0 : OUT STD_LOGIC;
    X_buf_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_7_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_7_ce0 : OUT STD_LOGIC;
    X_buf_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_8_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_8_ce0 : OUT STD_LOGIC;
    X_buf_8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_9_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_9_ce0 : OUT STD_LOGIC;
    X_buf_9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_10_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_10_ce0 : OUT STD_LOGIC;
    X_buf_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_11_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_11_ce0 : OUT STD_LOGIC;
    X_buf_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_12_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_12_ce0 : OUT STD_LOGIC;
    X_buf_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_13_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_13_ce0 : OUT STD_LOGIC;
    X_buf_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_14_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_14_ce0 : OUT STD_LOGIC;
    X_buf_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_15_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_15_ce0 : OUT STD_LOGIC;
    X_buf_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_16_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_16_ce0 : OUT STD_LOGIC;
    X_buf_16_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_17_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_17_ce0 : OUT STD_LOGIC;
    X_buf_17_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_18_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_18_ce0 : OUT STD_LOGIC;
    X_buf_18_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_19_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_19_ce0 : OUT STD_LOGIC;
    X_buf_19_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_20_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_20_ce0 : OUT STD_LOGIC;
    X_buf_20_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_21_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_21_ce0 : OUT STD_LOGIC;
    X_buf_21_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_22_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_22_ce0 : OUT STD_LOGIC;
    X_buf_22_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_23_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_23_ce0 : OUT STD_LOGIC;
    X_buf_23_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_24_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_24_ce0 : OUT STD_LOGIC;
    X_buf_24_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_25_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_25_ce0 : OUT STD_LOGIC;
    X_buf_25_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_26_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_26_ce0 : OUT STD_LOGIC;
    X_buf_26_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_27_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_27_ce0 : OUT STD_LOGIC;
    X_buf_27_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_28_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_28_ce0 : OUT STD_LOGIC;
    X_buf_28_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_29_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_29_ce0 : OUT STD_LOGIC;
    X_buf_29_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_30_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_30_ce0 : OUT STD_LOGIC;
    X_buf_30_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_31_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_31_ce0 : OUT STD_LOGIC;
    X_buf_31_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_32_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_32_ce0 : OUT STD_LOGIC;
    X_buf_32_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_33_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_33_ce0 : OUT STD_LOGIC;
    X_buf_33_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_34_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_34_ce0 : OUT STD_LOGIC;
    X_buf_34_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_35_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_35_ce0 : OUT STD_LOGIC;
    X_buf_35_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_36_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_36_ce0 : OUT STD_LOGIC;
    X_buf_36_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_37_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_37_ce0 : OUT STD_LOGIC;
    X_buf_37_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_38_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_38_ce0 : OUT STD_LOGIC;
    X_buf_38_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_39_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_39_ce0 : OUT STD_LOGIC;
    X_buf_39_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_40_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_40_ce0 : OUT STD_LOGIC;
    X_buf_40_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_41_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_41_ce0 : OUT STD_LOGIC;
    X_buf_41_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_42_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_42_ce0 : OUT STD_LOGIC;
    X_buf_42_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_43_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_43_ce0 : OUT STD_LOGIC;
    X_buf_43_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_44_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    X_buf_44_ce0 : OUT STD_LOGIC;
    X_buf_44_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf_6_ce0 : OUT STD_LOGIC;
    W_buf_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf_6_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf_6_ce1 : OUT STD_LOGIC;
    W_buf_6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf_6_address2 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf_6_ce2 : OUT STD_LOGIC;
    W_buf_6_q2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of tiled_conv_conv_7x7 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv11_730 : STD_LOGIC_VECTOR (10 downto 0) := "11100110000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv8_50 : STD_LOGIC_VECTOR (7 downto 0) := "01010000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv7_15 : STD_LOGIC_VECTOR (6 downto 0) := "0010101";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv8_68 : STD_LOGIC_VECTOR (7 downto 0) := "01101000";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv7_11 : STD_LOGIC_VECTOR (6 downto 0) := "0010001";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv7_14 : STD_LOGIC_VECTOR (6 downto 0) := "0010100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv7_12 : STD_LOGIC_VECTOR (6 downto 0) := "0010010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal icmp_ln41_reg_2283 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_985 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal reg_990 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_994 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln41_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln41_1_fu_1042_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln41_1_reg_2287 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln44_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_reg_2292 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_reg_2292_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_reg_2302 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_reg_2302_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln44_fu_1081_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln44_reg_2308 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln1319_fu_1093_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1319_reg_2313 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln51_fu_1099_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln51_reg_2324 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln51_reg_2324_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln51_reg_2324_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal rhs_fu_1103_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_reg_2328 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_reg_2328_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_reg_2328_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal h_load_reg_2334 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln41_1_fu_1123_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln41_1_reg_2340 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_1273_p41 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_2601 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_1357_p41 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_reg_2606 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_1441_p41 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_reg_2611 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_1525_p41 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_reg_2616 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_1609_p41 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_reg_2621 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_1693_p41 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_reg_2626 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_1777_p41 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_reg_2631 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln864_fu_2192_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_reg_2641 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_1_fu_2198_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_1_reg_2646 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_2_fu_2204_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_2_reg_2651 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln3_reg_2656 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_1_reg_2661 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_2_reg_2666 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1317_fu_2210_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1317_reg_2671 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln864_4_fu_2216_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_4_reg_2676 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_5_fu_2222_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_5_reg_2681 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln41_2_fu_2012_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln41_2_reg_2686 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln44_1_fu_2025_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln44_1_reg_2692 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln864_3_fu_2228_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln864_3_reg_2697 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln859_fu_2074_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_reg_2702 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_4_fu_2089_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_4_reg_2707 : STD_LOGIC_VECTOR (15 downto 0);
    signal Y_buf_0_addr_reg_2712 : STD_LOGIC_VECTOR (8 downto 0);
    signal Y_buf_1_addr_reg_2717 : STD_LOGIC_VECTOR (8 downto 0);
    signal Y_buf_2_addr_reg_2722 : STD_LOGIC_VECTOR (8 downto 0);
    signal Y_buf_3_addr_reg_2727 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1466_fu_2173_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1466_reg_2732 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln859_6_fu_2179_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_6_reg_2737 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln1317_fu_1153_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln1319_1_fu_1207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_2_fu_1217_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_3_fu_1227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_4_fu_1248_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln1319_6_fu_1258_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_7_fu_1268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_5_fu_1914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_cast_fu_2138_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel_fu_220 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln47_fu_1861_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_kernel_load : STD_LOGIC_VECTOR (2 downto 0);
    signal w_fu_224 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln44_2_fu_1237_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ow_fu_228 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln44_3_fu_1872_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_fu_982_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_fu_236 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln41_5_fu_1903_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal oh_fu_240 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten71_fu_244 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_allocacmp_indvar_flatten71_load : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_fu_2160_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1466_fu_2187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln41_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln44_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln1319_fu_1093_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln1319_fu_1093_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln41_4_fu_1130_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_2_fu_1137_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln41_fu_1143_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln41_3_fu_1147_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1319_fu_1202_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_1_fu_1212_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_2_fu_1222_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvars_iv_next295_fu_1232_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1319_3_fu_1243_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_5_fu_1253_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_6_fu_1263_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln44_1_fu_1866_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvars_iv_next305_fu_1898_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1319_4_fu_1909_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln41_fu_1999_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln41_fu_2005_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln44_fu_2019_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_2057_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln864_4_fu_2039_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal factor_fu_2066_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_5_fu_2048_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_3_fu_2084_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_2_fu_2080_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_2112_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_2105_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_cast_fu_2119_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_66_fu_2123_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln44_1_cast_fu_2129_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_67_fu_2132_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln864_3_fu_2146_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln859_1_fu_2155_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln859_fu_2169_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln859_1_fu_2184_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln1319_fu_1093_p00 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_condition_1455 : BOOLEAN;
    signal ap_condition_1460 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component tiled_conv_mul_3ns_6ns_7_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component tiled_conv_mux_43_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_mux_396_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        din5 : IN STD_LOGIC_VECTOR (15 downto 0);
        din6 : IN STD_LOGIC_VECTOR (15 downto 0);
        din7 : IN STD_LOGIC_VECTOR (15 downto 0);
        din8 : IN STD_LOGIC_VECTOR (15 downto 0);
        din9 : IN STD_LOGIC_VECTOR (15 downto 0);
        din10 : IN STD_LOGIC_VECTOR (15 downto 0);
        din11 : IN STD_LOGIC_VECTOR (15 downto 0);
        din12 : IN STD_LOGIC_VECTOR (15 downto 0);
        din13 : IN STD_LOGIC_VECTOR (15 downto 0);
        din14 : IN STD_LOGIC_VECTOR (15 downto 0);
        din15 : IN STD_LOGIC_VECTOR (15 downto 0);
        din16 : IN STD_LOGIC_VECTOR (15 downto 0);
        din17 : IN STD_LOGIC_VECTOR (15 downto 0);
        din18 : IN STD_LOGIC_VECTOR (15 downto 0);
        din19 : IN STD_LOGIC_VECTOR (15 downto 0);
        din20 : IN STD_LOGIC_VECTOR (15 downto 0);
        din21 : IN STD_LOGIC_VECTOR (15 downto 0);
        din22 : IN STD_LOGIC_VECTOR (15 downto 0);
        din23 : IN STD_LOGIC_VECTOR (15 downto 0);
        din24 : IN STD_LOGIC_VECTOR (15 downto 0);
        din25 : IN STD_LOGIC_VECTOR (15 downto 0);
        din26 : IN STD_LOGIC_VECTOR (15 downto 0);
        din27 : IN STD_LOGIC_VECTOR (15 downto 0);
        din28 : IN STD_LOGIC_VECTOR (15 downto 0);
        din29 : IN STD_LOGIC_VECTOR (15 downto 0);
        din30 : IN STD_LOGIC_VECTOR (15 downto 0);
        din31 : IN STD_LOGIC_VECTOR (15 downto 0);
        din32 : IN STD_LOGIC_VECTOR (15 downto 0);
        din33 : IN STD_LOGIC_VECTOR (15 downto 0);
        din34 : IN STD_LOGIC_VECTOR (15 downto 0);
        din35 : IN STD_LOGIC_VECTOR (15 downto 0);
        din36 : IN STD_LOGIC_VECTOR (15 downto 0);
        din37 : IN STD_LOGIC_VECTOR (15 downto 0);
        din38 : IN STD_LOGIC_VECTOR (15 downto 0);
        din39 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_mul_mul_16s_16s_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component tiled_conv_mul_mul_16s_16s_28_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component tiled_conv_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_3ns_6ns_7_1_1_U201 : component tiled_conv_mul_3ns_6ns_7_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 6,
        dout_WIDTH => 7)
    port map (
        din0 => mul_ln1319_fu_1093_p0,
        din1 => mul_ln1319_fu_1093_p1,
        dout => mul_ln1319_fu_1093_p2);

    mux_43_16_1_1_U202 : component tiled_conv_mux_43_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => p_read,
        din1 => p_read1,
        din2 => p_read2,
        din3 => p_read3,
        din4 => select_ln44_fu_1081_p3,
        dout => rhs_fu_1103_p6);

    mux_396_16_1_1_U203 : component tiled_conv_mux_396_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 16,
        din17_WIDTH => 16,
        din18_WIDTH => 16,
        din19_WIDTH => 16,
        din20_WIDTH => 16,
        din21_WIDTH => 16,
        din22_WIDTH => 16,
        din23_WIDTH => 16,
        din24_WIDTH => 16,
        din25_WIDTH => 16,
        din26_WIDTH => 16,
        din27_WIDTH => 16,
        din28_WIDTH => 16,
        din29_WIDTH => 16,
        din30_WIDTH => 16,
        din31_WIDTH => 16,
        din32_WIDTH => 16,
        din33_WIDTH => 16,
        din34_WIDTH => 16,
        din35_WIDTH => 16,
        din36_WIDTH => 16,
        din37_WIDTH => 16,
        din38_WIDTH => 16,
        din39_WIDTH => 6,
        dout_WIDTH => 16)
    port map (
        din0 => X_buf_0_q0,
        din1 => ap_const_lv16_0,
        din2 => X_buf_2_q0,
        din3 => ap_const_lv16_0,
        din4 => X_buf_4_q0,
        din5 => ap_const_lv16_0,
        din6 => X_buf_6_q0,
        din7 => ap_const_lv16_0,
        din8 => X_buf_8_q0,
        din9 => ap_const_lv16_0,
        din10 => X_buf_10_q0,
        din11 => ap_const_lv16_0,
        din12 => X_buf_12_q0,
        din13 => ap_const_lv16_0,
        din14 => X_buf_14_q0,
        din15 => ap_const_lv16_0,
        din16 => X_buf_16_q0,
        din17 => ap_const_lv16_0,
        din18 => X_buf_18_q0,
        din19 => ap_const_lv16_0,
        din20 => X_buf_20_q0,
        din21 => ap_const_lv16_0,
        din22 => X_buf_22_q0,
        din23 => ap_const_lv16_0,
        din24 => X_buf_24_q0,
        din25 => ap_const_lv16_0,
        din26 => X_buf_26_q0,
        din27 => ap_const_lv16_0,
        din28 => X_buf_28_q0,
        din29 => ap_const_lv16_0,
        din30 => X_buf_30_q0,
        din31 => ap_const_lv16_0,
        din32 => X_buf_32_q0,
        din33 => ap_const_lv16_0,
        din34 => X_buf_34_q0,
        din35 => ap_const_lv16_0,
        din36 => X_buf_36_q0,
        din37 => ap_const_lv16_0,
        din38 => X_buf_38_q0,
        din39 => select_ln44_2_fu_1237_p3,
        dout => tmp_fu_1273_p41);

    mux_396_16_1_1_U204 : component tiled_conv_mux_396_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 16,
        din17_WIDTH => 16,
        din18_WIDTH => 16,
        din19_WIDTH => 16,
        din20_WIDTH => 16,
        din21_WIDTH => 16,
        din22_WIDTH => 16,
        din23_WIDTH => 16,
        din24_WIDTH => 16,
        din25_WIDTH => 16,
        din26_WIDTH => 16,
        din27_WIDTH => 16,
        din28_WIDTH => 16,
        din29_WIDTH => 16,
        din30_WIDTH => 16,
        din31_WIDTH => 16,
        din32_WIDTH => 16,
        din33_WIDTH => 16,
        din34_WIDTH => 16,
        din35_WIDTH => 16,
        din36_WIDTH => 16,
        din37_WIDTH => 16,
        din38_WIDTH => 16,
        din39_WIDTH => 6,
        dout_WIDTH => 16)
    port map (
        din0 => X_buf_1_q0,
        din1 => ap_const_lv16_0,
        din2 => X_buf_3_q0,
        din3 => ap_const_lv16_0,
        din4 => X_buf_5_q0,
        din5 => ap_const_lv16_0,
        din6 => X_buf_7_q0,
        din7 => ap_const_lv16_0,
        din8 => X_buf_9_q0,
        din9 => ap_const_lv16_0,
        din10 => X_buf_11_q0,
        din11 => ap_const_lv16_0,
        din12 => X_buf_13_q0,
        din13 => ap_const_lv16_0,
        din14 => X_buf_15_q0,
        din15 => ap_const_lv16_0,
        din16 => X_buf_17_q0,
        din17 => ap_const_lv16_0,
        din18 => X_buf_19_q0,
        din19 => ap_const_lv16_0,
        din20 => X_buf_21_q0,
        din21 => ap_const_lv16_0,
        din22 => X_buf_23_q0,
        din23 => ap_const_lv16_0,
        din24 => X_buf_25_q0,
        din25 => ap_const_lv16_0,
        din26 => X_buf_27_q0,
        din27 => ap_const_lv16_0,
        din28 => X_buf_29_q0,
        din29 => ap_const_lv16_0,
        din30 => X_buf_31_q0,
        din31 => ap_const_lv16_0,
        din32 => X_buf_33_q0,
        din33 => ap_const_lv16_0,
        din34 => X_buf_35_q0,
        din35 => ap_const_lv16_0,
        din36 => X_buf_37_q0,
        din37 => ap_const_lv16_0,
        din38 => X_buf_39_q0,
        din39 => select_ln44_2_fu_1237_p3,
        dout => tmp_1_fu_1357_p41);

    mux_396_16_1_1_U205 : component tiled_conv_mux_396_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 16,
        din17_WIDTH => 16,
        din18_WIDTH => 16,
        din19_WIDTH => 16,
        din20_WIDTH => 16,
        din21_WIDTH => 16,
        din22_WIDTH => 16,
        din23_WIDTH => 16,
        din24_WIDTH => 16,
        din25_WIDTH => 16,
        din26_WIDTH => 16,
        din27_WIDTH => 16,
        din28_WIDTH => 16,
        din29_WIDTH => 16,
        din30_WIDTH => 16,
        din31_WIDTH => 16,
        din32_WIDTH => 16,
        din33_WIDTH => 16,
        din34_WIDTH => 16,
        din35_WIDTH => 16,
        din36_WIDTH => 16,
        din37_WIDTH => 16,
        din38_WIDTH => 16,
        din39_WIDTH => 6,
        dout_WIDTH => 16)
    port map (
        din0 => X_buf_2_q0,
        din1 => ap_const_lv16_0,
        din2 => X_buf_4_q0,
        din3 => ap_const_lv16_0,
        din4 => X_buf_6_q0,
        din5 => ap_const_lv16_0,
        din6 => X_buf_8_q0,
        din7 => ap_const_lv16_0,
        din8 => X_buf_10_q0,
        din9 => ap_const_lv16_0,
        din10 => X_buf_12_q0,
        din11 => ap_const_lv16_0,
        din12 => X_buf_14_q0,
        din13 => ap_const_lv16_0,
        din14 => X_buf_16_q0,
        din15 => ap_const_lv16_0,
        din16 => X_buf_18_q0,
        din17 => ap_const_lv16_0,
        din18 => X_buf_20_q0,
        din19 => ap_const_lv16_0,
        din20 => X_buf_22_q0,
        din21 => ap_const_lv16_0,
        din22 => X_buf_24_q0,
        din23 => ap_const_lv16_0,
        din24 => X_buf_26_q0,
        din25 => ap_const_lv16_0,
        din26 => X_buf_28_q0,
        din27 => ap_const_lv16_0,
        din28 => X_buf_30_q0,
        din29 => ap_const_lv16_0,
        din30 => X_buf_32_q0,
        din31 => ap_const_lv16_0,
        din32 => X_buf_34_q0,
        din33 => ap_const_lv16_0,
        din34 => X_buf_36_q0,
        din35 => ap_const_lv16_0,
        din36 => X_buf_38_q0,
        din37 => ap_const_lv16_0,
        din38 => X_buf_40_q0,
        din39 => select_ln44_2_fu_1237_p3,
        dout => tmp_2_fu_1441_p41);

    mux_396_16_1_1_U206 : component tiled_conv_mux_396_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 16,
        din17_WIDTH => 16,
        din18_WIDTH => 16,
        din19_WIDTH => 16,
        din20_WIDTH => 16,
        din21_WIDTH => 16,
        din22_WIDTH => 16,
        din23_WIDTH => 16,
        din24_WIDTH => 16,
        din25_WIDTH => 16,
        din26_WIDTH => 16,
        din27_WIDTH => 16,
        din28_WIDTH => 16,
        din29_WIDTH => 16,
        din30_WIDTH => 16,
        din31_WIDTH => 16,
        din32_WIDTH => 16,
        din33_WIDTH => 16,
        din34_WIDTH => 16,
        din35_WIDTH => 16,
        din36_WIDTH => 16,
        din37_WIDTH => 16,
        din38_WIDTH => 16,
        din39_WIDTH => 6,
        dout_WIDTH => 16)
    port map (
        din0 => X_buf_3_q0,
        din1 => ap_const_lv16_0,
        din2 => X_buf_5_q0,
        din3 => ap_const_lv16_0,
        din4 => X_buf_7_q0,
        din5 => ap_const_lv16_0,
        din6 => X_buf_9_q0,
        din7 => ap_const_lv16_0,
        din8 => X_buf_11_q0,
        din9 => ap_const_lv16_0,
        din10 => X_buf_13_q0,
        din11 => ap_const_lv16_0,
        din12 => X_buf_15_q0,
        din13 => ap_const_lv16_0,
        din14 => X_buf_17_q0,
        din15 => ap_const_lv16_0,
        din16 => X_buf_19_q0,
        din17 => ap_const_lv16_0,
        din18 => X_buf_21_q0,
        din19 => ap_const_lv16_0,
        din20 => X_buf_23_q0,
        din21 => ap_const_lv16_0,
        din22 => X_buf_25_q0,
        din23 => ap_const_lv16_0,
        din24 => X_buf_27_q0,
        din25 => ap_const_lv16_0,
        din26 => X_buf_29_q0,
        din27 => ap_const_lv16_0,
        din28 => X_buf_31_q0,
        din29 => ap_const_lv16_0,
        din30 => X_buf_33_q0,
        din31 => ap_const_lv16_0,
        din32 => X_buf_35_q0,
        din33 => ap_const_lv16_0,
        din34 => X_buf_37_q0,
        din35 => ap_const_lv16_0,
        din36 => X_buf_39_q0,
        din37 => ap_const_lv16_0,
        din38 => X_buf_41_q0,
        din39 => select_ln44_2_fu_1237_p3,
        dout => tmp_3_fu_1525_p41);

    mux_396_16_1_1_U207 : component tiled_conv_mux_396_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 16,
        din17_WIDTH => 16,
        din18_WIDTH => 16,
        din19_WIDTH => 16,
        din20_WIDTH => 16,
        din21_WIDTH => 16,
        din22_WIDTH => 16,
        din23_WIDTH => 16,
        din24_WIDTH => 16,
        din25_WIDTH => 16,
        din26_WIDTH => 16,
        din27_WIDTH => 16,
        din28_WIDTH => 16,
        din29_WIDTH => 16,
        din30_WIDTH => 16,
        din31_WIDTH => 16,
        din32_WIDTH => 16,
        din33_WIDTH => 16,
        din34_WIDTH => 16,
        din35_WIDTH => 16,
        din36_WIDTH => 16,
        din37_WIDTH => 16,
        din38_WIDTH => 16,
        din39_WIDTH => 6,
        dout_WIDTH => 16)
    port map (
        din0 => X_buf_4_q0,
        din1 => ap_const_lv16_0,
        din2 => X_buf_6_q0,
        din3 => ap_const_lv16_0,
        din4 => X_buf_8_q0,
        din5 => ap_const_lv16_0,
        din6 => X_buf_10_q0,
        din7 => ap_const_lv16_0,
        din8 => X_buf_12_q0,
        din9 => ap_const_lv16_0,
        din10 => X_buf_14_q0,
        din11 => ap_const_lv16_0,
        din12 => X_buf_16_q0,
        din13 => ap_const_lv16_0,
        din14 => X_buf_18_q0,
        din15 => ap_const_lv16_0,
        din16 => X_buf_20_q0,
        din17 => ap_const_lv16_0,
        din18 => X_buf_22_q0,
        din19 => ap_const_lv16_0,
        din20 => X_buf_24_q0,
        din21 => ap_const_lv16_0,
        din22 => X_buf_26_q0,
        din23 => ap_const_lv16_0,
        din24 => X_buf_28_q0,
        din25 => ap_const_lv16_0,
        din26 => X_buf_30_q0,
        din27 => ap_const_lv16_0,
        din28 => X_buf_32_q0,
        din29 => ap_const_lv16_0,
        din30 => X_buf_34_q0,
        din31 => ap_const_lv16_0,
        din32 => X_buf_36_q0,
        din33 => ap_const_lv16_0,
        din34 => X_buf_38_q0,
        din35 => ap_const_lv16_0,
        din36 => X_buf_40_q0,
        din37 => ap_const_lv16_0,
        din38 => X_buf_42_q0,
        din39 => select_ln44_2_fu_1237_p3,
        dout => tmp_4_fu_1609_p41);

    mux_396_16_1_1_U208 : component tiled_conv_mux_396_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 16,
        din17_WIDTH => 16,
        din18_WIDTH => 16,
        din19_WIDTH => 16,
        din20_WIDTH => 16,
        din21_WIDTH => 16,
        din22_WIDTH => 16,
        din23_WIDTH => 16,
        din24_WIDTH => 16,
        din25_WIDTH => 16,
        din26_WIDTH => 16,
        din27_WIDTH => 16,
        din28_WIDTH => 16,
        din29_WIDTH => 16,
        din30_WIDTH => 16,
        din31_WIDTH => 16,
        din32_WIDTH => 16,
        din33_WIDTH => 16,
        din34_WIDTH => 16,
        din35_WIDTH => 16,
        din36_WIDTH => 16,
        din37_WIDTH => 16,
        din38_WIDTH => 16,
        din39_WIDTH => 6,
        dout_WIDTH => 16)
    port map (
        din0 => X_buf_5_q0,
        din1 => ap_const_lv16_0,
        din2 => X_buf_7_q0,
        din3 => ap_const_lv16_0,
        din4 => X_buf_9_q0,
        din5 => ap_const_lv16_0,
        din6 => X_buf_11_q0,
        din7 => ap_const_lv16_0,
        din8 => X_buf_13_q0,
        din9 => ap_const_lv16_0,
        din10 => X_buf_15_q0,
        din11 => ap_const_lv16_0,
        din12 => X_buf_17_q0,
        din13 => ap_const_lv16_0,
        din14 => X_buf_19_q0,
        din15 => ap_const_lv16_0,
        din16 => X_buf_21_q0,
        din17 => ap_const_lv16_0,
        din18 => X_buf_23_q0,
        din19 => ap_const_lv16_0,
        din20 => X_buf_25_q0,
        din21 => ap_const_lv16_0,
        din22 => X_buf_27_q0,
        din23 => ap_const_lv16_0,
        din24 => X_buf_29_q0,
        din25 => ap_const_lv16_0,
        din26 => X_buf_31_q0,
        din27 => ap_const_lv16_0,
        din28 => X_buf_33_q0,
        din29 => ap_const_lv16_0,
        din30 => X_buf_35_q0,
        din31 => ap_const_lv16_0,
        din32 => X_buf_37_q0,
        din33 => ap_const_lv16_0,
        din34 => X_buf_39_q0,
        din35 => ap_const_lv16_0,
        din36 => X_buf_41_q0,
        din37 => ap_const_lv16_0,
        din38 => X_buf_43_q0,
        din39 => select_ln44_2_fu_1237_p3,
        dout => tmp_5_fu_1693_p41);

    mux_396_16_1_1_U209 : component tiled_conv_mux_396_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 16,
        din17_WIDTH => 16,
        din18_WIDTH => 16,
        din19_WIDTH => 16,
        din20_WIDTH => 16,
        din21_WIDTH => 16,
        din22_WIDTH => 16,
        din23_WIDTH => 16,
        din24_WIDTH => 16,
        din25_WIDTH => 16,
        din26_WIDTH => 16,
        din27_WIDTH => 16,
        din28_WIDTH => 16,
        din29_WIDTH => 16,
        din30_WIDTH => 16,
        din31_WIDTH => 16,
        din32_WIDTH => 16,
        din33_WIDTH => 16,
        din34_WIDTH => 16,
        din35_WIDTH => 16,
        din36_WIDTH => 16,
        din37_WIDTH => 16,
        din38_WIDTH => 16,
        din39_WIDTH => 6,
        dout_WIDTH => 16)
    port map (
        din0 => X_buf_6_q0,
        din1 => ap_const_lv16_0,
        din2 => X_buf_8_q0,
        din3 => ap_const_lv16_0,
        din4 => X_buf_10_q0,
        din5 => ap_const_lv16_0,
        din6 => X_buf_12_q0,
        din7 => ap_const_lv16_0,
        din8 => X_buf_14_q0,
        din9 => ap_const_lv16_0,
        din10 => X_buf_16_q0,
        din11 => ap_const_lv16_0,
        din12 => X_buf_18_q0,
        din13 => ap_const_lv16_0,
        din14 => X_buf_20_q0,
        din15 => ap_const_lv16_0,
        din16 => X_buf_22_q0,
        din17 => ap_const_lv16_0,
        din18 => X_buf_24_q0,
        din19 => ap_const_lv16_0,
        din20 => X_buf_26_q0,
        din21 => ap_const_lv16_0,
        din22 => X_buf_28_q0,
        din23 => ap_const_lv16_0,
        din24 => X_buf_30_q0,
        din25 => ap_const_lv16_0,
        din26 => X_buf_32_q0,
        din27 => ap_const_lv16_0,
        din28 => X_buf_34_q0,
        din29 => ap_const_lv16_0,
        din30 => X_buf_36_q0,
        din31 => ap_const_lv16_0,
        din32 => X_buf_38_q0,
        din33 => ap_const_lv16_0,
        din34 => X_buf_40_q0,
        din35 => ap_const_lv16_0,
        din36 => X_buf_42_q0,
        din37 => ap_const_lv16_0,
        din38 => X_buf_44_q0,
        din39 => select_ln44_2_fu_1237_p3,
        dout => tmp_6_fu_1777_p41);

    mul_mul_16s_16s_29_1_1_U210 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_985,
        din1 => tmp_reg_2601,
        dout => mul_ln864_fu_2192_p2);

    mul_mul_16s_16s_29_1_1_U211 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_990,
        din1 => tmp_1_reg_2606,
        dout => mul_ln864_1_fu_2198_p2);

    mul_mul_16s_16s_29_1_1_U212 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_994,
        din1 => tmp_2_reg_2611,
        dout => mul_ln864_2_fu_2204_p2);

    mul_mul_16s_16s_28_1_1_U213 : component tiled_conv_mul_mul_16s_16s_28_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 28)
    port map (
        din0 => reg_985,
        din1 => tmp_3_reg_2616,
        dout => mul_ln1317_fu_2210_p2);

    mul_mul_16s_16s_29_1_1_U214 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_990,
        din1 => tmp_5_reg_2626,
        dout => mul_ln864_4_fu_2216_p2);

    mul_mul_16s_16s_29_1_1_U215 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_994,
        din1 => tmp_6_reg_2631,
        dout => mul_ln864_5_fu_2222_p2);

    mul_mul_16s_16s_29_1_1_U216 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_985,
        din1 => tmp_4_reg_2621,
        dout => mul_ln864_3_fu_2228_p2);

    flow_control_loop_pipe_sequential_init_U : component tiled_conv_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    h_fu_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    h_fu_236 <= ap_const_lv6_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    h_fu_236 <= select_ln41_5_fu_1903_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten71_fu_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten71_fu_244 <= ap_const_lv11_0;
            elsif (((icmp_ln41_reg_2283 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                indvar_flatten71_fu_244 <= add_ln41_1_reg_2287;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_fu_232 <= ap_const_lv8_0;
            elsif (((icmp_ln41_reg_2283 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                indvar_flatten_fu_232 <= select_ln44_3_fu_1872_p3;
            end if; 
        end if;
    end process;

    kernel_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                kernel_fu_220 <= ap_const_lv3_0;
            elsif (((icmp_ln41_reg_2283 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                kernel_fu_220 <= add_ln47_fu_1861_p2;
            end if; 
        end if;
    end process;

    oh_fu_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                oh_fu_240 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                oh_fu_240 <= select_ln41_2_fu_2012_p3;
            end if; 
        end if;
    end process;

    ow_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ow_fu_228 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ow_fu_228 <= select_ln44_1_fu_2025_p3;
            end if; 
        end if;
    end process;

    reg_985_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                reg_985 <= W_buf_6_q0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln41_reg_2283 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                reg_985 <= W_buf_6_q2;
            end if; 
        end if;
    end process;

    w_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                w_fu_224 <= ap_const_lv6_0;
            elsif (((icmp_ln41_reg_2283 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                w_fu_224 <= select_ln44_2_fu_1237_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                Y_buf_0_addr_reg_2712 <= p_cast_fu_2138_p1(9 - 1 downto 0);
                Y_buf_1_addr_reg_2717 <= p_cast_fu_2138_p1(9 - 1 downto 0);
                Y_buf_2_addr_reg_2722 <= p_cast_fu_2138_p1(9 - 1 downto 0);
                Y_buf_3_addr_reg_2727 <= p_cast_fu_2138_p1(9 - 1 downto 0);
                add_ln41_1_reg_2287 <= add_ln41_1_fu_1042_p2;
                add_ln859_6_reg_2737 <= add_ln859_6_fu_2179_p2;
                and_ln41_reg_2302_pp0_iter1_reg <= and_ln41_reg_2302;
                icmp_ln41_reg_2283 <= icmp_ln41_fu_1036_p2;
                icmp_ln44_reg_2292_pp0_iter1_reg <= icmp_ln44_reg_2292;
                mul_ln864_1_reg_2646 <= mul_ln864_1_fu_2198_p2;
                mul_ln864_2_reg_2651 <= mul_ln864_2_fu_2204_p2;
                mul_ln864_reg_2641 <= mul_ln864_fu_2192_p2;
                rhs_reg_2328_pp0_iter1_reg <= rhs_reg_2328;
                rhs_reg_2328_pp0_iter2_reg <= rhs_reg_2328_pp0_iter1_reg;
                sub_ln1466_reg_2732 <= sub_ln1466_fu_2173_p2;
                trunc_ln51_reg_2324_pp0_iter1_reg <= trunc_ln51_reg_2324;
                trunc_ln51_reg_2324_pp0_iter2_reg <= trunc_ln51_reg_2324_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                add_ln859_4_reg_2707 <= add_ln859_4_fu_2089_p2;
                add_ln859_reg_2702 <= add_ln859_fu_2074_p2;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                mul_ln864_3_reg_2697 <= mul_ln864_3_fu_2228_p2;
                select_ln41_2_reg_2686 <= select_ln41_2_fu_2012_p3;
                select_ln44_1_reg_2692 <= select_ln44_1_fu_2025_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_fu_1036_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln41_reg_2302 <= and_ln41_fu_1069_p2;
                icmp_ln44_reg_2292 <= icmp_ln44_fu_1051_p2;
                mul_ln1319_reg_2313 <= mul_ln1319_fu_1093_p2;
                rhs_reg_2328 <= rhs_fu_1103_p6;
                select_ln44_reg_2308 <= select_ln44_fu_1081_p3;
                trunc_ln51_reg_2324 <= trunc_ln51_fu_1099_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln41_reg_2283 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                h_load_reg_2334 <= h_fu_236;
                select_ln41_1_reg_2340 <= select_ln41_1_fu_1123_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul_ln1317_reg_2671 <= mul_ln1317_fu_2210_p2;
                mul_ln864_4_reg_2676 <= mul_ln864_4_fu_2216_p2;
                mul_ln864_5_reg_2681 <= mul_ln864_5_fu_2222_p2;
                trunc_ln3_reg_2656 <= mul_ln864_reg_2641(28 downto 13);
                trunc_ln864_1_reg_2661 <= mul_ln864_1_reg_2646(28 downto 13);
                trunc_ln864_2_reg_2666 <= mul_ln864_2_reg_2651(28 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln41_reg_2283 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_990 <= W_buf_6_q1;
                reg_994 <= W_buf_6_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln41_reg_2283 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_1_reg_2606 <= tmp_1_fu_1357_p41;
                tmp_2_reg_2611 <= tmp_2_fu_1441_p41;
                tmp_3_reg_2616 <= tmp_3_fu_1525_p41;
                tmp_4_reg_2621 <= tmp_4_fu_1609_p41;
                tmp_5_reg_2626 <= tmp_5_fu_1693_p41;
                tmp_6_reg_2631 <= tmp_6_fu_1777_p41;
                tmp_reg_2601 <= tmp_fu_1273_p41;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_block_pp0_stage1_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    W_buf_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln1319_3_fu_1227_p1, ap_block_pp0_stage2, zext_ln1319_7_fu_1268_p1, zext_ln1319_5_fu_1914_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            W_buf_6_address0 <= zext_ln1319_5_fu_1914_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            W_buf_6_address0 <= zext_ln1319_7_fu_1268_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            W_buf_6_address0 <= zext_ln1319_3_fu_1227_p1(7 - 1 downto 0);
        else 
            W_buf_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_buf_6_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln1319_2_fu_1217_p1, ap_block_pp0_stage2, zext_ln1319_6_fu_1258_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                W_buf_6_address1 <= zext_ln1319_6_fu_1258_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                W_buf_6_address1 <= zext_ln1319_2_fu_1217_p1(7 - 1 downto 0);
            else 
                W_buf_6_address1 <= "XXXXXXX";
            end if;
        else 
            W_buf_6_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_buf_6_address2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln1319_1_fu_1207_p1, zext_ln1319_4_fu_1248_p1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                W_buf_6_address2 <= zext_ln1319_4_fu_1248_p1(7 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                W_buf_6_address2 <= zext_ln1319_1_fu_1207_p1(7 - 1 downto 0);
            else 
                W_buf_6_address2 <= "XXXXXXX";
            end if;
        else 
            W_buf_6_address2 <= "XXXXXXX";
        end if; 
    end process;


    W_buf_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            W_buf_6_ce0 <= ap_const_logic_1;
        else 
            W_buf_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf_6_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            W_buf_6_ce1 <= ap_const_logic_1;
        else 
            W_buf_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf_6_ce2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            W_buf_6_ce2 <= ap_const_logic_1;
        else 
            W_buf_6_ce2 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_0_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_0_ce0 <= ap_const_logic_1;
        else 
            X_buf_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_10_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_10_ce0 <= ap_const_logic_1;
        else 
            X_buf_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_11_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_11_ce0 <= ap_const_logic_1;
        else 
            X_buf_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_12_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_12_ce0 <= ap_const_logic_1;
        else 
            X_buf_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_13_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_13_ce0 <= ap_const_logic_1;
        else 
            X_buf_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_14_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_14_ce0 <= ap_const_logic_1;
        else 
            X_buf_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_15_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_15_ce0 <= ap_const_logic_1;
        else 
            X_buf_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_16_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_16_ce0 <= ap_const_logic_1;
        else 
            X_buf_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_17_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_17_ce0 <= ap_const_logic_1;
        else 
            X_buf_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_18_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_18_ce0 <= ap_const_logic_1;
        else 
            X_buf_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_19_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_19_ce0 <= ap_const_logic_1;
        else 
            X_buf_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_1_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_1_ce0 <= ap_const_logic_1;
        else 
            X_buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_20_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_20_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_20_ce0 <= ap_const_logic_1;
        else 
            X_buf_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_21_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_21_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_21_ce0 <= ap_const_logic_1;
        else 
            X_buf_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_22_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_22_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_22_ce0 <= ap_const_logic_1;
        else 
            X_buf_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_23_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_23_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_23_ce0 <= ap_const_logic_1;
        else 
            X_buf_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_24_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_24_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_24_ce0 <= ap_const_logic_1;
        else 
            X_buf_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_25_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_25_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_25_ce0 <= ap_const_logic_1;
        else 
            X_buf_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_26_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_26_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_26_ce0 <= ap_const_logic_1;
        else 
            X_buf_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_27_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_27_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_27_ce0 <= ap_const_logic_1;
        else 
            X_buf_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_28_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_28_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_28_ce0 <= ap_const_logic_1;
        else 
            X_buf_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_29_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_29_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_29_ce0 <= ap_const_logic_1;
        else 
            X_buf_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_2_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_2_ce0 <= ap_const_logic_1;
        else 
            X_buf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_30_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_30_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_30_ce0 <= ap_const_logic_1;
        else 
            X_buf_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_31_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_31_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_31_ce0 <= ap_const_logic_1;
        else 
            X_buf_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_32_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_32_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_32_ce0 <= ap_const_logic_1;
        else 
            X_buf_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_33_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_33_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_33_ce0 <= ap_const_logic_1;
        else 
            X_buf_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_34_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_34_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_34_ce0 <= ap_const_logic_1;
        else 
            X_buf_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_35_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_35_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_35_ce0 <= ap_const_logic_1;
        else 
            X_buf_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_36_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_36_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_36_ce0 <= ap_const_logic_1;
        else 
            X_buf_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_37_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_37_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_37_ce0 <= ap_const_logic_1;
        else 
            X_buf_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_38_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_38_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_38_ce0 <= ap_const_logic_1;
        else 
            X_buf_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_39_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_39_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_39_ce0 <= ap_const_logic_1;
        else 
            X_buf_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_3_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_3_ce0 <= ap_const_logic_1;
        else 
            X_buf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_40_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_40_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_40_ce0 <= ap_const_logic_1;
        else 
            X_buf_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_41_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_41_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_41_ce0 <= ap_const_logic_1;
        else 
            X_buf_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_42_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_42_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_42_ce0 <= ap_const_logic_1;
        else 
            X_buf_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_43_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_43_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_43_ce0 <= ap_const_logic_1;
        else 
            X_buf_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_44_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_44_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_44_ce0 <= ap_const_logic_1;
        else 
            X_buf_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_4_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_4_ce0 <= ap_const_logic_1;
        else 
            X_buf_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_5_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_5_ce0 <= ap_const_logic_1;
        else 
            X_buf_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_6_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_6_ce0 <= ap_const_logic_1;
        else 
            X_buf_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_7_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_7_ce0 <= ap_const_logic_1;
        else 
            X_buf_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_8_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_8_ce0 <= ap_const_logic_1;
        else 
            X_buf_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    X_buf_9_address0 <= zext_ln1317_fu_1153_p1(8 - 1 downto 0);

    X_buf_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_9_ce0 <= ap_const_logic_1;
        else 
            X_buf_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Y_buf_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, Y_buf_0_addr_reg_2712, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0, p_cast_fu_2138_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Y_buf_0_address0 <= Y_buf_0_addr_reg_2712;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Y_buf_0_address0 <= p_cast_fu_2138_p1(9 - 1 downto 0);
        else 
            Y_buf_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    Y_buf_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            Y_buf_0_ce0 <= ap_const_logic_1;
        else 
            Y_buf_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Y_buf_0_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, add_ln859_6_reg_2737, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0, lhs_fu_2160_p2)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Y_buf_0_d0 <= add_ln859_6_reg_2737;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Y_buf_0_d0 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Y_buf_0_d0 <= lhs_fu_2160_p2;
            else 
                Y_buf_0_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            Y_buf_0_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Y_buf_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, trunc_ln51_reg_2324_pp0_iter1_reg, trunc_ln51_reg_2324_pp0_iter2_reg, icmp_ln1466_fu_2187_p2)
    begin
        if ((((icmp_ln1466_fu_2187_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln51_reg_2324_pp0_iter2_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln51_reg_2324_pp0_iter1_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (trunc_ln51_reg_2324_pp0_iter2_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            Y_buf_0_we0 <= ap_const_logic_1;
        else 
            Y_buf_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Y_buf_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, Y_buf_1_addr_reg_2717, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0, p_cast_fu_2138_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Y_buf_1_address0 <= Y_buf_1_addr_reg_2717;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Y_buf_1_address0 <= p_cast_fu_2138_p1(9 - 1 downto 0);
        else 
            Y_buf_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    Y_buf_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            Y_buf_1_ce0 <= ap_const_logic_1;
        else 
            Y_buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Y_buf_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, add_ln859_6_reg_2737, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0, lhs_fu_2160_p2)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Y_buf_1_d0 <= add_ln859_6_reg_2737;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Y_buf_1_d0 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Y_buf_1_d0 <= lhs_fu_2160_p2;
            else 
                Y_buf_1_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            Y_buf_1_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Y_buf_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, trunc_ln51_reg_2324_pp0_iter1_reg, trunc_ln51_reg_2324_pp0_iter2_reg, icmp_ln1466_fu_2187_p2)
    begin
        if ((((icmp_ln1466_fu_2187_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln51_reg_2324_pp0_iter2_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln51_reg_2324_pp0_iter1_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (trunc_ln51_reg_2324_pp0_iter2_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            Y_buf_1_we0 <= ap_const_logic_1;
        else 
            Y_buf_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Y_buf_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, Y_buf_2_addr_reg_2722, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0, p_cast_fu_2138_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Y_buf_2_address0 <= Y_buf_2_addr_reg_2722;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Y_buf_2_address0 <= p_cast_fu_2138_p1(9 - 1 downto 0);
        else 
            Y_buf_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    Y_buf_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            Y_buf_2_ce0 <= ap_const_logic_1;
        else 
            Y_buf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Y_buf_2_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, add_ln859_6_reg_2737, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0, lhs_fu_2160_p2)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Y_buf_2_d0 <= add_ln859_6_reg_2737;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Y_buf_2_d0 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Y_buf_2_d0 <= lhs_fu_2160_p2;
            else 
                Y_buf_2_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            Y_buf_2_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Y_buf_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, trunc_ln51_reg_2324_pp0_iter1_reg, trunc_ln51_reg_2324_pp0_iter2_reg, icmp_ln1466_fu_2187_p2)
    begin
        if ((((icmp_ln1466_fu_2187_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln51_reg_2324_pp0_iter2_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln51_reg_2324_pp0_iter1_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (trunc_ln51_reg_2324_pp0_iter2_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            Y_buf_2_we0 <= ap_const_logic_1;
        else 
            Y_buf_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Y_buf_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, Y_buf_3_addr_reg_2727, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0, p_cast_fu_2138_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Y_buf_3_address0 <= Y_buf_3_addr_reg_2727;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Y_buf_3_address0 <= p_cast_fu_2138_p1(9 - 1 downto 0);
        else 
            Y_buf_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    Y_buf_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            Y_buf_3_ce0 <= ap_const_logic_1;
        else 
            Y_buf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Y_buf_3_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, add_ln859_6_reg_2737, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0, lhs_fu_2160_p2)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Y_buf_3_d0 <= add_ln859_6_reg_2737;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Y_buf_3_d0 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Y_buf_3_d0 <= lhs_fu_2160_p2;
            else 
                Y_buf_3_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            Y_buf_3_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Y_buf_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, trunc_ln51_reg_2324_pp0_iter1_reg, trunc_ln51_reg_2324_pp0_iter2_reg, icmp_ln1466_fu_2187_p2)
    begin
        if ((((icmp_ln1466_fu_2187_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln51_reg_2324_pp0_iter2_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln51_reg_2324_pp0_iter1_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (trunc_ln51_reg_2324_pp0_iter2_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            Y_buf_3_we0 <= ap_const_logic_1;
        else 
            Y_buf_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1319_1_fu_1212_p2 <= std_logic_vector(unsigned(mul_ln1319_reg_2313) + unsigned(ap_const_lv7_F));
    add_ln1319_2_fu_1222_p2 <= std_logic_vector(unsigned(mul_ln1319_reg_2313) + unsigned(ap_const_lv7_10));
    add_ln1319_3_fu_1243_p2 <= std_logic_vector(unsigned(mul_ln1319_reg_2313) + unsigned(ap_const_lv7_11));
    add_ln1319_4_fu_1909_p2 <= std_logic_vector(unsigned(mul_ln1319_reg_2313) + unsigned(ap_const_lv7_12));
    add_ln1319_5_fu_1253_p2 <= std_logic_vector(unsigned(mul_ln1319_reg_2313) + unsigned(ap_const_lv7_13));
    add_ln1319_6_fu_1263_p2 <= std_logic_vector(unsigned(mul_ln1319_reg_2313) + unsigned(ap_const_lv7_14));
    add_ln1319_fu_1202_p2 <= std_logic_vector(unsigned(mul_ln1319_reg_2313) + unsigned(ap_const_lv7_E));
    add_ln41_1_fu_1042_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten71_load) + unsigned(ap_const_lv11_1));
    add_ln41_2_fu_1137_p2 <= std_logic_vector(unsigned(h_fu_236) + unsigned(select_ln41_4_fu_1130_p3));
    add_ln41_3_fu_1147_p2 <= std_logic_vector(unsigned(zext_ln41_fu_1143_p1) + unsigned(ap_const_lv8_68));
    add_ln41_fu_1999_p2 <= std_logic_vector(unsigned(oh_fu_240) + unsigned(ap_const_lv5_1));
    add_ln44_1_fu_1866_p2 <= std_logic_vector(unsigned(grp_load_fu_982_p1) + unsigned(ap_const_lv8_1));
    add_ln44_fu_2019_p2 <= std_logic_vector(unsigned(select_ln41_fu_2005_p3) + unsigned(ap_const_lv5_1));
    add_ln47_fu_1861_p2 <= std_logic_vector(unsigned(select_ln44_reg_2308) + unsigned(ap_const_lv3_1));
    add_ln859_1_fu_2155_p2 <= std_logic_vector(unsigned(add_ln859_reg_2702) + unsigned(trunc_ln864_3_fu_2146_p4));
    add_ln859_2_fu_2080_p2 <= std_logic_vector(unsigned(trunc_ln864_1_reg_2661) + unsigned(trunc_ln864_2_reg_2666));
    add_ln859_3_fu_2084_p2 <= std_logic_vector(unsigned(trunc_ln3_reg_2656) + unsigned(trunc_ln864_5_fu_2048_p4));
    add_ln859_4_fu_2089_p2 <= std_logic_vector(unsigned(add_ln859_3_fu_2084_p2) + unsigned(add_ln859_2_fu_2080_p2));
    add_ln859_6_fu_2179_p2 <= std_logic_vector(signed(rhs_reg_2328_pp0_iter1_reg) + signed(lhs_fu_2160_p2));
    add_ln859_fu_2074_p2 <= std_logic_vector(unsigned(trunc_ln864_4_fu_2039_p4) + unsigned(factor_fu_2066_p3));
    and_ln41_fu_1069_p2 <= (xor_ln41_fu_1057_p2 and icmp_ln47_fu_1063_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1455_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln41_fu_1036_p2, ap_block_pp0_stage0)
    begin
                ap_condition_1455 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln41_fu_1036_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_1460_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln41_reg_2283, icmp_ln44_reg_2292, ap_block_pp0_stage2)
    begin
                ap_condition_1460 <= ((icmp_ln41_reg_2283 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln44_reg_2292 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2));
    end process;


    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, icmp_ln41_reg_2283)
    begin
        if (((icmp_ln41_reg_2283 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten71_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten71_fu_244)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten71_load <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_indvar_flatten71_load <= indvar_flatten71_fu_244;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_232)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load_3 <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load_3 <= indvar_flatten_fu_232;
        end if; 
    end process;


    ap_sig_allocacmp_kernel_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, kernel_fu_220, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_kernel_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_kernel_load <= kernel_fu_220;
        end if; 
    end process;

    empty_66_fu_2123_p2 <= std_logic_vector(unsigned(tmp_s_fu_2105_p3) + unsigned(tmp_11_cast_fu_2119_p1));
    empty_67_fu_2132_p2 <= std_logic_vector(unsigned(empty_66_fu_2123_p2) + unsigned(select_ln44_1_cast_fu_2129_p1));
    factor_fu_2066_p3 <= (tmp_8_fu_2057_p4 & ap_const_lv1_0);

    grp_load_fu_982_p1_assign_proc : process(ap_enable_reg_pp0_iter0, indvar_flatten_fu_232, ap_sig_allocacmp_indvar_flatten_load_3, ap_condition_1455, ap_condition_1460)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_1460)) then 
                grp_load_fu_982_p1 <= indvar_flatten_fu_232;
            elsif ((ap_const_boolean_1 = ap_condition_1455)) then 
                grp_load_fu_982_p1 <= ap_sig_allocacmp_indvar_flatten_load_3;
            else 
                grp_load_fu_982_p1 <= "XXXXXXXX";
            end if;
        else 
            grp_load_fu_982_p1 <= "XXXXXXXX";
        end if; 
    end process;

    icmp_ln1466_fu_2187_p2 <= "1" when (sext_ln859_1_fu_2184_p1 = sub_ln1466_reg_2732) else "0";
    icmp_ln41_fu_1036_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten71_load = ap_const_lv11_730) else "0";
    icmp_ln44_fu_1051_p2 <= "1" when (grp_load_fu_982_p1 = ap_const_lv8_50) else "0";
    icmp_ln47_fu_1063_p2 <= "1" when (ap_sig_allocacmp_kernel_load = ap_const_lv3_4) else "0";
    indvars_iv_next295_fu_1232_p2 <= std_logic_vector(unsigned(select_ln41_1_reg_2340) + unsigned(ap_const_lv6_2));
    indvars_iv_next305_fu_1898_p2 <= std_logic_vector(unsigned(h_load_reg_2334) + unsigned(ap_const_lv6_2));
    lhs_fu_2160_p2 <= std_logic_vector(unsigned(add_ln859_4_reg_2707) + unsigned(add_ln859_1_fu_2155_p2));
    mul_ln1319_fu_1093_p0 <= mul_ln1319_fu_1093_p00(3 - 1 downto 0);
    mul_ln1319_fu_1093_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_fu_1081_p3),7));
    mul_ln1319_fu_1093_p1 <= ap_const_lv7_15(6 - 1 downto 0);
    or_ln44_fu_1075_p2 <= (icmp_ln44_fu_1051_p2 or and_ln41_fu_1069_p2);
    p_cast_fu_2138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_67_fu_2132_p2),64));
    select_ln41_1_fu_1123_p3 <= 
        ap_const_lv6_0 when (icmp_ln44_reg_2292(0) = '1') else 
        w_fu_224;
    select_ln41_2_fu_2012_p3 <= 
        add_ln41_fu_1999_p2 when (icmp_ln44_reg_2292_pp0_iter1_reg(0) = '1') else 
        oh_fu_240;
    select_ln41_4_fu_1130_p3 <= 
        ap_const_lv6_8 when (icmp_ln44_reg_2292(0) = '1') else 
        ap_const_lv6_6;
    select_ln41_5_fu_1903_p3 <= 
        indvars_iv_next305_fu_1898_p2 when (icmp_ln44_reg_2292(0) = '1') else 
        h_load_reg_2334;
    select_ln41_fu_2005_p3 <= 
        ap_const_lv5_0 when (icmp_ln44_reg_2292_pp0_iter1_reg(0) = '1') else 
        ow_fu_228;
    select_ln44_1_cast_fu_2129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_1_reg_2692),9));
    select_ln44_1_fu_2025_p3 <= 
        add_ln44_fu_2019_p2 when (and_ln41_reg_2302_pp0_iter1_reg(0) = '1') else 
        select_ln41_fu_2005_p3;
    select_ln44_2_fu_1237_p3 <= 
        indvars_iv_next295_fu_1232_p2 when (and_ln41_reg_2302(0) = '1') else 
        select_ln41_1_reg_2340;
    select_ln44_3_fu_1872_p3 <= 
        ap_const_lv8_1 when (icmp_ln44_reg_2292(0) = '1') else 
        add_ln44_1_fu_1866_p2;
    select_ln44_fu_1081_p3 <= 
        ap_const_lv3_0 when (or_ln44_fu_1075_p2(0) = '1') else 
        ap_sig_allocacmp_kernel_load;
        sext_ln859_1_fu_2184_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_reg_2328_pp0_iter2_reg),17));

        sext_ln859_fu_2169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_fu_2160_p2),17));

    sub_ln1466_fu_2173_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sext_ln859_fu_2169_p1));
    tmp_11_cast_fu_2119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_2112_p3),9));
    tmp_7_fu_2112_p3 <= (select_ln41_2_reg_2686 & ap_const_lv2_0);
    tmp_8_fu_2057_p4 <= mul_ln1317_reg_2671(27 downto 13);
    tmp_s_fu_2105_p3 <= (select_ln41_2_reg_2686 & ap_const_lv4_0);
    trunc_ln51_fu_1099_p1 <= select_ln44_fu_1081_p3(2 - 1 downto 0);
    trunc_ln864_3_fu_2146_p4 <= mul_ln864_3_reg_2697(28 downto 13);
    trunc_ln864_4_fu_2039_p4 <= mul_ln864_4_reg_2676(28 downto 13);
    trunc_ln864_5_fu_2048_p4 <= mul_ln864_5_reg_2681(28 downto 13);
    xor_ln41_fu_1057_p2 <= (icmp_ln44_fu_1051_p2 xor ap_const_lv1_1);
    zext_ln1317_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_3_fu_1147_p2),64));
    zext_ln1319_1_fu_1207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_fu_1202_p2),64));
    zext_ln1319_2_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_1_fu_1212_p2),64));
    zext_ln1319_3_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_2_fu_1222_p2),64));
    zext_ln1319_4_fu_1248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_3_fu_1243_p2),64));
    zext_ln1319_5_fu_1914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_4_fu_1909_p2),64));
    zext_ln1319_6_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_5_fu_1253_p2),64));
    zext_ln1319_7_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_6_fu_1263_p2),64));
    zext_ln41_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_2_fu_1137_p2),8));
end behav;
