// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tiled_conv_tiled_conv_Pipeline_CHANNEL_KERN_I (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_lcssa_lcssa_lcssa17,
        sub_ln1319,
        conv_wt_buf_V_address0,
        conv_wt_buf_V_ce0,
        conv_wt_buf_V_q0,
        conv_wt_buf_V_address1,
        conv_wt_buf_V_ce1,
        conv_wt_buf_V_q1,
        conv_wt_buf_V_address2,
        conv_wt_buf_V_ce2,
        conv_wt_buf_V_q2,
        conv_wt_buf_V_address3,
        conv_wt_buf_V_ce3,
        conv_wt_buf_V_q3,
        conv_wt_buf_V_address4,
        conv_wt_buf_V_ce4,
        conv_wt_buf_V_q4,
        conv_wt_buf_V_address5,
        conv_wt_buf_V_ce5,
        conv_wt_buf_V_q5,
        conv_wt_buf_V_address6,
        conv_wt_buf_V_ce6,
        conv_wt_buf_V_q6,
        select_ln31_1,
        conv_in_buf_V_address0,
        conv_in_buf_V_ce0,
        conv_in_buf_V_q0,
        zext_ln1317,
        zext_ln1317_1,
        zext_ln1317_2,
        zext_ln1317_3,
        zext_ln1317_4,
        zext_ln1317_5,
        zext_ln46,
        p_lcssa14_out,
        p_lcssa14_out_ap_vld,
        val_V_out,
        val_V_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [111:0] p_lcssa_lcssa_lcssa17;
input  [5:0] sub_ln1319;
output  [6:0] conv_wt_buf_V_address0;
output   conv_wt_buf_V_ce0;
input  [111:0] conv_wt_buf_V_q0;
output  [6:0] conv_wt_buf_V_address1;
output   conv_wt_buf_V_ce1;
input  [111:0] conv_wt_buf_V_q1;
output  [6:0] conv_wt_buf_V_address2;
output   conv_wt_buf_V_ce2;
input  [111:0] conv_wt_buf_V_q2;
output  [6:0] conv_wt_buf_V_address3;
output   conv_wt_buf_V_ce3;
input  [111:0] conv_wt_buf_V_q3;
output  [6:0] conv_wt_buf_V_address4;
output   conv_wt_buf_V_ce4;
input  [111:0] conv_wt_buf_V_q4;
output  [6:0] conv_wt_buf_V_address5;
output   conv_wt_buf_V_ce5;
input  [111:0] conv_wt_buf_V_q5;
output  [6:0] conv_wt_buf_V_address6;
output   conv_wt_buf_V_ce6;
input  [111:0] conv_wt_buf_V_q6;
input  [5:0] select_ln31_1;
output  [7:0] conv_in_buf_V_address0;
output   conv_in_buf_V_ce0;
input  [735:0] conv_in_buf_V_q0;
input  [9:0] zext_ln1317;
input  [9:0] zext_ln1317_1;
input  [9:0] zext_ln1317_2;
input  [9:0] zext_ln1317_3;
input  [9:0] zext_ln1317_4;
input  [9:0] zext_ln1317_5;
input  [9:0] zext_ln46;
output  [111:0] p_lcssa14_out;
output   p_lcssa14_out_ap_vld;
output  [15:0] val_V_out;
output   val_V_out_ap_vld;

reg ap_idle;
reg conv_wt_buf_V_ce0;
reg conv_wt_buf_V_ce1;
reg conv_wt_buf_V_ce2;
reg conv_wt_buf_V_ce3;
reg conv_wt_buf_V_ce4;
reg conv_wt_buf_V_ce5;
reg conv_wt_buf_V_ce6;
reg conv_in_buf_V_ce0;
reg p_lcssa14_out_ap_vld;
reg val_V_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln46_fu_355_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln46_reg_1025;
reg   [0:0] icmp_ln46_reg_1025_pp0_iter1_reg;
reg   [0:0] icmp_ln46_reg_1025_pp0_iter2_reg;
reg   [0:0] icmp_ln46_reg_1025_pp0_iter3_reg;
reg   [0:0] icmp_ln46_reg_1025_pp0_iter4_reg;
wire   [2:0] select_ln46_fu_382_p3;
reg   [2:0] select_ln46_reg_1029;
reg   [2:0] select_ln46_reg_1029_pp0_iter1_reg;
reg   [2:0] select_ln46_reg_1029_pp0_iter2_reg;
wire   [1:0] select_ln46_1_fu_412_p3;
reg   [1:0] select_ln46_1_reg_1035;
wire   [6:0] select_ln46_2_fu_420_p3;
reg   [6:0] select_ln46_2_reg_1040;
reg   [111:0] conv_wt_buf_V_load_reg_1091;
reg   [111:0] conv_wt_buf_V_load_1_reg_1096;
reg   [111:0] conv_wt_buf_V_load_2_reg_1101;
reg   [111:0] conv_wt_buf_V_load_3_reg_1106;
reg   [111:0] conv_wt_buf_V_load_4_reg_1111;
reg   [111:0] conv_wt_buf_V_load_5_reg_1116;
reg   [111:0] conv_wt_buf_V_load_6_reg_1121;
reg   [735:0] conv_in_buf_V_load_reg_1126;
wire   [15:0] trunc_ln1317_fu_547_p1;
reg  signed [15:0] trunc_ln1317_reg_1137;
wire   [15:0] trunc_ln1319_fu_560_p1;
reg  signed [15:0] trunc_ln1319_reg_1142;
wire   [15:0] trunc_ln1317_1_fu_572_p1;
reg  signed [15:0] trunc_ln1317_1_reg_1147;
wire   [15:0] trunc_ln1319_1_fu_585_p1;
reg  signed [15:0] trunc_ln1319_1_reg_1152;
wire   [15:0] trunc_ln1317_2_fu_597_p1;
reg  signed [15:0] trunc_ln1317_2_reg_1157;
wire   [15:0] trunc_ln1319_2_fu_610_p1;
reg  signed [15:0] trunc_ln1319_2_reg_1162;
wire   [15:0] trunc_ln1317_3_fu_622_p1;
reg  signed [15:0] trunc_ln1317_3_reg_1167;
wire   [15:0] trunc_ln1319_3_fu_635_p1;
reg  signed [15:0] trunc_ln1319_3_reg_1172;
wire   [15:0] trunc_ln1317_4_fu_647_p1;
reg  signed [15:0] trunc_ln1317_4_reg_1177;
wire   [15:0] trunc_ln1319_4_fu_660_p1;
reg  signed [15:0] trunc_ln1319_4_reg_1182;
wire   [15:0] trunc_ln1317_5_fu_672_p1;
reg  signed [15:0] trunc_ln1317_5_reg_1187;
wire   [15:0] trunc_ln1319_5_fu_685_p1;
reg  signed [15:0] trunc_ln1319_5_reg_1192;
wire   [15:0] trunc_ln1317_6_fu_697_p1;
reg  signed [15:0] trunc_ln1317_6_reg_1197;
wire   [15:0] trunc_ln1319_6_fu_710_p1;
reg  signed [15:0] trunc_ln1319_6_reg_1202;
wire  signed [28:0] mul_ln864_fu_907_p2;
reg  signed [28:0] mul_ln864_reg_1207;
wire  signed [28:0] mul_ln864_1_fu_913_p2;
reg  signed [28:0] mul_ln864_1_reg_1212;
wire  signed [28:0] mul_ln864_2_fu_919_p2;
reg  signed [28:0] mul_ln864_2_reg_1217;
wire  signed [28:0] mul_ln864_3_fu_925_p2;
reg  signed [28:0] mul_ln864_3_reg_1222;
wire  signed [28:0] mul_ln864_4_fu_931_p2;
reg  signed [28:0] mul_ln864_4_reg_1227;
wire  signed [28:0] mul_ln864_5_fu_937_p2;
reg  signed [28:0] mul_ln864_5_reg_1232;
wire  signed [28:0] mul_ln864_6_fu_943_p2;
reg  signed [28:0] mul_ln864_6_reg_1237;
wire   [15:0] add_ln859_1_fu_843_p2;
reg   [15:0] add_ln859_1_reg_1242;
wire   [15:0] add_ln859_4_fu_861_p2;
reg   [15:0] add_ln859_4_reg_1247;
wire   [63:0] zext_ln1319_2_fu_452_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1319_3_fu_461_p1;
wire   [63:0] zext_ln1319_4_fu_471_p1;
wire   [63:0] zext_ln1319_5_fu_481_p1;
wire   [63:0] zext_ln1319_6_fu_491_p1;
wire   [63:0] zext_ln1319_7_fu_501_p1;
wire   [63:0] zext_ln1319_8_fu_511_p1;
wire   [63:0] p_cast1_fu_528_p1;
reg   [15:0] val_V_fu_106;
wire   [15:0] add_ln859_6_fu_879_p2;
wire    ap_loop_init;
reg   [2:0] i_fu_110;
wire   [2:0] add_ln52_fu_428_p2;
reg   [2:0] ap_sig_allocacmp_i_load;
reg   [111:0] p_lcssa14_fu_114;
wire   [111:0] tmp_6_6_fu_819_p8;
reg   [1:0] chan_fu_118;
reg   [1:0] ap_sig_allocacmp_chan_1;
reg   [4:0] indvar_flatten249_fu_122;
wire   [4:0] add_ln46_7_fu_361_p2;
reg   [4:0] ap_sig_allocacmp_indvar_flatten249_load;
wire    ap_block_pp0_stage0_01001;
wire  signed [6:0] sub_ln1319_cast_fu_298_p1;
wire   [6:0] zext_ln1319_fu_333_p1;
wire   [6:0] add_ln1319_fu_337_p2;
wire   [6:0] shl_ln1319_fu_343_p2;
wire   [0:0] icmp_ln52_fu_376_p2;
wire   [1:0] add_ln46_fu_370_p2;
wire   [6:0] zext_ln1319_1_fu_390_p1;
wire   [6:0] add_ln1319_1_fu_394_p2;
wire   [6:0] shl_ln1319_1_fu_400_p2;
wire   [6:0] sub_ln1319_2_fu_406_p2;
wire   [6:0] sub_ln1319_1_fu_349_p2;
wire   [6:0] add_ln46_1_fu_456_p2;
wire   [6:0] add_ln46_2_fu_466_p2;
wire   [6:0] add_ln46_3_fu_476_p2;
wire   [6:0] add_ln46_4_fu_486_p2;
wire   [6:0] add_ln46_5_fu_496_p2;
wire   [6:0] add_ln46_6_fu_506_p2;
wire   [5:0] i_1_cast_fu_516_p1;
wire   [5:0] empty_40_fu_519_p2;
wire   [7:0] grp_fu_898_p3;
wire   [735:0] zext_ln1317_6_fu_539_p1;
wire   [735:0] lshr_ln1317_fu_542_p2;
wire   [6:0] tmp_s_fu_532_p3;
wire   [111:0] zext_ln1319_9_fu_551_p1;
wire   [111:0] lshr_ln1319_fu_555_p2;
wire   [735:0] zext_ln1317_7_fu_564_p1;
wire   [735:0] lshr_ln1317_1_fu_567_p2;
wire   [111:0] zext_ln1319_10_fu_576_p1;
wire   [111:0] lshr_ln1319_1_fu_580_p2;
wire   [735:0] zext_ln1317_8_fu_589_p1;
wire   [735:0] lshr_ln1317_2_fu_592_p2;
wire   [111:0] zext_ln1319_11_fu_601_p1;
wire   [111:0] lshr_ln1319_2_fu_605_p2;
wire   [735:0] zext_ln1317_9_fu_614_p1;
wire   [735:0] lshr_ln1317_3_fu_617_p2;
wire   [111:0] zext_ln1319_12_fu_626_p1;
wire   [111:0] lshr_ln1319_3_fu_630_p2;
wire   [735:0] zext_ln1317_10_fu_639_p1;
wire   [735:0] lshr_ln1317_4_fu_642_p2;
wire   [111:0] zext_ln1319_13_fu_651_p1;
wire   [111:0] lshr_ln1319_4_fu_655_p2;
wire   [735:0] zext_ln1317_11_fu_664_p1;
wire   [735:0] lshr_ln1317_5_fu_667_p2;
wire   [111:0] zext_ln1319_14_fu_676_p1;
wire   [111:0] lshr_ln1319_5_fu_680_p2;
wire   [735:0] zext_ln1317_12_fu_689_p1;
wire   [735:0] lshr_ln1317_6_fu_692_p2;
wire   [111:0] zext_ln1319_15_fu_701_p1;
wire   [111:0] lshr_ln1319_6_fu_705_p2;
wire   [15:0] trunc_ln864_6_fu_810_p4;
wire   [15:0] trunc_ln864_5_fu_801_p4;
wire   [15:0] trunc_ln864_4_fu_792_p4;
wire   [15:0] trunc_ln864_3_fu_783_p4;
wire   [15:0] trunc_ln864_2_fu_774_p4;
wire   [15:0] trunc_ln864_1_fu_765_p4;
wire   [15:0] trunc_ln4_fu_756_p4;
wire   [15:0] add_ln859_fu_837_p2;
wire   [15:0] add_ln859_2_fu_849_p2;
wire   [15:0] add_ln859_3_fu_855_p2;
wire   [15:0] add_ln859_5_fu_875_p2;
wire   [1:0] grp_fu_898_p0;
wire   [5:0] grp_fu_898_p1;
wire   [5:0] grp_fu_898_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [7:0] grp_fu_898_p00;
wire   [7:0] grp_fu_898_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_done_reg = 1'b0;
end

tiled_conv_mac_muladd_2ns_6ns_6ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
mac_muladd_2ns_6ns_6ns_8_1_1_U33(
    .din0(grp_fu_898_p0),
    .din1(grp_fu_898_p1),
    .din2(grp_fu_898_p2),
    .dout(grp_fu_898_p3)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U34(
    .din0(trunc_ln1319_reg_1142),
    .din1(trunc_ln1317_reg_1137),
    .dout(mul_ln864_fu_907_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U35(
    .din0(trunc_ln1319_1_reg_1152),
    .din1(trunc_ln1317_1_reg_1147),
    .dout(mul_ln864_1_fu_913_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U36(
    .din0(trunc_ln1319_2_reg_1162),
    .din1(trunc_ln1317_2_reg_1157),
    .dout(mul_ln864_2_fu_919_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U37(
    .din0(trunc_ln1319_3_reg_1172),
    .din1(trunc_ln1317_3_reg_1167),
    .dout(mul_ln864_3_fu_925_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U38(
    .din0(trunc_ln1319_4_reg_1182),
    .din1(trunc_ln1317_4_reg_1177),
    .dout(mul_ln864_4_fu_931_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U39(
    .din0(trunc_ln1319_5_reg_1192),
    .din1(trunc_ln1317_5_reg_1187),
    .dout(mul_ln864_5_fu_937_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U40(
    .din0(trunc_ln1319_6_reg_1202),
    .din1(trunc_ln1317_6_reg_1197),
    .dout(mul_ln864_6_fu_943_p2)
);

tiled_conv_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln46_fu_355_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            chan_fu_118 <= select_ln46_1_fu_412_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            chan_fu_118 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln46_fu_355_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_110 <= add_ln52_fu_428_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_110 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln46_fu_355_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten249_fu_122 <= add_ln46_7_fu_361_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten249_fu_122 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_lcssa14_fu_114 <= p_lcssa_lcssa_lcssa17;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            p_lcssa14_fu_114 <= tmp_6_6_fu_819_p8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            val_V_fu_106 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
            val_V_fu_106 <= add_ln859_6_fu_879_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln859_1_reg_1242 <= add_ln859_1_fu_843_p2;
        add_ln859_4_reg_1247 <= add_ln859_4_fu_861_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        conv_in_buf_V_load_reg_1126 <= conv_in_buf_V_q0;
        icmp_ln46_reg_1025_pp0_iter2_reg <= icmp_ln46_reg_1025_pp0_iter1_reg;
        icmp_ln46_reg_1025_pp0_iter3_reg <= icmp_ln46_reg_1025_pp0_iter2_reg;
        icmp_ln46_reg_1025_pp0_iter4_reg <= icmp_ln46_reg_1025_pp0_iter3_reg;
        mul_ln864_1_reg_1212 <= mul_ln864_1_fu_913_p2;
        mul_ln864_2_reg_1217 <= mul_ln864_2_fu_919_p2;
        mul_ln864_3_reg_1222 <= mul_ln864_3_fu_925_p2;
        mul_ln864_4_reg_1227 <= mul_ln864_4_fu_931_p2;
        mul_ln864_5_reg_1232 <= mul_ln864_5_fu_937_p2;
        mul_ln864_6_reg_1237 <= mul_ln864_6_fu_943_p2;
        mul_ln864_reg_1207 <= mul_ln864_fu_907_p2;
        select_ln46_reg_1029_pp0_iter2_reg <= select_ln46_reg_1029_pp0_iter1_reg;
        trunc_ln1317_1_reg_1147 <= trunc_ln1317_1_fu_572_p1;
        trunc_ln1317_2_reg_1157 <= trunc_ln1317_2_fu_597_p1;
        trunc_ln1317_3_reg_1167 <= trunc_ln1317_3_fu_622_p1;
        trunc_ln1317_4_reg_1177 <= trunc_ln1317_4_fu_647_p1;
        trunc_ln1317_5_reg_1187 <= trunc_ln1317_5_fu_672_p1;
        trunc_ln1317_6_reg_1197 <= trunc_ln1317_6_fu_697_p1;
        trunc_ln1317_reg_1137 <= trunc_ln1317_fu_547_p1;
        trunc_ln1319_1_reg_1152 <= trunc_ln1319_1_fu_585_p1;
        trunc_ln1319_2_reg_1162 <= trunc_ln1319_2_fu_610_p1;
        trunc_ln1319_3_reg_1172 <= trunc_ln1319_3_fu_635_p1;
        trunc_ln1319_4_reg_1182 <= trunc_ln1319_4_fu_660_p1;
        trunc_ln1319_5_reg_1192 <= trunc_ln1319_5_fu_685_p1;
        trunc_ln1319_6_reg_1202 <= trunc_ln1319_6_fu_710_p1;
        trunc_ln1319_reg_1142 <= trunc_ln1319_fu_560_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln46_reg_1025 <= icmp_ln46_fu_355_p2;
        icmp_ln46_reg_1025_pp0_iter1_reg <= icmp_ln46_reg_1025;
        select_ln46_reg_1029_pp0_iter1_reg <= select_ln46_reg_1029;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_wt_buf_V_load_1_reg_1096 <= conv_wt_buf_V_q5;
        conv_wt_buf_V_load_2_reg_1101 <= conv_wt_buf_V_q4;
        conv_wt_buf_V_load_3_reg_1106 <= conv_wt_buf_V_q3;
        conv_wt_buf_V_load_4_reg_1111 <= conv_wt_buf_V_q2;
        conv_wt_buf_V_load_5_reg_1116 <= conv_wt_buf_V_q1;
        conv_wt_buf_V_load_6_reg_1121 <= conv_wt_buf_V_q0;
        conv_wt_buf_V_load_reg_1091 <= conv_wt_buf_V_q6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_fu_355_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln46_1_reg_1035 <= select_ln46_1_fu_412_p3;
        select_ln46_2_reg_1040 <= select_ln46_2_fu_420_p3;
        select_ln46_reg_1029 <= select_ln46_fu_382_p3;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_355_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_chan_1 = 2'd0;
    end else begin
        ap_sig_allocacmp_chan_1 = chan_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten249_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten249_load = indvar_flatten249_fu_122;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_in_buf_V_ce0 = 1'b1;
    end else begin
        conv_in_buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_wt_buf_V_ce0 = 1'b1;
    end else begin
        conv_wt_buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_wt_buf_V_ce1 = 1'b1;
    end else begin
        conv_wt_buf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_wt_buf_V_ce2 = 1'b1;
    end else begin
        conv_wt_buf_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_wt_buf_V_ce3 = 1'b1;
    end else begin
        conv_wt_buf_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_wt_buf_V_ce4 = 1'b1;
    end else begin
        conv_wt_buf_V_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_wt_buf_V_ce5 = 1'b1;
    end else begin
        conv_wt_buf_V_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_wt_buf_V_ce6 = 1'b1;
    end else begin
        conv_wt_buf_V_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln46_reg_1025_pp0_iter4_reg == 1'd1))) begin
        p_lcssa14_out_ap_vld = 1'b1;
    end else begin
        p_lcssa14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln46_reg_1025_pp0_iter4_reg == 1'd1))) begin
        val_V_out_ap_vld = 1'b1;
    end else begin
        val_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1319_1_fu_394_p2 = ($signed(sub_ln1319_cast_fu_298_p1) + $signed(zext_ln1319_1_fu_390_p1));

assign add_ln1319_fu_337_p2 = ($signed(sub_ln1319_cast_fu_298_p1) + $signed(zext_ln1319_fu_333_p1));

assign add_ln46_1_fu_456_p2 = (select_ln46_2_reg_1040 + 7'd1);

assign add_ln46_2_fu_466_p2 = (select_ln46_2_reg_1040 + 7'd2);

assign add_ln46_3_fu_476_p2 = (select_ln46_2_reg_1040 + 7'd3);

assign add_ln46_4_fu_486_p2 = (select_ln46_2_reg_1040 + 7'd4);

assign add_ln46_5_fu_496_p2 = (select_ln46_2_reg_1040 + 7'd5);

assign add_ln46_6_fu_506_p2 = (select_ln46_2_reg_1040 + 7'd6);

assign add_ln46_7_fu_361_p2 = (ap_sig_allocacmp_indvar_flatten249_load + 5'd1);

assign add_ln46_fu_370_p2 = (ap_sig_allocacmp_chan_1 + 2'd1);

assign add_ln52_fu_428_p2 = (select_ln46_fu_382_p3 + 3'd1);

assign add_ln859_1_fu_843_p2 = (add_ln859_fu_837_p2 + trunc_ln4_fu_756_p4);

assign add_ln859_2_fu_849_p2 = (trunc_ln864_4_fu_792_p4 + trunc_ln864_3_fu_783_p4);

assign add_ln859_3_fu_855_p2 = (add_ln859_2_fu_849_p2 + trunc_ln864_5_fu_801_p4);

assign add_ln859_4_fu_861_p2 = (add_ln859_3_fu_855_p2 + trunc_ln864_6_fu_810_p4);

assign add_ln859_5_fu_875_p2 = (add_ln859_4_reg_1247 + add_ln859_1_reg_1242);

assign add_ln859_6_fu_879_p2 = (add_ln859_5_fu_875_p2 + val_V_fu_106);

assign add_ln859_fu_837_p2 = (trunc_ln864_1_fu_765_p4 + trunc_ln864_2_fu_774_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv_in_buf_V_address0 = p_cast1_fu_528_p1;

assign conv_wt_buf_V_address0 = zext_ln1319_8_fu_511_p1;

assign conv_wt_buf_V_address1 = zext_ln1319_7_fu_501_p1;

assign conv_wt_buf_V_address2 = zext_ln1319_6_fu_491_p1;

assign conv_wt_buf_V_address3 = zext_ln1319_5_fu_481_p1;

assign conv_wt_buf_V_address4 = zext_ln1319_4_fu_471_p1;

assign conv_wt_buf_V_address5 = zext_ln1319_3_fu_461_p1;

assign conv_wt_buf_V_address6 = zext_ln1319_2_fu_452_p1;

assign empty_40_fu_519_p2 = (i_1_cast_fu_516_p1 + select_ln31_1);

assign grp_fu_898_p0 = grp_fu_898_p00;

assign grp_fu_898_p00 = select_ln46_1_reg_1035;

assign grp_fu_898_p1 = 8'd52;

assign grp_fu_898_p2 = grp_fu_898_p20;

assign grp_fu_898_p20 = empty_40_fu_519_p2;

assign i_1_cast_fu_516_p1 = select_ln46_reg_1029;

assign icmp_ln46_fu_355_p2 = ((ap_sig_allocacmp_indvar_flatten249_load == 5'd21) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_376_p2 = ((ap_sig_allocacmp_i_load == 3'd7) ? 1'b1 : 1'b0);

assign lshr_ln1317_1_fu_567_p2 = conv_in_buf_V_load_reg_1126 >> zext_ln1317_7_fu_564_p1;

assign lshr_ln1317_2_fu_592_p2 = conv_in_buf_V_load_reg_1126 >> zext_ln1317_8_fu_589_p1;

assign lshr_ln1317_3_fu_617_p2 = conv_in_buf_V_load_reg_1126 >> zext_ln1317_9_fu_614_p1;

assign lshr_ln1317_4_fu_642_p2 = conv_in_buf_V_load_reg_1126 >> zext_ln1317_10_fu_639_p1;

assign lshr_ln1317_5_fu_667_p2 = conv_in_buf_V_load_reg_1126 >> zext_ln1317_11_fu_664_p1;

assign lshr_ln1317_6_fu_692_p2 = conv_in_buf_V_load_reg_1126 >> zext_ln1317_12_fu_689_p1;

assign lshr_ln1317_fu_542_p2 = conv_in_buf_V_load_reg_1126 >> zext_ln1317_6_fu_539_p1;

assign lshr_ln1319_1_fu_580_p2 = conv_wt_buf_V_load_1_reg_1096 >> zext_ln1319_10_fu_576_p1;

assign lshr_ln1319_2_fu_605_p2 = conv_wt_buf_V_load_2_reg_1101 >> zext_ln1319_11_fu_601_p1;

assign lshr_ln1319_3_fu_630_p2 = conv_wt_buf_V_load_3_reg_1106 >> zext_ln1319_12_fu_626_p1;

assign lshr_ln1319_4_fu_655_p2 = conv_wt_buf_V_load_4_reg_1111 >> zext_ln1319_13_fu_651_p1;

assign lshr_ln1319_5_fu_680_p2 = conv_wt_buf_V_load_5_reg_1116 >> zext_ln1319_14_fu_676_p1;

assign lshr_ln1319_6_fu_705_p2 = conv_wt_buf_V_load_6_reg_1121 >> zext_ln1319_15_fu_701_p1;

assign lshr_ln1319_fu_555_p2 = conv_wt_buf_V_load_reg_1091 >> zext_ln1319_9_fu_551_p1;

assign p_cast1_fu_528_p1 = grp_fu_898_p3;

assign p_lcssa14_out = p_lcssa14_fu_114;

assign select_ln46_1_fu_412_p3 = ((icmp_ln52_fu_376_p2[0:0] == 1'b1) ? add_ln46_fu_370_p2 : ap_sig_allocacmp_chan_1);

assign select_ln46_2_fu_420_p3 = ((icmp_ln52_fu_376_p2[0:0] == 1'b1) ? sub_ln1319_2_fu_406_p2 : sub_ln1319_1_fu_349_p2);

assign select_ln46_fu_382_p3 = ((icmp_ln52_fu_376_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_i_load);

assign shl_ln1319_1_fu_400_p2 = add_ln1319_1_fu_394_p2 << 7'd3;

assign shl_ln1319_fu_343_p2 = add_ln1319_fu_337_p2 << 7'd3;

assign sub_ln1319_1_fu_349_p2 = (shl_ln1319_fu_343_p2 - add_ln1319_fu_337_p2);

assign sub_ln1319_2_fu_406_p2 = (shl_ln1319_1_fu_400_p2 - add_ln1319_1_fu_394_p2);

assign sub_ln1319_cast_fu_298_p1 = $signed(sub_ln1319);

assign tmp_6_6_fu_819_p8 = {{{{{{{trunc_ln864_6_fu_810_p4}, {trunc_ln864_5_fu_801_p4}}, {trunc_ln864_4_fu_792_p4}}, {trunc_ln864_3_fu_783_p4}}, {trunc_ln864_2_fu_774_p4}}, {trunc_ln864_1_fu_765_p4}}, {trunc_ln4_fu_756_p4}};

assign tmp_s_fu_532_p3 = {{select_ln46_reg_1029_pp0_iter2_reg}, {4'd0}};

assign trunc_ln1317_1_fu_572_p1 = lshr_ln1317_1_fu_567_p2[15:0];

assign trunc_ln1317_2_fu_597_p1 = lshr_ln1317_2_fu_592_p2[15:0];

assign trunc_ln1317_3_fu_622_p1 = lshr_ln1317_3_fu_617_p2[15:0];

assign trunc_ln1317_4_fu_647_p1 = lshr_ln1317_4_fu_642_p2[15:0];

assign trunc_ln1317_5_fu_672_p1 = lshr_ln1317_5_fu_667_p2[15:0];

assign trunc_ln1317_6_fu_697_p1 = lshr_ln1317_6_fu_692_p2[15:0];

assign trunc_ln1317_fu_547_p1 = lshr_ln1317_fu_542_p2[15:0];

assign trunc_ln1319_1_fu_585_p1 = lshr_ln1319_1_fu_580_p2[15:0];

assign trunc_ln1319_2_fu_610_p1 = lshr_ln1319_2_fu_605_p2[15:0];

assign trunc_ln1319_3_fu_635_p1 = lshr_ln1319_3_fu_630_p2[15:0];

assign trunc_ln1319_4_fu_660_p1 = lshr_ln1319_4_fu_655_p2[15:0];

assign trunc_ln1319_5_fu_685_p1 = lshr_ln1319_5_fu_680_p2[15:0];

assign trunc_ln1319_6_fu_710_p1 = lshr_ln1319_6_fu_705_p2[15:0];

assign trunc_ln1319_fu_560_p1 = lshr_ln1319_fu_555_p2[15:0];

assign trunc_ln4_fu_756_p4 = {{mul_ln864_reg_1207[28:13]}};

assign trunc_ln864_1_fu_765_p4 = {{mul_ln864_1_reg_1212[28:13]}};

assign trunc_ln864_2_fu_774_p4 = {{mul_ln864_2_reg_1217[28:13]}};

assign trunc_ln864_3_fu_783_p4 = {{mul_ln864_3_reg_1222[28:13]}};

assign trunc_ln864_4_fu_792_p4 = {{mul_ln864_4_reg_1227[28:13]}};

assign trunc_ln864_5_fu_801_p4 = {{mul_ln864_5_reg_1232[28:13]}};

assign trunc_ln864_6_fu_810_p4 = {{mul_ln864_6_reg_1237[28:13]}};

assign val_V_out = val_V_fu_106;

assign zext_ln1317_10_fu_639_p1 = zext_ln1317_4;

assign zext_ln1317_11_fu_664_p1 = zext_ln1317_5;

assign zext_ln1317_12_fu_689_p1 = zext_ln46;

assign zext_ln1317_6_fu_539_p1 = zext_ln1317;

assign zext_ln1317_7_fu_564_p1 = zext_ln1317_1;

assign zext_ln1317_8_fu_589_p1 = zext_ln1317_2;

assign zext_ln1317_9_fu_614_p1 = zext_ln1317_3;

assign zext_ln1319_10_fu_576_p1 = tmp_s_fu_532_p3;

assign zext_ln1319_11_fu_601_p1 = tmp_s_fu_532_p3;

assign zext_ln1319_12_fu_626_p1 = tmp_s_fu_532_p3;

assign zext_ln1319_13_fu_651_p1 = tmp_s_fu_532_p3;

assign zext_ln1319_14_fu_676_p1 = tmp_s_fu_532_p3;

assign zext_ln1319_15_fu_701_p1 = tmp_s_fu_532_p3;

assign zext_ln1319_1_fu_390_p1 = add_ln46_fu_370_p2;

assign zext_ln1319_2_fu_452_p1 = select_ln46_2_reg_1040;

assign zext_ln1319_3_fu_461_p1 = add_ln46_1_fu_456_p2;

assign zext_ln1319_4_fu_471_p1 = add_ln46_2_fu_466_p2;

assign zext_ln1319_5_fu_481_p1 = add_ln46_3_fu_476_p2;

assign zext_ln1319_6_fu_491_p1 = add_ln46_4_fu_486_p2;

assign zext_ln1319_7_fu_501_p1 = add_ln46_5_fu_496_p2;

assign zext_ln1319_8_fu_511_p1 = add_ln46_6_fu_506_p2;

assign zext_ln1319_9_fu_551_p1 = tmp_s_fu_532_p3;

assign zext_ln1319_fu_333_p1 = ap_sig_allocacmp_chan_1;

endmodule //tiled_conv_tiled_conv_Pipeline_CHANNEL_KERN_I
