

================================================================
== Vitis HLS Report for 'store_output_tile_to_DRAM'
================================================================
* Date:           Mon Mar 27 21:27:13 2023

* Version:        2020.2.2 (Build 3118627 on Tue Feb  9 05:13:49 MST 2021)
* Project:        proj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     1850|     1850|  18.500 us|  18.500 us|  1850|  1850|     none|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                                |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                            Loop Name                           |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH  |     1848|     1848|        10|          1|          1|  1840|       yes|
        +----------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 1, D = 10, States = { 2 3 4 5 6 7 8 9 10 11 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 12 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 2 
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.90>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%kernel_group_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %kernel_group"   --->   Operation 13 'read' 'kernel_group_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tj_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %tj"   --->   Operation 14 'read' 'tj_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%ti_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %ti"   --->   Operation 15 'read' 'ti_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%out_fm_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %out_fm"   --->   Operation 16 'read' 'out_fm_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%ti_cast = zext i4 %ti_read"   --->   Operation 17 'zext' 'ti_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %fm, void @empty_15, i32 0, i32 0, void @empty_6, i32 0, i32 1, void @empty_18, void @empty_1, void @empty_6, i32 16, i32 16, i32 16, i32 16, void @empty_6, void @empty_6"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%depth_offset = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i4.i2, i4 %kernel_group_read, i2 0" [utils.cpp:114]   --->   Operation 19 'bitconcatenate' 'depth_offset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (3.74ns)   --->   "%mul_ln115 = mul i10 %ti_cast, i10 46" [utils.cpp:115]   --->   Operation 20 'mul' 'mul_ln115' <Predicate = true> <Delay = 3.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%height_offset = partselect i9 @_ssdm_op_PartSelect.i9.i10.i32.i32, i10 %mul_ln115, i32 1, i32 9" [utils.cpp:115]   --->   Operation 21 'partselect' 'height_offset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i5.i5, i5 %tj_read, i5 0" [utils.cpp:116]   --->   Operation 22 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln116 = zext i10 %shl_ln" [utils.cpp:116]   --->   Operation 23 'zext' 'zext_ln116' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%shl_ln116_1 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %tj_read, i3 0" [utils.cpp:116]   --->   Operation 24 'bitconcatenate' 'shl_ln116_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln116_1 = zext i8 %shl_ln116_1" [utils.cpp:116]   --->   Operation 25 'zext' 'zext_ln116_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.73ns)   --->   "%add_ln116 = add i11 %zext_ln116, i11 %zext_ln116_1" [utils.cpp:116]   --->   Operation 26 'add' 'add_ln116' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%width_offset = partselect i10 @_ssdm_op_PartSelect.i10.i11.i32.i32, i11 %add_ln116, i32 1, i32 10" [utils.cpp:116]   --->   Operation 27 'partselect' 'width_offset' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%shl_ln134_1_mid = bitconcatenate i19 @_ssdm_op_BitConcatenate.i19.i9.i10, i9 %height_offset, i10 0" [utils.cpp:134]   --->   Operation 28 'bitconcatenate' 'shl_ln134_1_mid' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%shl_ln134_2_mid = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i9.i8, i9 %height_offset, i8 0" [utils.cpp:134]   --->   Operation 29 'bitconcatenate' 'shl_ln134_2_mid' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln125_1 = zext i17 %shl_ln134_2_mid" [utils.cpp:125]   --->   Operation 30 'zext' 'zext_ln125_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (2.16ns)   --->   "%add_ln134_4 = add i19 %zext_ln125_1, i19 %shl_ln134_1_mid" [utils.cpp:134]   --->   Operation 31 'add' 'add_ln134_4' <Predicate = true> <Delay = 2.16> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.58ns)   --->   "%br_ln119 = br void %_ZN8ap_fixedILi16ELi3EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei.exit" [utils.cpp:119]   --->   Operation 32 'br' 'br_ln119' <Predicate = true> <Delay = 1.58>

State 2 <SV = 1> <Delay = 4.57>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%indvar_flatten35 = phi i11 0, void, i11 %add_ln119_2, void %.split3" [utils.cpp:119]   --->   Operation 33 'phi' 'indvar_flatten35' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%f = phi i3 0, void, i3 %select_ln119_1, void %.split3" [utils.cpp:119]   --->   Operation 34 'phi' 'f' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i10 0, void, i10 %select_ln122_3, void %.split3" [utils.cpp:122]   --->   Operation 35 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (1.63ns)   --->   "%add_ln119_2 = add i11 %indvar_flatten35, i11 1" [utils.cpp:119]   --->   Operation 36 'add' 'add_ln119_2' <Predicate = true> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (1.88ns)   --->   "%icmp_ln119 = icmp_eq  i11 %indvar_flatten35, i11 1840" [utils.cpp:119]   --->   Operation 37 'icmp' 'icmp_ln119' <Predicate = true> <Delay = 1.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln119 = br i1 %icmp_ln119, void %.split3, void" [utils.cpp:119]   --->   Operation 38 'br' 'br_ln119' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.65ns)   --->   "%add_ln119 = add i3 %f, i3 1" [utils.cpp:119]   --->   Operation 39 'add' 'add_ln119' <Predicate = (!icmp_ln119)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.77ns)   --->   "%icmp_ln122 = icmp_eq  i10 %indvar_flatten, i10 460" [utils.cpp:122]   --->   Operation 40 'icmp' 'icmp_ln122' <Predicate = (!icmp_ln119)> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.98ns)   --->   "%select_ln119_1 = select i1 %icmp_ln122, i3 %add_ln119, i3 %f" [utils.cpp:119]   --->   Operation 41 'select' 'select_ln119_1' <Predicate = (!icmp_ln119)> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln119 = zext i3 %select_ln119_1" [utils.cpp:119]   --->   Operation 42 'zext' 'zext_ln119' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (1.82ns)   --->   "%add_ln119_1 = add i6 %zext_ln119, i6 %depth_offset" [utils.cpp:119]   --->   Operation 43 'add' 'add_ln119_1' <Predicate = (!icmp_ln119)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (1.73ns)   --->   "%add_ln122_1 = add i10 %indvar_flatten, i10 1" [utils.cpp:122]   --->   Operation 44 'add' 'add_ln122_1' <Predicate = (!icmp_ln119)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.68ns)   --->   "%select_ln122_3 = select i1 %icmp_ln122, i10 1, i10 %add_ln122_1" [utils.cpp:122]   --->   Operation 45 'select' 'select_ln122_3' <Predicate = (!icmp_ln119)> <Delay = 0.68> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 7.23>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%i = phi i5 0, void, i5 %select_ln122_1, void %.split3" [utils.cpp:122]   --->   Operation 46 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%j = phi i5 0, void, i5 %add_ln125, void %.split3" [utils.cpp:134]   --->   Operation 47 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln122 = zext i5 %i" [utils.cpp:122]   --->   Operation 48 'zext' 'zext_ln122' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (1.82ns)   --->   "%empty = add i9 %zext_ln122, i9 %height_offset" [utils.cpp:122]   --->   Operation 49 'add' 'empty' <Predicate = (!icmp_ln122)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%shl_ln134_1 = bitconcatenate i19 @_ssdm_op_BitConcatenate.i19.i9.i10, i9 %empty, i10 0" [utils.cpp:134]   --->   Operation 50 'bitconcatenate' 'shl_ln134_1' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%shl_ln134_2 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i9.i8, i9 %empty, i8 0" [utils.cpp:134]   --->   Operation 51 'bitconcatenate' 'shl_ln134_2' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln125 = zext i17 %shl_ln134_2" [utils.cpp:125]   --->   Operation 52 'zext' 'zext_ln125' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (2.16ns)   --->   "%add_ln134_1 = add i19 %zext_ln125, i19 %shl_ln134_1" [utils.cpp:134]   --->   Operation 53 'add' 'add_ln134_1' <Predicate = (!icmp_ln122)> <Delay = 2.16> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 54 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (1.21ns)   --->   "%select_ln119 = select i1 %icmp_ln122, i5 0, i5 %i" [utils.cpp:119]   --->   Operation 55 'select' 'select_ln119' <Predicate = (!icmp_ln119)> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln1495 = zext i3 %select_ln119_1"   --->   Operation 56 'zext' 'zext_ln1495' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (3.36ns) (grouped into DSP with root node add_ln1495)   --->   "%mul_ln1495 = mul i8 %zext_ln1495, i8 23"   --->   Operation 57 'mul' 'mul_ln1495' <Predicate = (!icmp_ln119)> <Delay = 3.36> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln119_1 = zext i6 %add_ln119_1" [utils.cpp:119]   --->   Operation 58 'zext' 'zext_ln119_1' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (6.38ns) (root node of the DSP)   --->   "%mul_ln119 = mul i25 %zext_ln119_1, i25 471040" [utils.cpp:119]   --->   Operation 59 'mul' 'mul_ln119' <Predicate = (!icmp_ln119)> <Delay = 6.38> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node and_ln119)   --->   "%xor_ln119 = xor i1 %icmp_ln122, i1 1" [utils.cpp:119]   --->   Operation 60 'xor' 'xor_ln119' <Predicate = (!icmp_ln119)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (1.36ns)   --->   "%icmp_ln125 = icmp_eq  i5 %j, i5 20" [utils.cpp:125]   --->   Operation 61 'icmp' 'icmp_ln125' <Predicate = (!icmp_ln119)> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln119 = and i1 %icmp_ln125, i1 %xor_ln119" [utils.cpp:119]   --->   Operation 62 'and' 'and_ln119' <Predicate = (!icmp_ln119)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (1.78ns)   --->   "%add_ln122 = add i5 %select_ln119, i5 1" [utils.cpp:122]   --->   Operation 63 'add' 'add_ln122' <Predicate = (!icmp_ln119)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node select_ln122)   --->   "%or_ln122 = or i1 %and_ln119, i1 %icmp_ln122" [utils.cpp:122]   --->   Operation 64 'or' 'or_ln122' <Predicate = (!icmp_ln119)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (1.21ns) (out node of the LUT)   --->   "%select_ln122 = select i1 %or_ln122, i5 0, i5 %j" [utils.cpp:122]   --->   Operation 65 'select' 'select_ln122' <Predicate = (!icmp_ln119)> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (1.21ns)   --->   "%select_ln122_1 = select i1 %and_ln119, i5 %add_ln122, i5 %select_ln119" [utils.cpp:122]   --->   Operation 66 'select' 'select_ln122_1' <Predicate = (!icmp_ln119)> <Delay = 1.21> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln1495_1 = zext i5 %select_ln122_1"   --->   Operation 67 'zext' 'zext_ln1495_1' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln1495 = add i8 %mul_ln1495, i8 %zext_ln1495_1"   --->   Operation 68 'add' 'add_ln1495' <Predicate = (!icmp_ln119)> <Delay = 3.02> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%trunc_ln1495 = trunc i8 %add_ln1495"   --->   Operation 69 'trunc' 'trunc_ln1495' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln122_1 = zext i5 %add_ln122" [utils.cpp:122]   --->   Operation 70 'zext' 'zext_ln122_1' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (1.82ns)   --->   "%p_mid1 = add i9 %zext_ln122_1, i9 %height_offset" [utils.cpp:122]   --->   Operation 71 'add' 'p_mid1' <Predicate = (!icmp_ln119)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%shl_ln134_1_mid1 = bitconcatenate i19 @_ssdm_op_BitConcatenate.i19.i9.i10, i9 %p_mid1, i10 0" [utils.cpp:134]   --->   Operation 72 'bitconcatenate' 'shl_ln134_1_mid1' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%shl_ln134_2_mid1 = bitconcatenate i17 @_ssdm_op_BitConcatenate.i17.i9.i8, i9 %p_mid1, i8 0" [utils.cpp:134]   --->   Operation 73 'bitconcatenate' 'shl_ln134_2_mid1' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln125_2 = zext i17 %shl_ln134_2_mid1" [utils.cpp:125]   --->   Operation 74 'zext' 'zext_ln125_2' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (2.16ns)   --->   "%add_ln134_5 = add i19 %zext_ln125_2, i19 %shl_ln134_1_mid1" [utils.cpp:134]   --->   Operation 75 'add' 'add_ln134_5' <Predicate = (!icmp_ln119)> <Delay = 2.16> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (1.78ns)   --->   "%add_ln125 = add i5 %select_ln122, i5 1" [utils.cpp:125]   --->   Operation 76 'add' 'add_ln125' <Predicate = (!icmp_ln119)> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 7.03>
ST_4 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node select_ln122_2)   --->   "%select_ln119_2 = select i1 %icmp_ln122, i19 %add_ln134_4, i19 %add_ln134_1" [utils.cpp:119]   --->   Operation 77 'select' 'select_ln119_2' <Predicate = (!icmp_ln119 & !and_ln119)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%p_shl_cast = bitconcatenate i11 @_ssdm_op_BitConcatenate.i11.i7.i4, i7 %trunc_ln1495, i4 0"   --->   Operation 78 'bitconcatenate' 'p_shl_cast' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i8.i2, i8 %add_ln1495, i2 0"   --->   Operation 79 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln1495_2 = zext i10 %tmp_1"   --->   Operation 80 'zext' 'zext_ln1495_2' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln1495_1 = add i11 %p_shl_cast, i11 %zext_ln1495_2"   --->   Operation 81 'add' 'add_ln1495_1' <Predicate = (!icmp_ln119)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 82 [1/1] (0.73ns) (out node of the LUT)   --->   "%select_ln122_2 = select i1 %and_ln119, i19 %add_ln134_5, i19 %select_ln119_2" [utils.cpp:122]   --->   Operation 82 'select' 'select_ln122_2' <Predicate = (!icmp_ln119)> <Delay = 0.73> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln122_2 = zext i19 %select_ln122_2" [utils.cpp:122]   --->   Operation 83 'zext' 'zext_ln122_2' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln1495_3 = zext i5 %select_ln122"   --->   Operation 84 'zext' 'zext_ln1495_3' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (3.75ns) (root node of TernaryAdder)   --->   "%add_ln1495_2 = add i11 %add_ln1495_1, i11 %zext_ln1495_3"   --->   Operation 85 'add' 'add_ln1495_2' <Predicate = (!icmp_ln119)> <Delay = 3.75> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln1495_4 = zext i11 %add_ln1495_2"   --->   Operation 86 'zext' 'zext_ln1495_4' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%out_fm_buf_V_addr = getelementptr i16 %out_fm_buf_V, i64 0, i64 %zext_ln1495_4"   --->   Operation 87 'getelementptr' 'out_fm_buf_V_addr' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 88 [2/2] (3.25ns)   --->   "%out_fm_buf_V_load = load i11 %out_fm_buf_V_addr"   --->   Operation 88 'load' 'out_fm_buf_V_load' <Predicate = (!icmp_ln119)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1840> <RAM>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln134 = zext i5 %select_ln122" [utils.cpp:134]   --->   Operation 89 'zext' 'zext_ln134' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (1.73ns)   --->   "%add_ln134 = add i10 %zext_ln134, i10 %width_offset" [utils.cpp:134]   --->   Operation 90 'add' 'add_ln134' <Predicate = (!icmp_ln119)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%tmp = partselect i14 @_ssdm_op_PartSelect.i14.i25.i32.i32, i25 %mul_ln119, i32 11, i32 24" [utils.cpp:134]   --->   Operation 91 'partselect' 'tmp' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "%tmp4 = bitconcatenate i25 @_ssdm_op_BitConcatenate.i25.i14.i10.i1, i14 %tmp, i10 %add_ln134, i1 0" [utils.cpp:134]   --->   Operation 92 'bitconcatenate' 'tmp4' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln134_1 = zext i25 %tmp4" [utils.cpp:134]   --->   Operation 93 'zext' 'zext_ln134_1' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln134_2 = add i64 %zext_ln134_1, i64 %out_fm_read" [utils.cpp:134]   --->   Operation 94 'add' 'add_ln134_2' <Predicate = (!icmp_ln119)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 95 [1/1] (5.30ns) (root node of TernaryAdder)   --->   "%add_ln134_3 = add i64 %add_ln134_2, i64 %zext_ln122_2" [utils.cpp:134]   --->   Operation 95 'add' 'add_ln134_3' <Predicate = (!icmp_ln119)> <Delay = 5.30> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.65> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln134_3, i32 1, i32 63" [utils.cpp:130]   --->   Operation 96 'partselect' 'trunc_ln' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%sext_ln130 = sext i63 %trunc_ln" [utils.cpp:130]   --->   Operation 97 'sext' 'sext_ln130' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%fm_addr = getelementptr i16 %fm, i64 %sext_ln130" [utils.cpp:130]   --->   Operation 98 'getelementptr' 'fm_addr' <Predicate = (!icmp_ln119)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 99 [1/2] (3.25ns)   --->   "%out_fm_buf_V_load = load i11 %out_fm_buf_V_addr"   --->   Operation 99 'load' 'out_fm_buf_V_load' <Predicate = (!icmp_ln119)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1840> <RAM>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i16.i32, i16 %out_fm_buf_V_load, i32 15"   --->   Operation 100 'bitselect' 'tmp_2' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.80ns)   --->   "%select_ln131 = select i1 %tmp_2, i16 0, i16 %out_fm_buf_V_load" [utils.cpp:131]   --->   Operation 101 'select' 'select_ln131' <Predicate = (!icmp_ln119)> <Delay = 0.80> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 102 [1/1] (7.30ns)   --->   "%fm_addr_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i16P1A, i16 %fm_addr, i32 1" [utils.cpp:130]   --->   Operation 102 'writereq' 'fm_addr_req' <Predicate = (!icmp_ln119)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 103 [1/1] (7.30ns)   --->   "%write_ln130 = write void @_ssdm_op_Write.m_axi.i16P1A, i16 %fm_addr, i16 %select_ln131, i2 3" [utils.cpp:130]   --->   Operation 103 'write' 'write_ln130' <Predicate = (!icmp_ln119)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 104 [5/5] (7.30ns)   --->   "%fm_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i16P1A, i16 %fm_addr" [utils.cpp:130]   --->   Operation 104 'writeresp' 'fm_addr_resp' <Predicate = (!icmp_ln119)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 105 [4/5] (7.30ns)   --->   "%fm_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i16P1A, i16 %fm_addr" [utils.cpp:130]   --->   Operation 105 'writeresp' 'fm_addr_resp' <Predicate = (!icmp_ln119)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 106 [3/5] (7.30ns)   --->   "%fm_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i16P1A, i16 %fm_addr" [utils.cpp:130]   --->   Operation 106 'writeresp' 'fm_addr_resp' <Predicate = (!icmp_ln119)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 107 [2/5] (7.30ns)   --->   "%fm_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i16P1A, i16 %fm_addr" [utils.cpp:130]   --->   Operation 107 'writeresp' 'fm_addr_resp' <Predicate = (!icmp_ln119)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 108 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_str"   --->   Operation 108 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_11 : Operation 109 [1/1] (0.00ns)   --->   "%empty_34 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1840, i64 1840, i64 1840"   --->   Operation 109 'speclooptripcount' 'empty_34' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_11 : Operation 110 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 110 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_11 : Operation 111 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_str"   --->   Operation 111 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_11 : Operation 112 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 112 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_11 : Operation 113 [1/1] (0.00ns)   --->   "%specloopname_ln125 = specloopname void @_ssdm_op_SpecLoopName, void @empty_17" [utils.cpp:125]   --->   Operation 113 'specloopname' 'specloopname_ln125' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_11 : Operation 114 [1/5] (7.30ns)   --->   "%fm_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i16P1A, i16 %fm_addr" [utils.cpp:130]   --->   Operation 114 'writeresp' 'fm_addr_resp' <Predicate = (!icmp_ln119)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 115 [1/1] (0.00ns)   --->   "%br_ln0 = br void %_ZN8ap_fixedILi16ELi3EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei.exit"   --->   Operation 115 'br' 'br_ln0' <Predicate = (!icmp_ln119)> <Delay = 0.00>

State 12 <SV = 3> <Delay = 0.00>
ST_12 : Operation 116 [1/1] (0.00ns)   --->   "%ret_ln139 = ret" [utils.cpp:139]   --->   Operation 116 'ret' 'ret_ln139' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.91ns
The critical path consists of the following:
	wire read on port 'ti' [9]  (0 ns)
	'mul' operation ('mul_ln115', utils.cpp:115) [14]  (3.74 ns)
	'add' operation ('add_ln134_4', utils.cpp:134) [25]  (2.17 ns)

 <State 2>: 4.58ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten', utils.cpp:122) with incoming values : ('select_ln122_3', utils.cpp:122) [30]  (0 ns)
	'icmp' operation ('icmp_ln122', utils.cpp:122) [47]  (1.77 ns)
	'select' operation ('select_ln119_1', utils.cpp:119) [49]  (0.98 ns)
	'add' operation ('add_ln119_1', utils.cpp:119) [53]  (1.83 ns)

 <State 3>: 7.23ns
The critical path consists of the following:
	'phi' operation ('i', utils.cpp:122) with incoming values : ('select_ln122_1', utils.cpp:122) [31]  (0 ns)
	'select' operation ('select_ln119', utils.cpp:119) [48]  (1.22 ns)
	'add' operation ('add_ln122', utils.cpp:122) [61]  (1.78 ns)
	'select' operation ('select_ln122_1', utils.cpp:122) [65]  (1.22 ns)
	'add' operation of DSP[67] ('add_ln1495') [67]  (3.02 ns)

 <State 4>: 7.04ns
The critical path consists of the following:
	'add' operation ('add_ln134', utils.cpp:134) [90]  (1.73 ns)
	'add' operation ('add_ln134_2', utils.cpp:134) [94]  (0 ns)
	'add' operation ('add_ln134_3', utils.cpp:134) [95]  (5.31 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request on port 'fm' (utils.cpp:130) [100]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus write on port 'fm' (utils.cpp:130) [101]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus response on port 'fm' (utils.cpp:130) [102]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus response on port 'fm' (utils.cpp:130) [102]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus response on port 'fm' (utils.cpp:130) [102]  (7.3 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus response on port 'fm' (utils.cpp:130) [102]  (7.3 ns)

 <State 11>: 7.3ns
The critical path consists of the following:
	bus response on port 'fm' (utils.cpp:130) [102]  (7.3 ns)

 <State 12>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
