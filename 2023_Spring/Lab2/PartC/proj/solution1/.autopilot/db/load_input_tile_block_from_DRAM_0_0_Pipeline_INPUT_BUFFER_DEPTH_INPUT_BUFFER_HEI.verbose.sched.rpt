

================================================================
== Vitis HLS Report for 'load_input_tile_block_from_DRAM_0_0_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEI'
================================================================
* Date:           Wed Mar 22 12:24:21 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        proj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    14364|    14364|  0.144 ms|  0.144 ms|  14364|  14364|       no|
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                          Loop Name                          |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH  |    14362|    14362|        13|          2|          1|  7176|       yes|
        +-------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 14


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 1
  Pipeline-0 : II = 2, D = 14, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%reuse_addr_reg = alloca i32 1"   --->   Operation 16 'alloca' 'reuse_addr_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%reuse_reg = alloca i32 1"   --->   Operation 17 'alloca' 'reuse_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 18 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 19 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 20 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%c = alloca i32 1"   --->   Operation 21 'alloca' 'c' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%indvar_flatten44 = alloca i32 1"   --->   Operation 22 'alloca' 'indvar_flatten44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%add_ln52_read = read i12 @_ssdm_op_Read.ap_auto.i12, i12 %add_ln52"   --->   Operation 23 'read' 'add_ln52_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln31_2_read = read i11 @_ssdm_op_Read.ap_auto.i11, i11 %zext_ln31_2"   --->   Operation 24 'read' 'zext_ln31_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%p_mid132_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_mid132"   --->   Operation 25 'read' 'p_mid132_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%in_fm_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %in_fm"   --->   Operation 26 'read' 'in_fm_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln30_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %zext_ln30"   --->   Operation 27 'read' 'zext_ln30_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%add_ln42_read = read i11 @_ssdm_op_Read.ap_auto.i11, i11 %add_ln42"   --->   Operation 28 'read' 'add_ln42_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln31_2_cast = zext i11 %zext_ln31_2_read"   --->   Operation 29 'zext' 'zext_ln31_2_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln30_cast = zext i10 %zext_ln30_read"   --->   Operation 30 'zext' 'zext_ln30_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %fm, void @empty_15, i32 0, i32 0, void @empty_3, i32 0, i32 1, void @empty_16, void @empty_17, void @empty_3, i32 16, i32 16, i32 16, i32 16, void @empty_3, void @empty_3, i32 4294967295, i32 0"   --->   Operation 31 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (1.58ns)   --->   "%store_ln0 = store i13 0, i13 %indvar_flatten44"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 33 [1/1] (1.58ns)   --->   "%store_ln0 = store i2 0, i2 %c"   --->   Operation 33 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 34 [1/1] (1.58ns)   --->   "%store_ln0 = store i12 0, i12 %indvar_flatten"   --->   Operation 34 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 35 [1/1] (1.58ns)   --->   "%store_ln0 = store i6 0, i6 %i"   --->   Operation 35 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 36 [1/1] (1.58ns)   --->   "%store_ln0 = store i6 0, i6 %j"   --->   Operation 36 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 37 [1/1] (1.58ns)   --->   "%store_ln0 = store i736 0, i736 %reuse_reg"   --->   Operation 37 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 38 [1/1] (1.58ns)   --->   "%store_ln0 = store i64 18446744073709551615, i64 %reuse_addr_reg"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body9"   --->   Operation 39 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%i_1 = load i6 %i" [utils.cpp:42]   --->   Operation 40 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%indvar_flatten44_load = load i13 %indvar_flatten44" [utils.cpp:37]   --->   Operation 41 'load' 'indvar_flatten44_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (2.09ns)   --->   "%icmp_ln37 = icmp_eq  i13 %indvar_flatten44_load, i13 7176" [utils.cpp:37]   --->   Operation 42 'icmp' 'icmp_ln37' <Predicate = true> <Delay = 2.09> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.09> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (1.67ns)   --->   "%add_ln37_2 = add i13 %indvar_flatten44_load, i13 1" [utils.cpp:37]   --->   Operation 43 'add' 'add_ln37_2' <Predicate = true> <Delay = 1.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln37 = br i1 %icmp_ln37, void %for.inc37, void %for.end39.exitStub" [utils.cpp:37]   --->   Operation 44 'br' 'br_ln37' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%j_load = load i6 %j" [utils.cpp:45]   --->   Operation 45 'load' 'j_load' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%indvar_flatten_load_1 = load i12 %indvar_flatten" [utils.cpp:40]   --->   Operation 46 'load' 'indvar_flatten_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%c_load = load i2 %c" [utils.cpp:37]   --->   Operation 47 'load' 'c_load' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.56ns)   --->   "%add_ln37 = add i2 %c_load, i2 1" [utils.cpp:37]   --->   Operation 48 'add' 'add_ln37' <Predicate = (!icmp_ln37)> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (1.99ns)   --->   "%icmp_ln40 = icmp_eq  i12 %indvar_flatten_load_1, i12 2392" [utils.cpp:40]   --->   Operation 49 'icmp' 'icmp_ln40' <Predicate = (!icmp_ln37)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (1.18ns)   --->   "%select_ln37 = select i1 %icmp_ln40, i6 0, i6 %i_1" [utils.cpp:37]   --->   Operation 50 'select' 'select_ln37' <Predicate = (!icmp_ln37)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.99ns)   --->   "%select_ln37_1 = select i1 %icmp_ln40, i2 %add_ln37, i2 %c_load" [utils.cpp:37]   --->   Operation 51 'select' 'select_ln37_1' <Predicate = (!icmp_ln37)> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node and_ln37)   --->   "%xor_ln37 = xor i1 %icmp_ln40, i1 1" [utils.cpp:37]   --->   Operation 52 'xor' 'xor_ln37' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (1.42ns)   --->   "%icmp_ln45 = icmp_eq  i6 %j_load, i6 46" [utils.cpp:45]   --->   Operation 53 'icmp' 'icmp_ln45' <Predicate = (!icmp_ln37)> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln37 = and i1 %icmp_ln45, i1 %xor_ln37" [utils.cpp:37]   --->   Operation 54 'and' 'and_ln37' <Predicate = (!icmp_ln37)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (1.82ns)   --->   "%add_ln40 = add i6 %select_ln37, i6 1" [utils.cpp:40]   --->   Operation 55 'add' 'add_ln40' <Predicate = (!icmp_ln37)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node select_ln40)   --->   "%or_ln40 = or i1 %and_ln37, i1 %icmp_ln40" [utils.cpp:40]   --->   Operation 56 'or' 'or_ln40' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (1.18ns) (out node of the LUT)   --->   "%select_ln40 = select i1 %or_ln40, i6 0, i6 %j_load" [utils.cpp:40]   --->   Operation 57 'select' 'select_ln40' <Predicate = (!icmp_ln37)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (1.58ns)   --->   "%store_ln45 = store i13 %add_ln37_2, i13 %indvar_flatten44" [utils.cpp:45]   --->   Operation 58 'store' 'store_ln45' <Predicate = (!icmp_ln37)> <Delay = 1.58>
ST_2 : Operation 59 [1/1] (1.58ns)   --->   "%store_ln45 = store i2 %select_ln37_1, i2 %c" [utils.cpp:45]   --->   Operation 59 'store' 'store_ln45' <Predicate = (!icmp_ln37)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 6.44>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln40 = zext i6 %i_1" [utils.cpp:40]   --->   Operation 60 'zext' 'zext_ln40' <Predicate = (!icmp_ln40 & !and_ln37)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i6 %i_1" [utils.cpp:42]   --->   Operation 61 'zext' 'zext_ln42' <Predicate = (!icmp_ln40 & !and_ln37)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (1.63ns)   --->   "%add_ln42_1 = add i11 %add_ln42_read, i11 %zext_ln40" [utils.cpp:42]   --->   Operation 62 'add' 'add_ln42_1' <Predicate = (!icmp_ln40 & !and_ln37)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (1.82ns)   --->   "%tmp2 = add i7 %zext_ln42, i7 125" [utils.cpp:42]   --->   Operation 63 'add' 'tmp2' <Predicate = (!icmp_ln40 & !and_ln37)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp2_cast = sext i7 %tmp2" [utils.cpp:42]   --->   Operation 64 'sext' 'tmp2_cast' <Predicate = (!icmp_ln40 & !and_ln37)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (1.73ns)   --->   "%empty = add i11 %tmp2_cast, i11 %zext_ln30_cast" [utils.cpp:42]   --->   Operation 65 'add' 'empty' <Predicate = (!icmp_ln40 & !and_ln37)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (1.88ns)   --->   "%empty_54 = icmp_ugt  i11 %empty, i11 735" [utils.cpp:42]   --->   Operation 66 'icmp' 'empty_54' <Predicate = (!icmp_ln40 & !and_ln37)> <Delay = 1.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 67 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i2 %select_ln37_1" [utils.cpp:37]   --->   Operation 68 'zext' 'zext_ln37' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (6.32ns)   --->   "%mul_ln37 = mul i23 %zext_ln37, i23 1884160" [utils.cpp:37]   --->   Operation 69 'mul' 'mul_ln37' <Predicate = (!icmp_ln37)> <Delay = 6.32> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 6.32> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node or_ln49)   --->   "%select_ln37_2 = select i1 %icmp_ln40, i1 %p_mid132_read, i1 %empty_54" [utils.cpp:37]   --->   Operation 70 'select' 'select_ln37_2' <Predicate = (!icmp_ln37 & !and_ln37)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node select_ln40_3)   --->   "%select_ln37_3 = select i1 %icmp_ln40, i11 %add_ln42_read, i11 %add_ln42_1" [utils.cpp:37]   --->   Operation 71 'select' 'select_ln37_3' <Predicate = (!icmp_ln37 & !and_ln37)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 72 [1/1] (1.18ns)   --->   "%select_ln40_1 = select i1 %and_ln37, i6 %add_ln40, i6 %select_ln37" [utils.cpp:40]   --->   Operation 72 'select' 'select_ln40_1' <Predicate = (!icmp_ln37)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln40_1 = zext i6 %add_ln40" [utils.cpp:40]   --->   Operation 73 'zext' 'zext_ln40_1' <Predicate = (!icmp_ln37 & and_ln37)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln42_1 = zext i6 %add_ln40" [utils.cpp:42]   --->   Operation 74 'zext' 'zext_ln42_1' <Predicate = (!icmp_ln37 & and_ln37)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (1.63ns)   --->   "%add_ln42_2 = add i11 %add_ln42_read, i11 %zext_ln40_1" [utils.cpp:42]   --->   Operation 75 'add' 'add_ln42_2' <Predicate = (!icmp_ln37 & and_ln37)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (1.82ns)   --->   "%tmp2_mid1 = add i7 %zext_ln42_1, i7 125" [utils.cpp:42]   --->   Operation 76 'add' 'tmp2_mid1' <Predicate = (!icmp_ln37 & and_ln37)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%tmp2_cast_mid1 = sext i7 %tmp2_mid1" [utils.cpp:42]   --->   Operation 77 'sext' 'tmp2_cast_mid1' <Predicate = (!icmp_ln37 & and_ln37)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (1.73ns)   --->   "%p_mid1 = add i11 %tmp2_cast_mid1, i11 %zext_ln30_cast" [utils.cpp:42]   --->   Operation 78 'add' 'p_mid1' <Predicate = (!icmp_ln37 & and_ln37)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (1.88ns)   --->   "%p_mid15 = icmp_ugt  i11 %p_mid1, i11 735" [utils.cpp:42]   --->   Operation 79 'icmp' 'p_mid15' <Predicate = (!icmp_ln37 & and_ln37)> <Delay = 1.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node or_ln49)   --->   "%select_ln40_2 = select i1 %and_ln37, i1 %p_mid15, i1 %select_ln37_2" [utils.cpp:40]   --->   Operation 80 'select' 'select_ln40_2' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln40_3 = select i1 %and_ln37, i11 %add_ln42_2, i11 %select_ln37_3" [utils.cpp:40]   --->   Operation 81 'select' 'select_ln40_3' <Predicate = (!icmp_ln37)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%sext_ln52_1_mid2_v = bitconcatenate i22 @_ssdm_op_BitConcatenate.i22.i11.i11, i11 %select_ln40_3, i11 0" [utils.cpp:40]   --->   Operation 82 'bitconcatenate' 'sext_ln52_1_mid2_v' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%sext_ln40 = sext i22 %sext_ln52_1_mid2_v" [utils.cpp:40]   --->   Operation 83 'sext' 'sext_ln40' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%sext_ln45_mid2_v = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i11.i9, i11 %select_ln40_3, i9 0" [utils.cpp:40]   --->   Operation 84 'bitconcatenate' 'sext_ln45_mid2_v' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%sext_ln45_mid2_v_cast = sext i20 %sext_ln45_mid2_v" [utils.cpp:40]   --->   Operation 85 'sext' 'sext_ln45_mid2_v_cast' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i6 %select_ln40" [utils.cpp:47]   --->   Operation 86 'zext' 'zext_ln47' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln49 = zext i6 %select_ln40" [utils.cpp:49]   --->   Operation 87 'zext' 'zext_ln49' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (1.82ns)   --->   "%add_ln49_1 = add i7 %zext_ln47, i7 125" [utils.cpp:49]   --->   Operation 88 'add' 'add_ln49_1' <Predicate = (!icmp_ln37)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%sext_ln49 = sext i7 %add_ln49_1" [utils.cpp:49]   --->   Operation 89 'sext' 'sext_ln49' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (1.63ns)   --->   "%add_ln49 = add i12 %sext_ln49, i12 %zext_ln31_2_cast" [utils.cpp:49]   --->   Operation 90 'add' 'add_ln49' <Predicate = (!icmp_ln37)> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (1.99ns)   --->   "%icmp_ln49 = icmp_ugt  i12 %add_ln49, i12 1279" [utils.cpp:49]   --->   Operation 91 'icmp' 'icmp_ln49' <Predicate = (!icmp_ln37)> <Delay = 1.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln49 = or i1 %icmp_ln49, i1 %select_ln40_2" [utils.cpp:49]   --->   Operation 92 'or' 'or_ln49' <Predicate = (!icmp_ln37)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%br_ln49 = br i1 %or_ln49, void %if.else, void %_ZN8ap_fixedILi16ELi3EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei.exit" [utils.cpp:49]   --->   Operation 93 'br' 'br_ln49' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (1.54ns)   --->   "%add_ln52_1 = add i12 %add_ln52_read, i12 %zext_ln49" [utils.cpp:52]   --->   Operation 94 'add' 'add_ln52_1' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i13 @_ssdm_op_BitConcatenate.i13.i12.i1, i12 %add_ln52_1, i1 0" [utils.cpp:52]   --->   Operation 95 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%sext_ln52_1 = sext i13 %tmp_s" [utils.cpp:52]   --->   Operation 96 'sext' 'sext_ln52_1' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_3 = add i23 %sext_ln40, i23 %sext_ln52_1" [utils.cpp:52]   --->   Operation 97 'add' 'add_ln52_3' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.05> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 98 [1/1] (4.10ns) (root node of TernaryAdder)   --->   "%add_ln52_4 = add i23 %add_ln52_3, i23 %sext_ln45_mid2_v_cast" [utils.cpp:52]   --->   Operation 98 'add' 'add_ln52_4' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 4.10> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.05> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i12 %indvar_flatten" [utils.cpp:40]   --->   Operation 99 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln37 & !icmp_ln40)> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (1.82ns)   --->   "%add_ln45 = add i6 %select_ln40, i6 1" [utils.cpp:45]   --->   Operation 100 'add' 'add_ln45' <Predicate = (!icmp_ln37)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 101 [1/1] (1.54ns)   --->   "%add_ln40_1 = add i12 %indvar_flatten_load, i12 1" [utils.cpp:40]   --->   Operation 101 'add' 'add_ln40_1' <Predicate = (!icmp_ln37 & !icmp_ln40)> <Delay = 1.54> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 102 [1/1] (0.69ns)   --->   "%select_ln40_4 = select i1 %icmp_ln40, i12 1, i12 %add_ln40_1" [utils.cpp:40]   --->   Operation 102 'select' 'select_ln40_4' <Predicate = (!icmp_ln37)> <Delay = 0.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 103 [1/1] (1.58ns)   --->   "%store_ln45 = store i12 %select_ln40_4, i12 %indvar_flatten" [utils.cpp:45]   --->   Operation 103 'store' 'store_ln45' <Predicate = (!icmp_ln37)> <Delay = 1.58>
ST_3 : Operation 104 [1/1] (1.58ns)   --->   "%store_ln45 = store i6 %select_ln40_1, i6 %i" [utils.cpp:45]   --->   Operation 104 'store' 'store_ln45' <Predicate = (!icmp_ln37)> <Delay = 1.58>
ST_3 : Operation 105 [1/1] (1.58ns)   --->   "%store_ln45 = store i6 %add_ln45, i6 %j" [utils.cpp:45]   --->   Operation 105 'store' 'store_ln45' <Predicate = (!icmp_ln37)> <Delay = 1.58>

State 4 <SV = 3> <Delay = 7.04>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln37_1 = zext i23 %mul_ln37" [utils.cpp:37]   --->   Operation 106 'zext' 'zext_ln37_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (3.52ns)   --->   "%add_ln37_1 = add i64 %zext_ln37_1, i64 %in_fm_read" [utils.cpp:37]   --->   Operation 107 'add' 'add_ln37_1' <Predicate = (!icmp_ln37)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "%sext_ln52_2 = sext i23 %add_ln52_4" [utils.cpp:52]   --->   Operation 108 'sext' 'sext_ln52_2' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (3.52ns)   --->   "%add_ln52_2 = add i64 %sext_ln52_2, i64 %add_ln37_1" [utils.cpp:52]   --->   Operation 109 'add' 'add_ln52_2' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %add_ln52_2, i32 1, i32 63" [utils.cpp:52]   --->   Operation 110 'partselect' 'trunc_ln' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%sext_ln52 = sext i63 %trunc_ln" [utils.cpp:52]   --->   Operation 111 'sext' 'sext_ln52' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%fm_addr = getelementptr i16 %fm, i64 %sext_ln52" [utils.cpp:52]   --->   Operation 112 'getelementptr' 'fm_addr' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 113 [7/7] (7.30ns)   --->   "%fm_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %fm_addr, i32 1" [utils.cpp:52]   --->   Operation 113 'readreq' 'fm_load_req' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 114 [6/7] (7.30ns)   --->   "%fm_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %fm_addr, i32 1" [utils.cpp:52]   --->   Operation 114 'readreq' 'fm_load_req' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 115 [5/7] (7.30ns)   --->   "%fm_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %fm_addr, i32 1" [utils.cpp:52]   --->   Operation 115 'readreq' 'fm_load_req' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 116 [4/7] (7.30ns)   --->   "%fm_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %fm_addr, i32 1" [utils.cpp:52]   --->   Operation 116 'readreq' 'fm_load_req' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 117 [3/7] (7.30ns)   --->   "%fm_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %fm_addr, i32 1" [utils.cpp:52]   --->   Operation 117 'readreq' 'fm_load_req' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 118 [2/7] (7.30ns)   --->   "%fm_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %fm_addr, i32 1" [utils.cpp:52]   --->   Operation 118 'readreq' 'fm_load_req' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 119 [1/1] (0.00ns)   --->   "%select_ln37_1_cast = zext i2 %select_ln37_1" [utils.cpp:37]   --->   Operation 119 'zext' 'select_ln37_1_cast' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_11 : Operation 120 [1/1] (3.36ns) (grouped into DSP with root node empty_57)   --->   "%empty_56 = mul i8 %select_ln37_1_cast, i8 52" [utils.cpp:37]   --->   Operation 120 'mul' 'empty_56' <Predicate = (!icmp_ln37)> <Delay = 3.36> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 121 [1/1] (0.00ns)   --->   "%select_ln40_1_cast = zext i6 %select_ln40_1" [utils.cpp:40]   --->   Operation 121 'zext' 'select_ln40_1_cast' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_11 : Operation 122 [1/1] (0.00ns) (root node of the DSP)   --->   "%empty_57 = add i8 %empty_56, i8 %select_ln40_1_cast" [utils.cpp:37]   --->   Operation 122 'add' 'empty_57' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 123 [1/1] (0.00ns)   --->   "%p_cast = zext i8 %empty_57" [utils.cpp:37]   --->   Operation 123 'zext' 'p_cast' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_11 : Operation 124 [1/1] (0.00ns)   --->   "%in_fm_buf_addr = getelementptr i736 %in_fm_buf, i64 0, i64 %p_cast" [utils.cpp:37]   --->   Operation 124 'getelementptr' 'in_fm_buf_addr' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_11 : Operation 125 [1/1] (0.00ns)   --->   "%reuse_addr_reg_load = load i64 %reuse_addr_reg"   --->   Operation 125 'load' 'reuse_addr_reg_load' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_11 : Operation 126 [2/2] (3.25ns)   --->   "%in_fm_buf_load = load i8 %in_fm_buf_addr" [utils.cpp:50]   --->   Operation 126 'load' 'in_fm_buf_load' <Predicate = (!icmp_ln37)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 736> <Depth = 156> <RAM>
ST_11 : Operation 127 [1/1] (2.77ns)   --->   "%addr_cmp = icmp_eq  i64 %reuse_addr_reg_load, i64 %p_cast" [utils.cpp:37]   --->   Operation 127 'icmp' 'addr_cmp' <Predicate = (!icmp_ln37)> <Delay = 2.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 128 [1/7] (7.30ns)   --->   "%fm_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i16P1A, i16 %fm_addr, i32 1" [utils.cpp:52]   --->   Operation 128 'readreq' 'fm_load_req' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 129 [1/1] (1.58ns)   --->   "%store_ln37 = store i64 %p_cast, i64 %reuse_addr_reg" [utils.cpp:37]   --->   Operation 129 'store' 'store_ln37' <Predicate = true> <Delay = 1.58>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 130 [1/1] (0.00ns)   --->   "%reuse_reg_load = load i736 %reuse_reg"   --->   Operation 130 'load' 'reuse_reg_load' <Predicate = (!icmp_ln37 & addr_cmp)> <Delay = 0.00>
ST_12 : Operation 131 [1/2] (3.25ns)   --->   "%in_fm_buf_load = load i8 %in_fm_buf_addr" [utils.cpp:50]   --->   Operation 131 'load' 'in_fm_buf_load' <Predicate = (!icmp_ln37)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 736> <Depth = 156> <RAM>
ST_12 : Operation 132 [1/1] (1.83ns)   --->   "%reuse_select = select i1 %addr_cmp, i736 %reuse_reg_load, i736 %in_fm_buf_load" [utils.cpp:37]   --->   Operation 132 'select' 'reuse_select' <Predicate = (!icmp_ln37)> <Delay = 1.83> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.83> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 133 [1/1] (7.30ns)   --->   "%fm_addr_read = read i16 @_ssdm_op_Read.m_axi.i16P1A, i16 %fm_addr" [utils.cpp:52]   --->   Operation 133 'read' 'fm_addr_read' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 158 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 158 'ret' 'ret_ln0' <Predicate = (icmp_ln37)> <Delay = 0.00>

State 13 <SV = 12> <Delay = 7.19>
ST_13 : Operation 134 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_str"   --->   Operation 134 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_13 : Operation 135 [1/1] (0.00ns)   --->   "%empty_55 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 7176, i64 7176, i64 7176"   --->   Operation 135 'speclooptripcount' 'empty_55' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_13 : Operation 136 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 136 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_13 : Operation 137 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_str"   --->   Operation 137 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_13 : Operation 138 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 138 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_13 : Operation 139 [1/1] (0.00ns)   --->   "%specloopname_ln45 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [utils.cpp:45]   --->   Operation 139 'specloopname' 'specloopname_ln45' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_13 : Operation 140 [1/1] (0.00ns)   --->   "%shl_ln4 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i6.i4, i6 %select_ln40, i4 0" [utils.cpp:52]   --->   Operation 140 'bitconcatenate' 'shl_ln4' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_13 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i10 %shl_ln4" [utils.cpp:52]   --->   Operation 141 'zext' 'zext_ln52' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00>
ST_13 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node or_ln52)   --->   "%shl_ln52 = shl i736 65535, i736 %zext_ln52" [utils.cpp:52]   --->   Operation 142 'shl' 'shl_ln52' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.01> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node or_ln52)   --->   "%xor_ln52 = xor i736 %shl_ln52, i736 361473786714651839609485931802192366508973300717001923159475447150424810286233407987951861887389439612274926783780351561999781998832434041296198795326329101623141899709787663433296905279066051548640942013290819886814068735" [utils.cpp:52]   --->   Operation 143 'xor' 'xor_ln52' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node or_ln52)   --->   "%and_ln52 = and i736 %reuse_select, i736 %xor_ln52" [utils.cpp:52]   --->   Operation 144 'and' 'and_ln52' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node or_ln52)   --->   "%zext_ln52_1 = zext i16 %fm_addr_read" [utils.cpp:52]   --->   Operation 145 'zext' 'zext_ln52_1' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00>
ST_13 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node or_ln52)   --->   "%shl_ln52_1 = shl i736 %zext_ln52_1, i736 %zext_ln52" [utils.cpp:52]   --->   Operation 146 'shl' 'shl_ln52_1' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.98> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 147 [1/1] (4.01ns) (out node of the LUT)   --->   "%or_ln52 = or i736 %and_ln52, i736 %shl_ln52_1" [utils.cpp:52]   --->   Operation 147 'or' 'or_ln52' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 4.01> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 148 [1/1] (1.58ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 148 'br' 'br_ln0' <Predicate = (!icmp_ln37 & !or_ln49)> <Delay = 1.58>
ST_13 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node and_ln50)   --->   "%zext_ln50 = zext i10 %shl_ln4" [utils.cpp:50]   --->   Operation 149 'zext' 'zext_ln50' <Predicate = (!icmp_ln37 & or_ln49)> <Delay = 0.00>
ST_13 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node and_ln50)   --->   "%shl_ln50 = shl i736 65535, i736 %zext_ln50" [utils.cpp:50]   --->   Operation 150 'shl' 'shl_ln50' <Predicate = (!icmp_ln37 & or_ln49)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.01> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node and_ln50)   --->   "%xor_ln50 = xor i736 %shl_ln50, i736 361473786714651839609485931802192366508973300717001923159475447150424810286233407987951861887389439612274926783780351561999781998832434041296198795326329101623141899709787663433296905279066051548640942013290819886814068735" [utils.cpp:50]   --->   Operation 151 'xor' 'xor_ln50' <Predicate = (!icmp_ln37 & or_ln49)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 152 [1/1] (4.01ns) (out node of the LUT)   --->   "%and_ln50 = and i736 %reuse_select, i736 %xor_ln50" [utils.cpp:50]   --->   Operation 152 'and' 'and_ln50' <Predicate = (!icmp_ln37 & or_ln49)> <Delay = 4.01> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 1.03> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 153 [1/1] (1.58ns)   --->   "%br_ln51 = br void %for.inc" [utils.cpp:51]   --->   Operation 153 'br' 'br_ln51' <Predicate = (!icmp_ln37 & or_ln49)> <Delay = 1.58>
ST_13 : Operation 154 [1/1] (0.00ns)   --->   "%storemerge = phi i736 %or_ln52, void %if.else, i736 %and_ln50, void %_ZN8ap_fixedILi16ELi3EL9ap_q_mode5EL9ap_o_mode3ELi0EEC2Ei.exit" [utils.cpp:52]   --->   Operation 154 'phi' 'storemerge' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 155 [1/1] (1.58ns)   --->   "%store_ln52 = store i736 %storemerge, i736 %reuse_reg" [utils.cpp:52]   --->   Operation 155 'store' 'store_ln52' <Predicate = true> <Delay = 1.58>

State 14 <SV = 13> <Delay = 3.25>
ST_14 : Operation 156 [1/1] (3.25ns)   --->   "%store_ln50 = store i736 %storemerge, i8 %in_fm_buf_addr" [utils.cpp:50]   --->   Operation 156 'store' 'store_ln50' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 736> <Depth = 156> <RAM>
ST_14 : Operation 157 [1/1] (0.00ns)   --->   "%br_ln45 = br void %for.body9" [utils.cpp:45]   --->   Operation 157 'br' 'br_ln45' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten44') [15]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'indvar_flatten44' [25]  (1.59 ns)

 <State 2>: 5ns
The critical path consists of the following:
	'load' operation ('indvar_flatten_load_1', utils.cpp:40) on local variable 'indvar_flatten' [49]  (0 ns)
	'icmp' operation ('icmp_ln40', utils.cpp:40) [54]  (1.99 ns)
	'select' operation ('select_ln37', utils.cpp:37) [55]  (1.19 ns)
	'add' operation ('add_ln40', utils.cpp:40) [69]  (1.83 ns)

 <State 3>: 6.45ns
The critical path consists of the following:
	'add' operation ('add_ln49_1', utils.cpp:49) [95]  (1.83 ns)
	'add' operation ('add_ln49', utils.cpp:49) [97]  (1.64 ns)
	'icmp' operation ('icmp_ln49', utils.cpp:49) [98]  (1.99 ns)
	'or' operation ('or_ln49', utils.cpp:49) [99]  (0.993 ns)

 <State 4>: 7.04ns
The critical path consists of the following:
	'add' operation ('add_ln37_1', utils.cpp:37) [62]  (3.52 ns)
	'add' operation ('add_ln52_2', utils.cpp:52) [114]  (3.52 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('fm_load_req', utils.cpp:52) on port 'fm' (utils.cpp:52) [118]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('fm_load_req', utils.cpp:52) on port 'fm' (utils.cpp:52) [118]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('fm_load_req', utils.cpp:52) on port 'fm' (utils.cpp:52) [118]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('fm_load_req', utils.cpp:52) on port 'fm' (utils.cpp:52) [118]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus request operation ('fm_load_req', utils.cpp:52) on port 'fm' (utils.cpp:52) [118]  (7.3 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus request operation ('fm_load_req', utils.cpp:52) on port 'fm' (utils.cpp:52) [118]  (7.3 ns)

 <State 11>: 7.3ns
The critical path consists of the following:
	bus request operation ('fm_load_req', utils.cpp:52) on port 'fm' (utils.cpp:52) [118]  (7.3 ns)

 <State 12>: 7.3ns
The critical path consists of the following:
	bus read operation ('fm_addr_read', utils.cpp:52) on port 'fm' (utils.cpp:52) [119]  (7.3 ns)

 <State 13>: 7.19ns
The critical path consists of the following:
	'shl' operation ('shl_ln52', utils.cpp:52) [121]  (0 ns)
	'xor' operation ('xor_ln52', utils.cpp:52) [122]  (0 ns)
	'and' operation ('and_ln52', utils.cpp:52) [123]  (0 ns)
	'or' operation ('or_ln52', utils.cpp:52) [126]  (4.01 ns)
	multiplexor before 'phi' operation ('storemerge', utils.cpp:52) with incoming values : ('or_ln52', utils.cpp:52) ('and_ln50', utils.cpp:50) [135]  (1.59 ns)
	'phi' operation ('storemerge', utils.cpp:52) with incoming values : ('or_ln52', utils.cpp:52) ('and_ln50', utils.cpp:50) [135]  (0 ns)
	'store' operation ('store_ln52', utils.cpp:52) of variable 'storemerge', utils.cpp:52 on local variable 'reuse_reg' [138]  (1.59 ns)

 <State 14>: 3.25ns
The critical path consists of the following:
	'store' operation ('store_ln50', utils.cpp:50) of variable 'storemerge', utils.cpp:52 on array 'in_fm_buf' [137]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
