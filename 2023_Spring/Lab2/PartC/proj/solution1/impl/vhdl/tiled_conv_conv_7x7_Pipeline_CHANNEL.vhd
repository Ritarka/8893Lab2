-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tiled_conv_conv_7x7_Pipeline_CHANNEL is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    zext_ln63 : IN STD_LOGIC_VECTOR (14 downto 0);
    h : IN STD_LOGIC_VECTOR (5 downto 0);
    w : IN STD_LOGIC_VECTOR (5 downto 0);
    X_buf_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    X_buf_ce0 : OUT STD_LOGIC;
    X_buf_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    zext_ln63_1 : IN STD_LOGIC_VECTOR (5 downto 0);
    zext_ln63_2 : IN STD_LOGIC_VECTOR (5 downto 0);
    zext_ln63_3 : IN STD_LOGIC_VECTOR (5 downto 0);
    zext_ln63_4 : IN STD_LOGIC_VECTOR (5 downto 0);
    zext_ln63_5 : IN STD_LOGIC_VECTOR (5 downto 0);
    zext_ln51 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_cast : IN STD_LOGIC_VECTOR (5 downto 0);
    indvars_iv_next57_cast : IN STD_LOGIC_VECTOR (5 downto 0);
    p_cast1 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_cast2 : IN STD_LOGIC_VECTOR (5 downto 0);
    p_cast3 : IN STD_LOGIC_VECTOR (5 downto 0);
    zext_ln48 : IN STD_LOGIC_VECTOR (5 downto 0);
    sub_ln1319 : IN STD_LOGIC_VECTOR (5 downto 0);
    W_buf_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    W_buf_ce0 : OUT STD_LOGIC;
    W_buf_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    conv_i_i96_6_lcssa21_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    conv_i_i96_6_lcssa21_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of tiled_conv_conv_7x7_Pipeline_CHANNEL is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp0_stage27 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage28 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage29 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage30 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage31 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage32 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage33 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage34 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage35 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage36 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage37 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage38 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage39 : STD_LOGIC_VECTOR (48 downto 0) := "0000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage40 : STD_LOGIC_VECTOR (48 downto 0) := "0000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage41 : STD_LOGIC_VECTOR (48 downto 0) := "0000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage42 : STD_LOGIC_VECTOR (48 downto 0) := "0000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage43 : STD_LOGIC_VECTOR (48 downto 0) := "0000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage44 : STD_LOGIC_VECTOR (48 downto 0) := "0000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage45 : STD_LOGIC_VECTOR (48 downto 0) := "0001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage46 : STD_LOGIC_VECTOR (48 downto 0) := "0010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage47 : STD_LOGIC_VECTOR (48 downto 0) := "0100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage48 : STD_LOGIC_VECTOR (48 downto 0) := "1000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_2E : STD_LOGIC_VECTOR (12 downto 0) := "0000000101110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv14_31 : STD_LOGIC_VECTOR (13 downto 0) := "00000000110001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv10_6 : STD_LOGIC_VECTOR (9 downto 0) := "0000000110";
    constant ap_const_lv10_7 : STD_LOGIC_VECTOR (9 downto 0) := "0000000111";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv10_9 : STD_LOGIC_VECTOR (9 downto 0) := "0000001001";
    constant ap_const_lv10_A : STD_LOGIC_VECTOR (9 downto 0) := "0000001010";
    constant ap_const_lv10_B : STD_LOGIC_VECTOR (9 downto 0) := "0000001011";
    constant ap_const_lv10_C : STD_LOGIC_VECTOR (9 downto 0) := "0000001100";
    constant ap_const_lv10_D : STD_LOGIC_VECTOR (9 downto 0) := "0000001101";
    constant ap_const_lv10_E : STD_LOGIC_VECTOR (9 downto 0) := "0000001110";
    constant ap_const_lv10_F : STD_LOGIC_VECTOR (9 downto 0) := "0000001111";
    constant ap_const_lv10_10 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_const_lv10_11 : STD_LOGIC_VECTOR (9 downto 0) := "0000010001";
    constant ap_const_lv10_12 : STD_LOGIC_VECTOR (9 downto 0) := "0000010010";
    constant ap_const_lv10_13 : STD_LOGIC_VECTOR (9 downto 0) := "0000010011";
    constant ap_const_lv10_14 : STD_LOGIC_VECTOR (9 downto 0) := "0000010100";
    constant ap_const_lv10_15 : STD_LOGIC_VECTOR (9 downto 0) := "0000010101";
    constant ap_const_lv10_16 : STD_LOGIC_VECTOR (9 downto 0) := "0000010110";
    constant ap_const_lv10_17 : STD_LOGIC_VECTOR (9 downto 0) := "0000010111";
    constant ap_const_lv10_18 : STD_LOGIC_VECTOR (9 downto 0) := "0000011000";
    constant ap_const_lv10_19 : STD_LOGIC_VECTOR (9 downto 0) := "0000011001";
    constant ap_const_lv10_1A : STD_LOGIC_VECTOR (9 downto 0) := "0000011010";
    constant ap_const_lv10_1B : STD_LOGIC_VECTOR (9 downto 0) := "0000011011";
    constant ap_const_lv10_1C : STD_LOGIC_VECTOR (9 downto 0) := "0000011100";
    constant ap_const_lv10_1D : STD_LOGIC_VECTOR (9 downto 0) := "0000011101";
    constant ap_const_lv10_1E : STD_LOGIC_VECTOR (9 downto 0) := "0000011110";
    constant ap_const_lv10_1F : STD_LOGIC_VECTOR (9 downto 0) := "0000011111";
    constant ap_const_lv10_20 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_const_lv10_21 : STD_LOGIC_VECTOR (9 downto 0) := "0000100001";
    constant ap_const_lv10_22 : STD_LOGIC_VECTOR (9 downto 0) := "0000100010";
    constant ap_const_lv10_23 : STD_LOGIC_VECTOR (9 downto 0) := "0000100011";
    constant ap_const_lv10_24 : STD_LOGIC_VECTOR (9 downto 0) := "0000100100";
    constant ap_const_lv10_25 : STD_LOGIC_VECTOR (9 downto 0) := "0000100101";
    constant ap_const_lv10_26 : STD_LOGIC_VECTOR (9 downto 0) := "0000100110";
    constant ap_const_lv10_27 : STD_LOGIC_VECTOR (9 downto 0) := "0000100111";
    constant ap_const_lv10_28 : STD_LOGIC_VECTOR (9 downto 0) := "0000101000";
    constant ap_const_lv10_29 : STD_LOGIC_VECTOR (9 downto 0) := "0000101001";
    constant ap_const_lv10_2A : STD_LOGIC_VECTOR (9 downto 0) := "0000101010";
    constant ap_const_lv10_2B : STD_LOGIC_VECTOR (9 downto 0) := "0000101011";
    constant ap_const_lv10_2C : STD_LOGIC_VECTOR (9 downto 0) := "0000101100";
    constant ap_const_lv10_2D : STD_LOGIC_VECTOR (9 downto 0) := "0000101101";
    constant ap_const_lv10_2E : STD_LOGIC_VECTOR (9 downto 0) := "0000101110";
    constant ap_const_lv8_34 : STD_LOGIC_VECTOR (7 downto 0) := "00110100";
    constant ap_const_lv10_2F : STD_LOGIC_VECTOR (9 downto 0) := "0000101111";
    constant ap_const_lv10_30 : STD_LOGIC_VECTOR (9 downto 0) := "0000110000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage48 : signal is "none";
    signal ap_block_state49_pp0_stage48_iter0 : BOOLEAN;
    signal ap_block_pp0_stage48_subdone : BOOLEAN;
    signal icmp_ln51_reg_4076 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage48 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln48_cast_fu_1099_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln48_cast_reg_3948 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast3_cast_fu_1103_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast3_cast_reg_3953 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast2_cast_fu_1107_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast2_cast_reg_3958 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast1_cast_fu_1111_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast1_cast_reg_3963 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvars_iv_next57_cast_cast_fu_1115_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvars_iv_next57_cast_cast_reg_3968 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast_cast_fu_1119_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast_cast_reg_3973 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_cast_fu_1123_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln51_cast_reg_3978 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln63_5_cast_fu_1127_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln63_5_cast_reg_3989 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln63_4_cast_fu_1131_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln63_4_cast_reg_4000 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln63_3_cast_fu_1135_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln63_3_cast_reg_4011 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln63_2_cast_fu_1139_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln63_2_cast_reg_4022 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln63_1_cast_fu_1143_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln63_1_cast_reg_4033 : STD_LOGIC_VECTOR (12 downto 0);
    signal phi_mul_load_reg_4044 : STD_LOGIC_VECTOR (7 downto 0);
    signal chan_1_reg_4055 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln48_fu_1186_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln48_reg_4060 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_fu_1192_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_reg_4071 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln51_fu_1198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1317_2_fu_1204_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1317_2_reg_4080 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state51_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal trunc_ln1319_fu_1231_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1319_reg_4095 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state52_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal mul_ln1317_fu_1252_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1317_reg_4157 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state53_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal mul_ln1317_1_fu_1293_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1317_1_reg_4188 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state54_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal mul_ln1317_2_fu_1334_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1317_2_reg_4219 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal mul_ln1317_3_fu_1386_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1317_3_reg_4255 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal mul_ln1317_4_fu_1444_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1317_4_reg_4291 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal mul_ln1317_5_fu_1502_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1317_5_reg_4327 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_state23_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_state24_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_state25_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal ap_block_state26_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_pp0_stage25_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal ap_block_state27_pp0_stage26_iter0 : BOOLEAN;
    signal ap_block_pp0_stage26_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage27 : signal is "none";
    signal ap_block_state28_pp0_stage27_iter0 : BOOLEAN;
    signal ap_block_pp0_stage27_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage28 : signal is "none";
    signal ap_block_state29_pp0_stage28_iter0 : BOOLEAN;
    signal ap_block_pp0_stage28_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage29 : signal is "none";
    signal ap_block_state30_pp0_stage29_iter0 : BOOLEAN;
    signal ap_block_pp0_stage29_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage30 : signal is "none";
    signal ap_block_state31_pp0_stage30_iter0 : BOOLEAN;
    signal ap_block_pp0_stage30_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage31 : signal is "none";
    signal ap_block_state32_pp0_stage31_iter0 : BOOLEAN;
    signal ap_block_pp0_stage31_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage32 : signal is "none";
    signal ap_block_state33_pp0_stage32_iter0 : BOOLEAN;
    signal ap_block_pp0_stage32_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage33 : signal is "none";
    signal ap_block_state34_pp0_stage33_iter0 : BOOLEAN;
    signal ap_block_pp0_stage33_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage34 : signal is "none";
    signal ap_block_state35_pp0_stage34_iter0 : BOOLEAN;
    signal ap_block_pp0_stage34_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage35 : signal is "none";
    signal ap_block_state36_pp0_stage35_iter0 : BOOLEAN;
    signal ap_block_pp0_stage35_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage36 : signal is "none";
    signal ap_block_state37_pp0_stage36_iter0 : BOOLEAN;
    signal ap_block_pp0_stage36_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage37 : signal is "none";
    signal ap_block_state38_pp0_stage37_iter0 : BOOLEAN;
    signal ap_block_pp0_stage37_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage38 : signal is "none";
    signal ap_block_state39_pp0_stage38_iter0 : BOOLEAN;
    signal ap_block_pp0_stage38_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage39 : signal is "none";
    signal ap_block_state40_pp0_stage39_iter0 : BOOLEAN;
    signal ap_block_pp0_stage39_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage40 : signal is "none";
    signal ap_block_state41_pp0_stage40_iter0 : BOOLEAN;
    signal ap_block_pp0_stage40_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage41 : signal is "none";
    signal ap_block_state42_pp0_stage41_iter0 : BOOLEAN;
    signal ap_block_pp0_stage41_11001 : BOOLEAN;
    signal add_ln1317_47_fu_3004_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_47_reg_5188 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_49_fu_3008_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_49_reg_5193 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_50_fu_3012_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_50_reg_5198 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_51_fu_3016_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_51_reg_5203 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_52_fu_3020_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_52_reg_5208 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_53_fu_3024_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_53_reg_5213 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_54_fu_3028_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_54_reg_5218 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_55_fu_3032_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_55_reg_5223 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage42 : signal is "none";
    signal ap_block_state43_pp0_stage42_iter0 : BOOLEAN;
    signal ap_block_pp0_stage42_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage43 : signal is "none";
    signal ap_block_state44_pp0_stage43_iter0 : BOOLEAN;
    signal ap_block_pp0_stage43_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage44 : signal is "none";
    signal ap_block_state45_pp0_stage44_iter0 : BOOLEAN;
    signal ap_block_pp0_stage44_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage45 : signal is "none";
    signal ap_block_state46_pp0_stage45_iter0 : BOOLEAN;
    signal ap_block_pp0_stage45_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage46 : signal is "none";
    signal ap_block_state47_pp0_stage46_iter0 : BOOLEAN;
    signal ap_block_pp0_stage46_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage47 : signal is "none";
    signal ap_block_state48_pp0_stage47_iter0 : BOOLEAN;
    signal ap_block_pp0_stage47_11001 : BOOLEAN;
    signal ap_block_pp0_stage48_11001 : BOOLEAN;
    signal X_buf_addr_48_reg_5403 : STD_LOGIC_VECTOR (12 downto 0);
    signal W_buf_addr_48_reg_5413 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal zext_ln1317_3_fu_1212_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln1319_fu_1226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_4_fu_1239_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln1319_1_fu_1263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_5_fu_1280_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln1319_2_fu_1304_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_6_fu_1321_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln1319_3_fu_1345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_7_fu_1373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln1319_4_fu_1397_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_8_fu_1431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln1319_5_fu_1455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_9_fu_1489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln1319_6_fu_1513_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_11_fu_1547_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal zext_ln1319_7_fu_1557_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_12_fu_1591_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal zext_ln1319_8_fu_1601_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_13_fu_1635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal zext_ln1319_9_fu_1645_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_14_fu_1679_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal zext_ln1319_10_fu_1689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_15_fu_1723_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal zext_ln1319_11_fu_1733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_16_fu_1767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal zext_ln1319_12_fu_1777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_17_fu_1811_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal zext_ln1319_13_fu_1821_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_19_fu_1855_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal zext_ln1319_14_fu_1865_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_20_fu_1899_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal zext_ln1319_15_fu_1909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_21_fu_1943_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal zext_ln1319_16_fu_1953_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_22_fu_1987_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal zext_ln1319_17_fu_1997_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_23_fu_2031_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal zext_ln1319_18_fu_2041_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_24_fu_2075_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal zext_ln1319_19_fu_2085_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_25_fu_2119_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal zext_ln1319_20_fu_2129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_27_fu_2163_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal zext_ln1319_21_fu_2173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_28_fu_2207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal zext_ln1319_22_fu_2217_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_29_fu_2251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal zext_ln1319_23_fu_2261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_30_fu_2295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage25 : BOOLEAN;
    signal zext_ln1319_24_fu_2305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_31_fu_2339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage26 : BOOLEAN;
    signal zext_ln1319_25_fu_2349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_32_fu_2383_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage27 : BOOLEAN;
    signal zext_ln1319_26_fu_2393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_33_fu_2427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage28 : BOOLEAN;
    signal zext_ln1319_27_fu_2437_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_35_fu_2471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage29 : BOOLEAN;
    signal zext_ln1319_28_fu_2481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_36_fu_2515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage30 : BOOLEAN;
    signal zext_ln1319_29_fu_2525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_37_fu_2559_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage31 : BOOLEAN;
    signal zext_ln1319_30_fu_2569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_38_fu_2603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage32 : BOOLEAN;
    signal zext_ln1319_31_fu_2613_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_39_fu_2647_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage33 : BOOLEAN;
    signal zext_ln1319_32_fu_2657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_40_fu_2691_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage34 : BOOLEAN;
    signal zext_ln1319_33_fu_2701_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_41_fu_2735_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage35 : BOOLEAN;
    signal zext_ln1319_34_fu_2745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_43_fu_2779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage36 : BOOLEAN;
    signal zext_ln1319_35_fu_2789_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_44_fu_2823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage37 : BOOLEAN;
    signal zext_ln1319_36_fu_2833_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_45_fu_2867_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage38 : BOOLEAN;
    signal zext_ln1319_37_fu_2877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_46_fu_2911_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage39 : BOOLEAN;
    signal zext_ln1319_38_fu_2921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_47_fu_2955_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage40 : BOOLEAN;
    signal zext_ln1319_39_fu_2965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_48_fu_2999_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage41 : BOOLEAN;
    signal zext_ln1319_40_fu_3041_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_49_fu_3071_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage42 : BOOLEAN;
    signal zext_ln1319_41_fu_3080_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_51_fu_3110_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage43 : BOOLEAN;
    signal zext_ln1319_42_fu_3119_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_52_fu_3149_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage44 : BOOLEAN;
    signal zext_ln1319_43_fu_3158_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_53_fu_3188_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage45 : BOOLEAN;
    signal zext_ln1319_44_fu_3197_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_54_fu_3227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage46 : BOOLEAN;
    signal zext_ln1319_45_fu_3236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_55_fu_3266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage47 : BOOLEAN;
    signal zext_ln1319_46_fu_3275_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1317_56_fu_3310_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage48 : BOOLEAN;
    signal zext_ln1317_57_fu_3314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_47_fu_3323_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1319_48_fu_3333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1317_56_fu_3305_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_phi_mul_load : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal conv_i_i96_6_lcssa21_fu_188 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln63_cast_fu_1091_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_conv_i_i96_6_lcssa21_load_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal chan_fu_192 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln51_fu_3338_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_chan_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage48_01001 : BOOLEAN;
    signal zext_ln1317_1_fu_1172_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1317_fu_1176_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln48_fu_1186_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln48_fu_1186_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln1319_cast_fu_1095_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1317_fu_1168_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1317_1_fu_1207_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1319_fu_1220_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1319_fu_1220_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1317_2_fu_1235_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_8_fu_1244_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_fu_1252_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_fu_1252_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_1_fu_1258_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1317_3_fu_1276_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_16_fu_1285_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_1_fu_1293_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_1_fu_1293_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_2_fu_1299_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1317_4_fu_1317_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_24_fu_1326_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_2_fu_1334_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_2_fu_1334_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_3_fu_1340_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1317_5_fu_1369_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_32_fu_1378_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_3_fu_1386_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_3_fu_1386_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_4_fu_1392_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_1402_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3480_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_s_fu_1402_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_6_fu_1427_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_40_fu_1436_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_4_fu_1444_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_4_fu_1444_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_5_fu_1450_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_1460_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3489_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_3_fu_1460_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_7_fu_1485_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1317_48_fu_1494_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_5_fu_1502_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1317_5_fu_1502_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1319_6_fu_1508_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_1518_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3498_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_4_fu_1518_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_9_fu_1543_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_7_fu_1552_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_1562_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3507_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_5_fu_1562_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_10_fu_1587_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_8_fu_1596_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_1606_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3516_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_6_fu_1606_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_11_fu_1631_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_9_fu_1640_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_1650_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3525_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_7_fu_1650_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_12_fu_1675_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_10_fu_1684_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_1694_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3534_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_8_fu_1694_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_13_fu_1719_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_11_fu_1728_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_9_fu_1738_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3543_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_9_fu_1738_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_14_fu_1763_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_12_fu_1772_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_fu_1782_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3552_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_10_fu_1782_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_15_fu_1807_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_13_fu_1816_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_11_fu_1826_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3561_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_11_fu_1826_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_17_fu_1851_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_14_fu_1860_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_fu_1870_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3570_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_12_fu_1870_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_18_fu_1895_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_15_fu_1904_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_13_fu_1914_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3579_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_13_fu_1914_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_19_fu_1939_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_16_fu_1948_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_fu_1958_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3588_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_14_fu_1958_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_20_fu_1983_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_17_fu_1992_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_15_fu_2002_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3597_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_15_fu_2002_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_21_fu_2027_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_18_fu_2036_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_fu_2046_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3606_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_16_fu_2046_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_22_fu_2071_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_19_fu_2080_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_17_fu_2090_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3615_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_17_fu_2090_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_23_fu_2115_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_20_fu_2124_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_18_fu_2134_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3624_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_18_fu_2134_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_25_fu_2159_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_21_fu_2168_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_19_fu_2178_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3633_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_19_fu_2178_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_26_fu_2203_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_22_fu_2212_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_20_fu_2222_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3642_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_20_fu_2222_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_27_fu_2247_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_23_fu_2256_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_21_fu_2266_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3651_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_21_fu_2266_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_28_fu_2291_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_24_fu_2300_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_22_fu_2310_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3660_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_22_fu_2310_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_29_fu_2335_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_25_fu_2344_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_23_fu_2354_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3669_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_23_fu_2354_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_30_fu_2379_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_26_fu_2388_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_24_fu_2398_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3678_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_24_fu_2398_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_31_fu_2423_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_27_fu_2432_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_25_fu_2442_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3687_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_25_fu_2442_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_33_fu_2467_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_28_fu_2476_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_26_fu_2486_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3696_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_26_fu_2486_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_34_fu_2511_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_29_fu_2520_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_27_fu_2530_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3705_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_27_fu_2530_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_35_fu_2555_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_30_fu_2564_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_28_fu_2574_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3714_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_28_fu_2574_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_36_fu_2599_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_31_fu_2608_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_29_fu_2618_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3723_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_29_fu_2618_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_37_fu_2643_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_32_fu_2652_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_30_fu_2662_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3732_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_30_fu_2662_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_38_fu_2687_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_33_fu_2696_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_31_fu_2706_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3741_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_31_fu_2706_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_39_fu_2731_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_34_fu_2740_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_32_fu_2750_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3750_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_32_fu_2750_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_41_fu_2775_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_35_fu_2784_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_33_fu_2794_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3759_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_33_fu_2794_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_42_fu_2819_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_36_fu_2828_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_34_fu_2838_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3768_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_34_fu_2838_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_43_fu_2863_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_37_fu_2872_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_35_fu_2882_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3777_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_35_fu_2882_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_44_fu_2907_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_38_fu_2916_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_36_fu_2926_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3786_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_36_fu_2926_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_45_fu_2951_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_39_fu_2960_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_37_fu_2970_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3795_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_37_fu_2970_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1317_46_fu_2995_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1319_40_fu_3036_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_38_fu_3046_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3804_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_38_fu_3046_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1319_41_fu_3075_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_39_fu_3085_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3813_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_39_fu_3085_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1319_42_fu_3114_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_40_fu_3124_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3822_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_40_fu_3124_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1319_43_fu_3153_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_41_fu_3163_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3831_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_41_fu_3163_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1319_44_fu_3192_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_42_fu_3202_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3840_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_42_fu_3202_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1319_45_fu_3231_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_43_fu_3241_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3849_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_43_fu_3241_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1319_46_fu_3270_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_44_fu_3280_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3858_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_44_fu_3280_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1319_47_fu_3318_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1319_48_fu_3328_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_45_fu_3343_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3867_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_45_fu_3343_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_46_fu_3378_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3876_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_46_fu_3378_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_fu_3403_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3885_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_47_fu_3403_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_48_fu_3428_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3894_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_48_fu_3428_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_49_fu_3445_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3903_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_49_fu_3445_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln864_s_fu_3462_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3912_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3480_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3489_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3498_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3507_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3516_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3525_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3534_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3543_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3552_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3561_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3570_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3579_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3588_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3597_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3606_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3615_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3624_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3633_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3642_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3651_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3660_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3669_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3678_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3687_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3696_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3705_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3714_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3723_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3732_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3741_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3750_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3759_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3768_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3777_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3786_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3795_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3804_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3813_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3822_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3831_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3840_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3849_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3858_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3867_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3876_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3885_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3894_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3903_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_3912_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (48 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_block_pp0_stage25_subdone : BOOLEAN;
    signal ap_block_pp0_stage26_subdone : BOOLEAN;
    signal ap_block_pp0_stage27_subdone : BOOLEAN;
    signal ap_block_pp0_stage28_subdone : BOOLEAN;
    signal ap_block_pp0_stage29_subdone : BOOLEAN;
    signal ap_block_pp0_stage30_subdone : BOOLEAN;
    signal ap_block_pp0_stage31_subdone : BOOLEAN;
    signal ap_block_pp0_stage32_subdone : BOOLEAN;
    signal ap_block_pp0_stage33_subdone : BOOLEAN;
    signal ap_block_pp0_stage34_subdone : BOOLEAN;
    signal ap_block_pp0_stage35_subdone : BOOLEAN;
    signal ap_block_pp0_stage36_subdone : BOOLEAN;
    signal ap_block_pp0_stage37_subdone : BOOLEAN;
    signal ap_block_pp0_stage38_subdone : BOOLEAN;
    signal ap_block_pp0_stage39_subdone : BOOLEAN;
    signal ap_block_pp0_stage40_subdone : BOOLEAN;
    signal ap_block_pp0_stage41_subdone : BOOLEAN;
    signal ap_block_pp0_stage42_subdone : BOOLEAN;
    signal ap_block_pp0_stage43_subdone : BOOLEAN;
    signal ap_block_pp0_stage44_subdone : BOOLEAN;
    signal ap_block_pp0_stage45_subdone : BOOLEAN;
    signal ap_block_pp0_stage46_subdone : BOOLEAN;
    signal ap_block_pp0_stage47_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln1317_1_fu_1293_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1317_2_fu_1334_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1317_3_fu_1386_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1317_4_fu_1444_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1317_5_fu_1502_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1317_fu_1252_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln48_fu_1186_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component tiled_conv_mul_8ns_7ns_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component tiled_conv_mul_7s_7ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (28 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component tiled_conv_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_8ns_7ns_13_1_1_U29 : component tiled_conv_mul_8ns_7ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln48_fu_1186_p0,
        din1 => mul_ln48_fu_1186_p1,
        dout => mul_ln48_fu_1186_p2);

    mul_7s_7ns_14_1_1_U30 : component tiled_conv_mul_7s_7ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 7,
        dout_WIDTH => 14)
    port map (
        din0 => add_ln1319_reg_4071,
        din1 => mul_ln1319_fu_1220_p1,
        dout => mul_ln1319_fu_1220_p2);

    mul_8ns_7ns_13_1_1_U31 : component tiled_conv_mul_8ns_7ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln1317_fu_1252_p0,
        din1 => mul_ln1317_fu_1252_p1,
        dout => mul_ln1317_fu_1252_p2);

    mul_8ns_7ns_13_1_1_U32 : component tiled_conv_mul_8ns_7ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln1317_1_fu_1293_p0,
        din1 => mul_ln1317_1_fu_1293_p1,
        dout => mul_ln1317_1_fu_1293_p2);

    mul_8ns_7ns_13_1_1_U33 : component tiled_conv_mul_8ns_7ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln1317_2_fu_1334_p0,
        din1 => mul_ln1317_2_fu_1334_p1,
        dout => mul_ln1317_2_fu_1334_p2);

    mul_8ns_7ns_13_1_1_U34 : component tiled_conv_mul_8ns_7ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln1317_3_fu_1386_p0,
        din1 => mul_ln1317_3_fu_1386_p1,
        dout => mul_ln1317_3_fu_1386_p2);

    mul_8ns_7ns_13_1_1_U35 : component tiled_conv_mul_8ns_7ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln1317_4_fu_1444_p0,
        din1 => mul_ln1317_4_fu_1444_p1,
        dout => mul_ln1317_4_fu_1444_p2);

    mul_8ns_7ns_13_1_1_U36 : component tiled_conv_mul_8ns_7ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 7,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln1317_5_fu_1502_p0,
        din1 => mul_ln1317_5_fu_1502_p1,
        dout => mul_ln1317_5_fu_1502_p2);

    mac_muladd_16s_16s_29ns_29_4_1_U37 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3480_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3480_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U38 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3489_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3489_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U39 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3498_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3498_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U40 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3507_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3507_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U41 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3516_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3516_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U42 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3525_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3525_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U43 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3534_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3534_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U44 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3543_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3543_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U45 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3552_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3552_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U46 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3561_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3561_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U47 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3570_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3570_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U48 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3579_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3579_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U49 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3588_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3588_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U50 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3597_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3597_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U51 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3606_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3606_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U52 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3615_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3615_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U53 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3624_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3624_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U54 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3633_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3633_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U55 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3642_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3642_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U56 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3651_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3651_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U57 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3660_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3660_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U58 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3669_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3669_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U59 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3678_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3678_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U60 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3687_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3687_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U61 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3696_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3696_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U62 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3705_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3705_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U63 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3714_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3714_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U64 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3723_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3723_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U65 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3732_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3732_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U66 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3741_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3741_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U67 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3750_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3750_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U68 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3759_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3759_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U69 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3768_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3768_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U70 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3777_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3777_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U71 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3786_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3786_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U72 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3795_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3795_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U73 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3804_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3804_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U74 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3813_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3813_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U75 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3822_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3822_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U76 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3831_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3831_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U77 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3840_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3840_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U78 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3849_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3849_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U79 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3858_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3858_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U80 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3867_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3867_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U81 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3876_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3876_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U82 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3885_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3885_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U83 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3894_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3894_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U84 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3903_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3903_p3);

    mac_muladd_16s_16s_29ns_29_4_1_U85 : component tiled_conv_mac_muladd_16s_16s_29ns_29_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 29,
        dout_WIDTH => 29)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => W_buf_q0,
        din1 => X_buf_q0,
        din2 => grp_fu_3912_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3912_p3);

    flow_control_loop_pipe_sequential_init_U : component tiled_conv_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage48,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage48_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage48) or ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage48_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    chan_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                chan_fu_192 <= ap_const_lv2_0;
            elsif (((icmp_ln51_reg_4076 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage48_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48))) then 
                chan_fu_192 <= add_ln51_fu_3338_p2;
            end if; 
        end if;
    end process;

    conv_i_i96_6_lcssa21_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                conv_i_i96_6_lcssa21_fu_188 <= zext_ln63_cast_fu_1091_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_i_i96_6_lcssa21_fu_188 <= trunc_ln864_s_fu_3462_p1(28 downto 13);
            end if; 
        end if;
    end process;

    phi_mul_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                phi_mul_fu_184 <= ap_const_lv8_0;
            elsif (((icmp_ln51_reg_4076 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage48_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48))) then 
                phi_mul_fu_184 <= add_ln1317_56_fu_3305_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage48_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48))) then
                W_buf_addr_48_reg_5413 <= zext_ln1319_48_fu_3333_p1(10 - 1 downto 0);
                X_buf_addr_48_reg_5403 <= zext_ln1317_57_fu_3314_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage41_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41))) then
                add_ln1317_47_reg_5188 <= add_ln1317_47_fu_3004_p2;
                add_ln1317_49_reg_5193 <= add_ln1317_49_fu_3008_p2;
                add_ln1317_50_reg_5198 <= add_ln1317_50_fu_3012_p2;
                add_ln1317_51_reg_5203 <= add_ln1317_51_fu_3016_p2;
                add_ln1317_52_reg_5208 <= add_ln1317_52_fu_3020_p2;
                add_ln1317_53_reg_5213 <= add_ln1317_53_fu_3024_p2;
                add_ln1317_54_reg_5218 <= add_ln1317_54_fu_3028_p2;
                add_ln1317_55_reg_5223 <= add_ln1317_55_fu_3032_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln1319_reg_4071 <= add_ln1319_fu_1192_p2;
                chan_1_reg_4055 <= ap_sig_allocacmp_chan_1;
                icmp_ln51_reg_4076 <= icmp_ln51_fu_1198_p2;
                    indvars_iv_next57_cast_cast_reg_3968(5 downto 0) <= indvars_iv_next57_cast_cast_fu_1115_p1(5 downto 0);
                mul_ln48_reg_4060 <= mul_ln48_fu_1186_p2;
                    p_cast1_cast_reg_3963(5 downto 0) <= p_cast1_cast_fu_1111_p1(5 downto 0);
                    p_cast2_cast_reg_3958(5 downto 0) <= p_cast2_cast_fu_1107_p1(5 downto 0);
                    p_cast3_cast_reg_3953(5 downto 0) <= p_cast3_cast_fu_1103_p1(5 downto 0);
                    p_cast_cast_reg_3973(5 downto 0) <= p_cast_cast_fu_1119_p1(5 downto 0);
                phi_mul_load_reg_4044 <= ap_sig_allocacmp_phi_mul_load;
                    zext_ln48_cast_reg_3948(5 downto 0) <= zext_ln48_cast_fu_1099_p1(5 downto 0);
                    zext_ln51_cast_reg_3978(5 downto 0) <= zext_ln51_cast_fu_1123_p1(5 downto 0);
                    zext_ln63_1_cast_reg_4033(5 downto 0) <= zext_ln63_1_cast_fu_1143_p1(5 downto 0);
                    zext_ln63_2_cast_reg_4022(5 downto 0) <= zext_ln63_2_cast_fu_1139_p1(5 downto 0);
                    zext_ln63_3_cast_reg_4011(5 downto 0) <= zext_ln63_3_cast_fu_1135_p1(5 downto 0);
                    zext_ln63_4_cast_reg_4000(5 downto 0) <= zext_ln63_4_cast_fu_1131_p1(5 downto 0);
                    zext_ln63_5_cast_reg_3989(5 downto 0) <= zext_ln63_5_cast_fu_1127_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_ln1317_1_reg_4188 <= mul_ln1317_1_fu_1293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_ln1317_2_reg_4219 <= mul_ln1317_2_fu_1334_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul_ln1317_3_reg_4255 <= mul_ln1317_3_fu_1386_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_ln1317_4_reg_4291 <= mul_ln1317_4_fu_1444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_ln1317_5_reg_4327 <= mul_ln1317_5_fu_1502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_ln1317_reg_4157 <= mul_ln1317_fu_1252_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                trunc_ln1319_reg_4095 <= trunc_ln1319_fu_1231_p1;
                    zext_ln1317_2_reg_4080(5 downto 0) <= zext_ln1317_2_fu_1204_p1(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln48_cast_reg_3948(7 downto 6) <= "00";
    p_cast3_cast_reg_3953(7 downto 6) <= "00";
    p_cast2_cast_reg_3958(7 downto 6) <= "00";
    p_cast1_cast_reg_3963(7 downto 6) <= "00";
    indvars_iv_next57_cast_cast_reg_3968(7 downto 6) <= "00";
    p_cast_cast_reg_3973(7 downto 6) <= "00";
    zext_ln51_cast_reg_3978(12 downto 6) <= "0000000";
    zext_ln63_5_cast_reg_3989(12 downto 6) <= "0000000";
    zext_ln63_4_cast_reg_4000(12 downto 6) <= "0000000";
    zext_ln63_3_cast_reg_4011(12 downto 6) <= "0000000";
    zext_ln63_2_cast_reg_4022(12 downto 6) <= "0000000";
    zext_ln63_1_cast_reg_4033(12 downto 6) <= "0000000";
    zext_ln1317_2_reg_4080(12 downto 6) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage48_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone, ap_block_pp0_stage24_subdone, ap_block_pp0_stage25_subdone, ap_block_pp0_stage26_subdone, ap_block_pp0_stage27_subdone, ap_block_pp0_stage28_subdone, ap_block_pp0_stage29_subdone, ap_block_pp0_stage30_subdone, ap_block_pp0_stage31_subdone, ap_block_pp0_stage32_subdone, ap_block_pp0_stage33_subdone, ap_block_pp0_stage34_subdone, ap_block_pp0_stage35_subdone, ap_block_pp0_stage36_subdone, ap_block_pp0_stage37_subdone, ap_block_pp0_stage38_subdone, ap_block_pp0_stage39_subdone, ap_block_pp0_stage40_subdone, ap_block_pp0_stage41_subdone, ap_block_pp0_stage42_subdone, ap_block_pp0_stage43_subdone, ap_block_pp0_stage44_subdone, ap_block_pp0_stage45_subdone, ap_block_pp0_stage46_subdone, ap_block_pp0_stage47_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage25_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when ap_ST_fsm_pp0_stage26 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage26_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                end if;
            when ap_ST_fsm_pp0_stage27 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage27_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                end if;
            when ap_ST_fsm_pp0_stage28 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage28_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                end if;
            when ap_ST_fsm_pp0_stage29 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage29_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                end if;
            when ap_ST_fsm_pp0_stage30 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage30_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                end if;
            when ap_ST_fsm_pp0_stage31 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage31_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                end if;
            when ap_ST_fsm_pp0_stage32 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage32_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                end if;
            when ap_ST_fsm_pp0_stage33 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage33_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                end if;
            when ap_ST_fsm_pp0_stage34 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage34_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                end if;
            when ap_ST_fsm_pp0_stage35 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage35_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                end if;
            when ap_ST_fsm_pp0_stage36 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage36_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                end if;
            when ap_ST_fsm_pp0_stage37 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage37_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                end if;
            when ap_ST_fsm_pp0_stage38 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage38_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                end if;
            when ap_ST_fsm_pp0_stage39 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage39_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                end if;
            when ap_ST_fsm_pp0_stage40 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage40_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage41;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage40;
                end if;
            when ap_ST_fsm_pp0_stage41 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage41_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage42;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage41;
                end if;
            when ap_ST_fsm_pp0_stage42 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage42_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage43;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage42;
                end if;
            when ap_ST_fsm_pp0_stage43 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage43_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage44;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage43;
                end if;
            when ap_ST_fsm_pp0_stage44 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage44_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage44;
                end if;
            when ap_ST_fsm_pp0_stage45 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage45_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage46;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage45;
                end if;
            when ap_ST_fsm_pp0_stage46 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage46_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage47;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage46;
                end if;
            when ap_ST_fsm_pp0_stage47 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage47_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage48;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage47;
                end if;
            when ap_ST_fsm_pp0_stage48 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage48_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage48;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    W_buf_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage48, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage32, ap_CS_fsm_pp0_stage33, ap_CS_fsm_pp0_stage34, ap_CS_fsm_pp0_stage35, ap_CS_fsm_pp0_stage36, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage38, ap_CS_fsm_pp0_stage39, ap_CS_fsm_pp0_stage40, ap_CS_fsm_pp0_stage41, ap_CS_fsm_pp0_stage42, ap_CS_fsm_pp0_stage43, ap_CS_fsm_pp0_stage44, ap_CS_fsm_pp0_stage45, ap_CS_fsm_pp0_stage46, ap_CS_fsm_pp0_stage47, W_buf_addr_48_reg_5413, ap_block_pp0_stage1, zext_ln1319_fu_1226_p1, ap_block_pp0_stage2, zext_ln1319_1_fu_1263_p1, ap_block_pp0_stage3, zext_ln1319_2_fu_1304_p1, ap_block_pp0_stage4, zext_ln1319_3_fu_1345_p1, ap_block_pp0_stage5, zext_ln1319_4_fu_1397_p1, ap_block_pp0_stage6, zext_ln1319_5_fu_1455_p1, ap_block_pp0_stage7, zext_ln1319_6_fu_1513_p1, ap_block_pp0_stage8, zext_ln1319_7_fu_1557_p1, ap_block_pp0_stage9, zext_ln1319_8_fu_1601_p1, ap_block_pp0_stage10, zext_ln1319_9_fu_1645_p1, ap_block_pp0_stage11, zext_ln1319_10_fu_1689_p1, ap_block_pp0_stage12, zext_ln1319_11_fu_1733_p1, ap_block_pp0_stage13, zext_ln1319_12_fu_1777_p1, ap_block_pp0_stage14, zext_ln1319_13_fu_1821_p1, ap_block_pp0_stage15, zext_ln1319_14_fu_1865_p1, ap_block_pp0_stage16, zext_ln1319_15_fu_1909_p1, ap_block_pp0_stage17, zext_ln1319_16_fu_1953_p1, ap_block_pp0_stage18, zext_ln1319_17_fu_1997_p1, ap_block_pp0_stage19, zext_ln1319_18_fu_2041_p1, ap_block_pp0_stage20, zext_ln1319_19_fu_2085_p1, ap_block_pp0_stage21, zext_ln1319_20_fu_2129_p1, ap_block_pp0_stage22, zext_ln1319_21_fu_2173_p1, ap_block_pp0_stage23, zext_ln1319_22_fu_2217_p1, ap_block_pp0_stage24, zext_ln1319_23_fu_2261_p1, ap_block_pp0_stage25, zext_ln1319_24_fu_2305_p1, ap_block_pp0_stage26, zext_ln1319_25_fu_2349_p1, ap_block_pp0_stage27, zext_ln1319_26_fu_2393_p1, ap_block_pp0_stage28, zext_ln1319_27_fu_2437_p1, ap_block_pp0_stage29, zext_ln1319_28_fu_2481_p1, ap_block_pp0_stage30, zext_ln1319_29_fu_2525_p1, ap_block_pp0_stage31, zext_ln1319_30_fu_2569_p1, ap_block_pp0_stage32, zext_ln1319_31_fu_2613_p1, ap_block_pp0_stage33, zext_ln1319_32_fu_2657_p1, ap_block_pp0_stage34, zext_ln1319_33_fu_2701_p1, ap_block_pp0_stage35, zext_ln1319_34_fu_2745_p1, ap_block_pp0_stage36, zext_ln1319_35_fu_2789_p1, ap_block_pp0_stage37, zext_ln1319_36_fu_2833_p1, ap_block_pp0_stage38, zext_ln1319_37_fu_2877_p1, ap_block_pp0_stage39, zext_ln1319_38_fu_2921_p1, ap_block_pp0_stage40, zext_ln1319_39_fu_2965_p1, ap_block_pp0_stage41, zext_ln1319_40_fu_3041_p1, ap_block_pp0_stage42, zext_ln1319_41_fu_3080_p1, ap_block_pp0_stage43, zext_ln1319_42_fu_3119_p1, ap_block_pp0_stage44, zext_ln1319_43_fu_3158_p1, ap_block_pp0_stage45, zext_ln1319_44_fu_3197_p1, ap_block_pp0_stage46, zext_ln1319_45_fu_3236_p1, ap_block_pp0_stage47, zext_ln1319_46_fu_3275_p1, ap_block_pp0_stage48, zext_ln1319_47_fu_3323_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            W_buf_address0 <= W_buf_addr_48_reg_5413;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage48) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48))) then 
            W_buf_address0 <= zext_ln1319_47_fu_3323_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage47) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage47))) then 
            W_buf_address0 <= zext_ln1319_46_fu_3275_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage46) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage46))) then 
            W_buf_address0 <= zext_ln1319_45_fu_3236_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage45) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45))) then 
            W_buf_address0 <= zext_ln1319_44_fu_3197_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage44) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44))) then 
            W_buf_address0 <= zext_ln1319_43_fu_3158_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage43) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43))) then 
            W_buf_address0 <= zext_ln1319_42_fu_3119_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage42) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage42))) then 
            W_buf_address0 <= zext_ln1319_41_fu_3080_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage41) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41))) then 
            W_buf_address0 <= zext_ln1319_40_fu_3041_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage40) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40))) then 
            W_buf_address0 <= zext_ln1319_39_fu_2965_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage39) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39))) then 
            W_buf_address0 <= zext_ln1319_38_fu_2921_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage38) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38))) then 
            W_buf_address0 <= zext_ln1319_37_fu_2877_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage37) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37))) then 
            W_buf_address0 <= zext_ln1319_36_fu_2833_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage36) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36))) then 
            W_buf_address0 <= zext_ln1319_35_fu_2789_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage35) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35))) then 
            W_buf_address0 <= zext_ln1319_34_fu_2745_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage34) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34))) then 
            W_buf_address0 <= zext_ln1319_33_fu_2701_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage33) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33))) then 
            W_buf_address0 <= zext_ln1319_32_fu_2657_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage32) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32))) then 
            W_buf_address0 <= zext_ln1319_31_fu_2613_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage31) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31))) then 
            W_buf_address0 <= zext_ln1319_30_fu_2569_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage30) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30))) then 
            W_buf_address0 <= zext_ln1319_29_fu_2525_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage29) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29))) then 
            W_buf_address0 <= zext_ln1319_28_fu_2481_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage28) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28))) then 
            W_buf_address0 <= zext_ln1319_27_fu_2437_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27))) then 
            W_buf_address0 <= zext_ln1319_26_fu_2393_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage26) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26))) then 
            W_buf_address0 <= zext_ln1319_25_fu_2349_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
            W_buf_address0 <= zext_ln1319_24_fu_2305_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
            W_buf_address0 <= zext_ln1319_23_fu_2261_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then 
            W_buf_address0 <= zext_ln1319_22_fu_2217_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            W_buf_address0 <= zext_ln1319_21_fu_2173_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
            W_buf_address0 <= zext_ln1319_20_fu_2129_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then 
            W_buf_address0 <= zext_ln1319_19_fu_2085_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            W_buf_address0 <= zext_ln1319_18_fu_2041_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then 
            W_buf_address0 <= zext_ln1319_17_fu_1997_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then 
            W_buf_address0 <= zext_ln1319_16_fu_1953_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            W_buf_address0 <= zext_ln1319_15_fu_1909_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            W_buf_address0 <= zext_ln1319_14_fu_1865_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            W_buf_address0 <= zext_ln1319_13_fu_1821_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            W_buf_address0 <= zext_ln1319_12_fu_1777_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            W_buf_address0 <= zext_ln1319_11_fu_1733_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            W_buf_address0 <= zext_ln1319_10_fu_1689_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            W_buf_address0 <= zext_ln1319_9_fu_1645_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            W_buf_address0 <= zext_ln1319_8_fu_1601_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            W_buf_address0 <= zext_ln1319_7_fu_1557_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            W_buf_address0 <= zext_ln1319_6_fu_1513_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            W_buf_address0 <= zext_ln1319_5_fu_1455_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            W_buf_address0 <= zext_ln1319_4_fu_1397_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            W_buf_address0 <= zext_ln1319_3_fu_1345_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            W_buf_address0 <= zext_ln1319_2_fu_1304_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            W_buf_address0 <= zext_ln1319_1_fu_1263_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            W_buf_address0 <= zext_ln1319_fu_1226_p1(10 - 1 downto 0);
        else 
            W_buf_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    W_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage48, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31_11001, ap_CS_fsm_pp0_stage32, ap_block_pp0_stage32_11001, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33_11001, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage34_11001, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage35_11001, ap_CS_fsm_pp0_stage36, ap_block_pp0_stage36_11001, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage37_11001, ap_CS_fsm_pp0_stage38, ap_block_pp0_stage38_11001, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage39_11001, ap_CS_fsm_pp0_stage40, ap_block_pp0_stage40_11001, ap_CS_fsm_pp0_stage41, ap_block_pp0_stage41_11001, ap_CS_fsm_pp0_stage42, ap_block_pp0_stage42_11001, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage43_11001, ap_CS_fsm_pp0_stage44, ap_block_pp0_stage44_11001, ap_CS_fsm_pp0_stage45, ap_block_pp0_stage45_11001, ap_CS_fsm_pp0_stage46, ap_block_pp0_stage46_11001, ap_CS_fsm_pp0_stage47, ap_block_pp0_stage47_11001, ap_block_pp0_stage48_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage38_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38)) or ((ap_const_boolean_0 = ap_block_pp0_stage37_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37)) or ((ap_const_boolean_0 = ap_block_pp0_stage36_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36)) or ((ap_const_boolean_0 = ap_block_pp0_stage35_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35)) or ((ap_const_boolean_0 = ap_block_pp0_stage34_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34)) or ((ap_const_boolean_0 = ap_block_pp0_stage33_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33)) or ((ap_const_boolean_0 = ap_block_pp0_stage32_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32)) or ((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage48_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48)) or ((ap_const_boolean_0 = ap_block_pp0_stage47_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage47)) or ((ap_const_boolean_0 = ap_block_pp0_stage46_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage46)) or ((ap_const_boolean_0 = ap_block_pp0_stage45_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45)) or ((ap_const_boolean_0 = ap_block_pp0_stage44_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44)) or ((ap_const_boolean_0 = ap_block_pp0_stage43_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43)) or ((ap_const_boolean_0 = ap_block_pp0_stage42_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage42)) or ((ap_const_boolean_0 = ap_block_pp0_stage41_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41)) or ((ap_const_boolean_0 = ap_block_pp0_stage40_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40)) or ((ap_const_boolean_0 = ap_block_pp0_stage39_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39)))) then 
            W_buf_ce0 <= ap_const_logic_1;
        else 
            W_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_buf_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage48, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage32, ap_CS_fsm_pp0_stage33, ap_CS_fsm_pp0_stage34, ap_CS_fsm_pp0_stage35, ap_CS_fsm_pp0_stage36, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage38, ap_CS_fsm_pp0_stage39, ap_CS_fsm_pp0_stage40, ap_CS_fsm_pp0_stage41, ap_CS_fsm_pp0_stage42, ap_CS_fsm_pp0_stage43, ap_CS_fsm_pp0_stage44, ap_CS_fsm_pp0_stage45, ap_CS_fsm_pp0_stage46, ap_CS_fsm_pp0_stage47, X_buf_addr_48_reg_5403, zext_ln1317_3_fu_1212_p1, ap_block_pp0_stage1, zext_ln1317_4_fu_1239_p1, ap_block_pp0_stage2, zext_ln1317_5_fu_1280_p1, ap_block_pp0_stage3, zext_ln1317_6_fu_1321_p1, ap_block_pp0_stage4, zext_ln1317_7_fu_1373_p1, ap_block_pp0_stage5, zext_ln1317_8_fu_1431_p1, ap_block_pp0_stage6, zext_ln1317_9_fu_1489_p1, ap_block_pp0_stage7, zext_ln1317_11_fu_1547_p1, ap_block_pp0_stage8, zext_ln1317_12_fu_1591_p1, ap_block_pp0_stage9, zext_ln1317_13_fu_1635_p1, ap_block_pp0_stage10, zext_ln1317_14_fu_1679_p1, ap_block_pp0_stage11, zext_ln1317_15_fu_1723_p1, ap_block_pp0_stage12, zext_ln1317_16_fu_1767_p1, ap_block_pp0_stage13, zext_ln1317_17_fu_1811_p1, ap_block_pp0_stage14, zext_ln1317_19_fu_1855_p1, ap_block_pp0_stage15, zext_ln1317_20_fu_1899_p1, ap_block_pp0_stage16, zext_ln1317_21_fu_1943_p1, ap_block_pp0_stage17, zext_ln1317_22_fu_1987_p1, ap_block_pp0_stage18, zext_ln1317_23_fu_2031_p1, ap_block_pp0_stage19, zext_ln1317_24_fu_2075_p1, ap_block_pp0_stage20, zext_ln1317_25_fu_2119_p1, ap_block_pp0_stage21, zext_ln1317_27_fu_2163_p1, ap_block_pp0_stage22, zext_ln1317_28_fu_2207_p1, ap_block_pp0_stage23, zext_ln1317_29_fu_2251_p1, ap_block_pp0_stage24, zext_ln1317_30_fu_2295_p1, ap_block_pp0_stage25, zext_ln1317_31_fu_2339_p1, ap_block_pp0_stage26, zext_ln1317_32_fu_2383_p1, ap_block_pp0_stage27, zext_ln1317_33_fu_2427_p1, ap_block_pp0_stage28, zext_ln1317_35_fu_2471_p1, ap_block_pp0_stage29, zext_ln1317_36_fu_2515_p1, ap_block_pp0_stage30, zext_ln1317_37_fu_2559_p1, ap_block_pp0_stage31, zext_ln1317_38_fu_2603_p1, ap_block_pp0_stage32, zext_ln1317_39_fu_2647_p1, ap_block_pp0_stage33, zext_ln1317_40_fu_2691_p1, ap_block_pp0_stage34, zext_ln1317_41_fu_2735_p1, ap_block_pp0_stage35, zext_ln1317_43_fu_2779_p1, ap_block_pp0_stage36, zext_ln1317_44_fu_2823_p1, ap_block_pp0_stage37, zext_ln1317_45_fu_2867_p1, ap_block_pp0_stage38, zext_ln1317_46_fu_2911_p1, ap_block_pp0_stage39, zext_ln1317_47_fu_2955_p1, ap_block_pp0_stage40, zext_ln1317_48_fu_2999_p1, ap_block_pp0_stage41, zext_ln1317_49_fu_3071_p1, ap_block_pp0_stage42, zext_ln1317_51_fu_3110_p1, ap_block_pp0_stage43, zext_ln1317_52_fu_3149_p1, ap_block_pp0_stage44, zext_ln1317_53_fu_3188_p1, ap_block_pp0_stage45, zext_ln1317_54_fu_3227_p1, ap_block_pp0_stage46, zext_ln1317_55_fu_3266_p1, ap_block_pp0_stage47, zext_ln1317_56_fu_3310_p1, ap_block_pp0_stage48, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            X_buf_address0 <= X_buf_addr_48_reg_5403;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage48) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48))) then 
            X_buf_address0 <= zext_ln1317_56_fu_3310_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage47) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage47))) then 
            X_buf_address0 <= zext_ln1317_55_fu_3266_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage46) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage46))) then 
            X_buf_address0 <= zext_ln1317_54_fu_3227_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage45) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45))) then 
            X_buf_address0 <= zext_ln1317_53_fu_3188_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage44) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44))) then 
            X_buf_address0 <= zext_ln1317_52_fu_3149_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage43) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43))) then 
            X_buf_address0 <= zext_ln1317_51_fu_3110_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage42) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage42))) then 
            X_buf_address0 <= zext_ln1317_49_fu_3071_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage41) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41))) then 
            X_buf_address0 <= zext_ln1317_48_fu_2999_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage40) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40))) then 
            X_buf_address0 <= zext_ln1317_47_fu_2955_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage39) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39))) then 
            X_buf_address0 <= zext_ln1317_46_fu_2911_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage38) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38))) then 
            X_buf_address0 <= zext_ln1317_45_fu_2867_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage37) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37))) then 
            X_buf_address0 <= zext_ln1317_44_fu_2823_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage36) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36))) then 
            X_buf_address0 <= zext_ln1317_43_fu_2779_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage35) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35))) then 
            X_buf_address0 <= zext_ln1317_41_fu_2735_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage34) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34))) then 
            X_buf_address0 <= zext_ln1317_40_fu_2691_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage33) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33))) then 
            X_buf_address0 <= zext_ln1317_39_fu_2647_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage32) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32))) then 
            X_buf_address0 <= zext_ln1317_38_fu_2603_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage31) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31))) then 
            X_buf_address0 <= zext_ln1317_37_fu_2559_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage30) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30))) then 
            X_buf_address0 <= zext_ln1317_36_fu_2515_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage29) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29))) then 
            X_buf_address0 <= zext_ln1317_35_fu_2471_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage28) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28))) then 
            X_buf_address0 <= zext_ln1317_33_fu_2427_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27))) then 
            X_buf_address0 <= zext_ln1317_32_fu_2383_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage26) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26))) then 
            X_buf_address0 <= zext_ln1317_31_fu_2339_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25))) then 
            X_buf_address0 <= zext_ln1317_30_fu_2295_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24))) then 
            X_buf_address0 <= zext_ln1317_29_fu_2251_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23))) then 
            X_buf_address0 <= zext_ln1317_28_fu_2207_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22))) then 
            X_buf_address0 <= zext_ln1317_27_fu_2163_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21))) then 
            X_buf_address0 <= zext_ln1317_25_fu_2119_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20))) then 
            X_buf_address0 <= zext_ln1317_24_fu_2075_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19))) then 
            X_buf_address0 <= zext_ln1317_23_fu_2031_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18))) then 
            X_buf_address0 <= zext_ln1317_22_fu_1987_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17))) then 
            X_buf_address0 <= zext_ln1317_21_fu_1943_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage16) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16))) then 
            X_buf_address0 <= zext_ln1317_20_fu_1899_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15))) then 
            X_buf_address0 <= zext_ln1317_19_fu_1855_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14))) then 
            X_buf_address0 <= zext_ln1317_17_fu_1811_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13))) then 
            X_buf_address0 <= zext_ln1317_16_fu_1767_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12))) then 
            X_buf_address0 <= zext_ln1317_15_fu_1723_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            X_buf_address0 <= zext_ln1317_14_fu_1679_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            X_buf_address0 <= zext_ln1317_13_fu_1635_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            X_buf_address0 <= zext_ln1317_12_fu_1591_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            X_buf_address0 <= zext_ln1317_11_fu_1547_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            X_buf_address0 <= zext_ln1317_9_fu_1489_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            X_buf_address0 <= zext_ln1317_8_fu_1431_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            X_buf_address0 <= zext_ln1317_7_fu_1373_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            X_buf_address0 <= zext_ln1317_6_fu_1321_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            X_buf_address0 <= zext_ln1317_5_fu_1280_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            X_buf_address0 <= zext_ln1317_4_fu_1239_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            X_buf_address0 <= zext_ln1317_3_fu_1212_p1(13 - 1 downto 0);
        else 
            X_buf_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    X_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage48, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_11001, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_11001, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19_11001, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20_11001, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21_11001, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22_11001, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23_11001, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24_11001, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31_11001, ap_CS_fsm_pp0_stage32, ap_block_pp0_stage32_11001, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33_11001, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage34_11001, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage35_11001, ap_CS_fsm_pp0_stage36, ap_block_pp0_stage36_11001, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage37_11001, ap_CS_fsm_pp0_stage38, ap_block_pp0_stage38_11001, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage39_11001, ap_CS_fsm_pp0_stage40, ap_block_pp0_stage40_11001, ap_CS_fsm_pp0_stage41, ap_block_pp0_stage41_11001, ap_CS_fsm_pp0_stage42, ap_block_pp0_stage42_11001, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage43_11001, ap_CS_fsm_pp0_stage44, ap_block_pp0_stage44_11001, ap_CS_fsm_pp0_stage45, ap_block_pp0_stage45_11001, ap_CS_fsm_pp0_stage46, ap_block_pp0_stage46_11001, ap_CS_fsm_pp0_stage47, ap_block_pp0_stage47_11001, ap_block_pp0_stage48_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage38_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38)) or ((ap_const_boolean_0 = ap_block_pp0_stage37_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37)) or ((ap_const_boolean_0 = ap_block_pp0_stage36_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36)) or ((ap_const_boolean_0 = ap_block_pp0_stage35_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35)) or ((ap_const_boolean_0 = ap_block_pp0_stage34_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34)) or ((ap_const_boolean_0 = ap_block_pp0_stage33_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33)) or ((ap_const_boolean_0 = ap_block_pp0_stage32_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32)) or ((ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30)) or ((ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29)) or ((ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28)) or ((ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage48_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48)) or ((ap_const_boolean_0 = ap_block_pp0_stage47_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage47)) or ((ap_const_boolean_0 = ap_block_pp0_stage46_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage46)) or ((ap_const_boolean_0 = ap_block_pp0_stage45_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage45)) or ((ap_const_boolean_0 = ap_block_pp0_stage44_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44)) or ((ap_const_boolean_0 = ap_block_pp0_stage43_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43)) or ((ap_const_boolean_0 = ap_block_pp0_stage42_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage42)) or ((ap_const_boolean_0 = ap_block_pp0_stage41_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41)) or ((ap_const_boolean_0 = ap_block_pp0_stage40_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40)) or ((ap_const_boolean_0 = ap_block_pp0_stage39_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39)))) then 
            X_buf_ce0 <= ap_const_logic_1;
        else 
            X_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1317_10_fu_1587_p2 <= std_logic_vector(unsigned(mul_ln1317_reg_4157) + unsigned(zext_ln63_1_cast_reg_4033));
    add_ln1317_11_fu_1631_p2 <= std_logic_vector(unsigned(mul_ln1317_reg_4157) + unsigned(zext_ln63_2_cast_reg_4022));
    add_ln1317_12_fu_1675_p2 <= std_logic_vector(unsigned(mul_ln1317_reg_4157) + unsigned(zext_ln63_3_cast_reg_4011));
    add_ln1317_13_fu_1719_p2 <= std_logic_vector(unsigned(mul_ln1317_reg_4157) + unsigned(zext_ln63_4_cast_reg_4000));
    add_ln1317_14_fu_1763_p2 <= std_logic_vector(unsigned(mul_ln1317_reg_4157) + unsigned(zext_ln63_5_cast_reg_3989));
    add_ln1317_15_fu_1807_p2 <= std_logic_vector(unsigned(mul_ln1317_reg_4157) + unsigned(zext_ln51_cast_reg_3978));
    add_ln1317_16_fu_1285_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_4044) + unsigned(indvars_iv_next57_cast_cast_reg_3968));
    add_ln1317_17_fu_1851_p2 <= std_logic_vector(unsigned(mul_ln1317_1_reg_4188) + unsigned(zext_ln1317_2_reg_4080));
    add_ln1317_18_fu_1895_p2 <= std_logic_vector(unsigned(mul_ln1317_1_reg_4188) + unsigned(zext_ln63_1_cast_reg_4033));
    add_ln1317_19_fu_1939_p2 <= std_logic_vector(unsigned(mul_ln1317_1_reg_4188) + unsigned(zext_ln63_2_cast_reg_4022));
    add_ln1317_1_fu_1207_p2 <= std_logic_vector(unsigned(mul_ln48_reg_4060) + unsigned(zext_ln1317_2_fu_1204_p1));
    add_ln1317_20_fu_1983_p2 <= std_logic_vector(unsigned(mul_ln1317_1_reg_4188) + unsigned(zext_ln63_3_cast_reg_4011));
    add_ln1317_21_fu_2027_p2 <= std_logic_vector(unsigned(mul_ln1317_1_reg_4188) + unsigned(zext_ln63_4_cast_reg_4000));
    add_ln1317_22_fu_2071_p2 <= std_logic_vector(unsigned(mul_ln1317_1_reg_4188) + unsigned(zext_ln63_5_cast_reg_3989));
    add_ln1317_23_fu_2115_p2 <= std_logic_vector(unsigned(mul_ln1317_1_reg_4188) + unsigned(zext_ln51_cast_reg_3978));
    add_ln1317_24_fu_1326_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_4044) + unsigned(p_cast1_cast_reg_3963));
    add_ln1317_25_fu_2159_p2 <= std_logic_vector(unsigned(mul_ln1317_2_reg_4219) + unsigned(zext_ln1317_2_reg_4080));
    add_ln1317_26_fu_2203_p2 <= std_logic_vector(unsigned(mul_ln1317_2_reg_4219) + unsigned(zext_ln63_1_cast_reg_4033));
    add_ln1317_27_fu_2247_p2 <= std_logic_vector(unsigned(mul_ln1317_2_reg_4219) + unsigned(zext_ln63_2_cast_reg_4022));
    add_ln1317_28_fu_2291_p2 <= std_logic_vector(unsigned(mul_ln1317_2_reg_4219) + unsigned(zext_ln63_3_cast_reg_4011));
    add_ln1317_29_fu_2335_p2 <= std_logic_vector(unsigned(mul_ln1317_2_reg_4219) + unsigned(zext_ln63_4_cast_reg_4000));
    add_ln1317_2_fu_1235_p2 <= std_logic_vector(unsigned(mul_ln48_reg_4060) + unsigned(zext_ln63_1_cast_reg_4033));
    add_ln1317_30_fu_2379_p2 <= std_logic_vector(unsigned(mul_ln1317_2_reg_4219) + unsigned(zext_ln63_5_cast_reg_3989));
    add_ln1317_31_fu_2423_p2 <= std_logic_vector(unsigned(mul_ln1317_2_reg_4219) + unsigned(zext_ln51_cast_reg_3978));
    add_ln1317_32_fu_1378_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_4044) + unsigned(p_cast2_cast_reg_3958));
    add_ln1317_33_fu_2467_p2 <= std_logic_vector(unsigned(mul_ln1317_3_reg_4255) + unsigned(zext_ln1317_2_reg_4080));
    add_ln1317_34_fu_2511_p2 <= std_logic_vector(unsigned(mul_ln1317_3_reg_4255) + unsigned(zext_ln63_1_cast_reg_4033));
    add_ln1317_35_fu_2555_p2 <= std_logic_vector(unsigned(mul_ln1317_3_reg_4255) + unsigned(zext_ln63_2_cast_reg_4022));
    add_ln1317_36_fu_2599_p2 <= std_logic_vector(unsigned(mul_ln1317_3_reg_4255) + unsigned(zext_ln63_3_cast_reg_4011));
    add_ln1317_37_fu_2643_p2 <= std_logic_vector(unsigned(mul_ln1317_3_reg_4255) + unsigned(zext_ln63_4_cast_reg_4000));
    add_ln1317_38_fu_2687_p2 <= std_logic_vector(unsigned(mul_ln1317_3_reg_4255) + unsigned(zext_ln63_5_cast_reg_3989));
    add_ln1317_39_fu_2731_p2 <= std_logic_vector(unsigned(mul_ln1317_3_reg_4255) + unsigned(zext_ln51_cast_reg_3978));
    add_ln1317_3_fu_1276_p2 <= std_logic_vector(unsigned(mul_ln48_reg_4060) + unsigned(zext_ln63_2_cast_reg_4022));
    add_ln1317_40_fu_1436_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_4044) + unsigned(p_cast3_cast_reg_3953));
    add_ln1317_41_fu_2775_p2 <= std_logic_vector(unsigned(mul_ln1317_4_reg_4291) + unsigned(zext_ln1317_2_reg_4080));
    add_ln1317_42_fu_2819_p2 <= std_logic_vector(unsigned(mul_ln1317_4_reg_4291) + unsigned(zext_ln63_1_cast_reg_4033));
    add_ln1317_43_fu_2863_p2 <= std_logic_vector(unsigned(mul_ln1317_4_reg_4291) + unsigned(zext_ln63_2_cast_reg_4022));
    add_ln1317_44_fu_2907_p2 <= std_logic_vector(unsigned(mul_ln1317_4_reg_4291) + unsigned(zext_ln63_3_cast_reg_4011));
    add_ln1317_45_fu_2951_p2 <= std_logic_vector(unsigned(mul_ln1317_4_reg_4291) + unsigned(zext_ln63_4_cast_reg_4000));
    add_ln1317_46_fu_2995_p2 <= std_logic_vector(unsigned(mul_ln1317_4_reg_4291) + unsigned(zext_ln63_5_cast_reg_3989));
    add_ln1317_47_fu_3004_p2 <= std_logic_vector(unsigned(mul_ln1317_4_reg_4291) + unsigned(zext_ln51_cast_reg_3978));
    add_ln1317_48_fu_1494_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_4044) + unsigned(zext_ln48_cast_reg_3948));
    add_ln1317_49_fu_3008_p2 <= std_logic_vector(unsigned(mul_ln1317_5_reg_4327) + unsigned(zext_ln1317_2_reg_4080));
    add_ln1317_4_fu_1317_p2 <= std_logic_vector(unsigned(mul_ln48_reg_4060) + unsigned(zext_ln63_3_cast_reg_4011));
    add_ln1317_50_fu_3012_p2 <= std_logic_vector(unsigned(mul_ln1317_5_reg_4327) + unsigned(zext_ln63_1_cast_reg_4033));
    add_ln1317_51_fu_3016_p2 <= std_logic_vector(unsigned(mul_ln1317_5_reg_4327) + unsigned(zext_ln63_2_cast_reg_4022));
    add_ln1317_52_fu_3020_p2 <= std_logic_vector(unsigned(mul_ln1317_5_reg_4327) + unsigned(zext_ln63_3_cast_reg_4011));
    add_ln1317_53_fu_3024_p2 <= std_logic_vector(unsigned(mul_ln1317_5_reg_4327) + unsigned(zext_ln63_4_cast_reg_4000));
    add_ln1317_54_fu_3028_p2 <= std_logic_vector(unsigned(mul_ln1317_5_reg_4327) + unsigned(zext_ln63_5_cast_reg_3989));
    add_ln1317_55_fu_3032_p2 <= std_logic_vector(unsigned(mul_ln1317_5_reg_4327) + unsigned(zext_ln51_cast_reg_3978));
    add_ln1317_56_fu_3305_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_4044) + unsigned(ap_const_lv8_34));
    add_ln1317_5_fu_1369_p2 <= std_logic_vector(unsigned(mul_ln48_reg_4060) + unsigned(zext_ln63_4_cast_reg_4000));
    add_ln1317_6_fu_1427_p2 <= std_logic_vector(unsigned(mul_ln48_reg_4060) + unsigned(zext_ln63_5_cast_reg_3989));
    add_ln1317_7_fu_1485_p2 <= std_logic_vector(unsigned(mul_ln48_reg_4060) + unsigned(zext_ln51_cast_reg_3978));
    add_ln1317_8_fu_1244_p2 <= std_logic_vector(unsigned(phi_mul_load_reg_4044) + unsigned(p_cast_cast_reg_3973));
    add_ln1317_9_fu_1543_p2 <= std_logic_vector(unsigned(mul_ln1317_reg_4157) + unsigned(zext_ln1317_2_reg_4080));
    add_ln1317_fu_1176_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_phi_mul_load) + unsigned(zext_ln1317_1_fu_1172_p1));
    add_ln1319_10_fu_1684_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_A));
    add_ln1319_11_fu_1728_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_B));
    add_ln1319_12_fu_1772_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_C));
    add_ln1319_13_fu_1816_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_D));
    add_ln1319_14_fu_1860_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_E));
    add_ln1319_15_fu_1904_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_F));
    add_ln1319_16_fu_1948_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_10));
    add_ln1319_17_fu_1992_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_11));
    add_ln1319_18_fu_2036_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_12));
    add_ln1319_19_fu_2080_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_13));
    add_ln1319_1_fu_1258_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_1));
    add_ln1319_20_fu_2124_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_14));
    add_ln1319_21_fu_2168_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_15));
    add_ln1319_22_fu_2212_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_16));
    add_ln1319_23_fu_2256_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_17));
    add_ln1319_24_fu_2300_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_18));
    add_ln1319_25_fu_2344_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_19));
    add_ln1319_26_fu_2388_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_1A));
    add_ln1319_27_fu_2432_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_1B));
    add_ln1319_28_fu_2476_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_1C));
    add_ln1319_29_fu_2520_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_1D));
    add_ln1319_2_fu_1299_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_2));
    add_ln1319_30_fu_2564_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_1E));
    add_ln1319_31_fu_2608_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_1F));
    add_ln1319_32_fu_2652_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_20));
    add_ln1319_33_fu_2696_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_21));
    add_ln1319_34_fu_2740_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_22));
    add_ln1319_35_fu_2784_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_23));
    add_ln1319_36_fu_2828_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_24));
    add_ln1319_37_fu_2872_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_25));
    add_ln1319_38_fu_2916_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_26));
    add_ln1319_39_fu_2960_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_27));
    add_ln1319_3_fu_1340_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_3));
    add_ln1319_40_fu_3036_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_28));
    add_ln1319_41_fu_3075_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_29));
    add_ln1319_42_fu_3114_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_2A));
    add_ln1319_43_fu_3153_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_2B));
    add_ln1319_44_fu_3192_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_2C));
    add_ln1319_45_fu_3231_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_2D));
    add_ln1319_46_fu_3270_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_2E));
    add_ln1319_47_fu_3318_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_2F));
    add_ln1319_48_fu_3328_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_30));
    add_ln1319_4_fu_1392_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_4));
    add_ln1319_5_fu_1450_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_5));
    add_ln1319_6_fu_1508_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_6));
    add_ln1319_7_fu_1552_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_7));
    add_ln1319_8_fu_1596_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_8));
    add_ln1319_9_fu_1640_p2 <= std_logic_vector(unsigned(trunc_ln1319_reg_4095) + unsigned(ap_const_lv10_9));
    add_ln1319_fu_1192_p2 <= std_logic_vector(signed(sub_ln1319_cast_fu_1095_p1) + signed(zext_ln1317_fu_1168_p1));
    add_ln51_fu_3338_p2 <= std_logic_vector(unsigned(chan_1_reg_4055) + unsigned(ap_const_lv2_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(26);
    ap_CS_fsm_pp0_stage27 <= ap_CS_fsm(27);
    ap_CS_fsm_pp0_stage28 <= ap_CS_fsm(28);
    ap_CS_fsm_pp0_stage29 <= ap_CS_fsm(29);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage30 <= ap_CS_fsm(30);
    ap_CS_fsm_pp0_stage31 <= ap_CS_fsm(31);
    ap_CS_fsm_pp0_stage32 <= ap_CS_fsm(32);
    ap_CS_fsm_pp0_stage33 <= ap_CS_fsm(33);
    ap_CS_fsm_pp0_stage34 <= ap_CS_fsm(34);
    ap_CS_fsm_pp0_stage35 <= ap_CS_fsm(35);
    ap_CS_fsm_pp0_stage36 <= ap_CS_fsm(36);
    ap_CS_fsm_pp0_stage37 <= ap_CS_fsm(37);
    ap_CS_fsm_pp0_stage38 <= ap_CS_fsm(38);
    ap_CS_fsm_pp0_stage39 <= ap_CS_fsm(39);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage40 <= ap_CS_fsm(40);
    ap_CS_fsm_pp0_stage41 <= ap_CS_fsm(41);
    ap_CS_fsm_pp0_stage42 <= ap_CS_fsm(42);
    ap_CS_fsm_pp0_stage43 <= ap_CS_fsm(43);
    ap_CS_fsm_pp0_stage44 <= ap_CS_fsm(44);
    ap_CS_fsm_pp0_stage45 <= ap_CS_fsm(45);
    ap_CS_fsm_pp0_stage46 <= ap_CS_fsm(46);
    ap_CS_fsm_pp0_stage47 <= ap_CS_fsm(47);
    ap_CS_fsm_pp0_stage48 <= ap_CS_fsm(48);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage40_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage40_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage20_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage21_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage22_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage23_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage24_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage25_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage26_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage27_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage28_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage29_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage30_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage31_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage32_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage33_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage34_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage35_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage36_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage37_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage38_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage39_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage40_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage41_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage42_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage43_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage44_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage45_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage46_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage47_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage48_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage48_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage48, ap_block_pp0_stage48_subdone, icmp_ln51_reg_4076)
    begin
        if (((icmp_ln51_reg_4076 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage48_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48))) then 
            ap_condition_exit_pp0_iter0_stage48 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage48 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage48, ap_block_pp0_stage48_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage48_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage48;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage48, ap_block_pp0_stage48_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage48_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_chan_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_loop_init, ap_block_pp0_stage0, chan_fu_192)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_chan_1 <= ap_const_lv2_0;
        else 
            ap_sig_allocacmp_chan_1 <= chan_fu_192;
        end if; 
    end process;


    ap_sig_allocacmp_conv_i_i96_6_lcssa21_load_1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, conv_i_i96_6_lcssa21_fu_188, trunc_ln864_s_fu_3462_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_sig_allocacmp_conv_i_i96_6_lcssa21_load_1 <= trunc_ln864_s_fu_3462_p1(28 downto 13);
        else 
            ap_sig_allocacmp_conv_i_i96_6_lcssa21_load_1 <= conv_i_i96_6_lcssa21_fu_188;
        end if; 
    end process;


    ap_sig_allocacmp_phi_mul_load_assign_proc : process(ap_CS_fsm_pp0_stage0, phi_mul_fu_184, ap_loop_init, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_phi_mul_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_phi_mul_load <= phi_mul_fu_184;
        end if; 
    end process;

    conv_i_i96_6_lcssa21_out <= conv_i_i96_6_lcssa21_fu_188;

    conv_i_i96_6_lcssa21_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage48, icmp_ln51_reg_4076, ap_block_pp0_stage48_11001)
    begin
        if (((icmp_ln51_reg_4076 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage48_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage48))) then 
            conv_i_i96_6_lcssa21_out_ap_vld <= ap_const_logic_1;
        else 
            conv_i_i96_6_lcssa21_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_3480_p2 <= (ap_sig_allocacmp_conv_i_i96_6_lcssa21_load_1 & ap_const_lv13_0);
    grp_fu_3489_p2 <= (tmp_s_fu_1402_p4 & ap_const_lv13_0);
    grp_fu_3498_p2 <= (tmp_3_fu_1460_p4 & ap_const_lv13_0);
    grp_fu_3507_p2 <= (tmp_4_fu_1518_p4 & ap_const_lv13_0);
    grp_fu_3516_p2 <= (tmp_5_fu_1562_p4 & ap_const_lv13_0);
    grp_fu_3525_p2 <= (tmp_6_fu_1606_p4 & ap_const_lv13_0);
    grp_fu_3534_p2 <= (tmp_7_fu_1650_p4 & ap_const_lv13_0);
    grp_fu_3543_p2 <= (tmp_8_fu_1694_p4 & ap_const_lv13_0);
    grp_fu_3552_p2 <= (tmp_9_fu_1738_p4 & ap_const_lv13_0);
    grp_fu_3561_p2 <= (tmp_10_fu_1782_p4 & ap_const_lv13_0);
    grp_fu_3570_p2 <= (tmp_11_fu_1826_p4 & ap_const_lv13_0);
    grp_fu_3579_p2 <= (tmp_12_fu_1870_p4 & ap_const_lv13_0);
    grp_fu_3588_p2 <= (tmp_13_fu_1914_p4 & ap_const_lv13_0);
    grp_fu_3597_p2 <= (tmp_14_fu_1958_p4 & ap_const_lv13_0);
    grp_fu_3606_p2 <= (tmp_15_fu_2002_p4 & ap_const_lv13_0);
    grp_fu_3615_p2 <= (tmp_16_fu_2046_p4 & ap_const_lv13_0);
    grp_fu_3624_p2 <= (tmp_17_fu_2090_p4 & ap_const_lv13_0);
    grp_fu_3633_p2 <= (tmp_18_fu_2134_p4 & ap_const_lv13_0);
    grp_fu_3642_p2 <= (tmp_19_fu_2178_p4 & ap_const_lv13_0);
    grp_fu_3651_p2 <= (tmp_20_fu_2222_p4 & ap_const_lv13_0);
    grp_fu_3660_p2 <= (tmp_21_fu_2266_p4 & ap_const_lv13_0);
    grp_fu_3669_p2 <= (tmp_22_fu_2310_p4 & ap_const_lv13_0);
    grp_fu_3678_p2 <= (tmp_23_fu_2354_p4 & ap_const_lv13_0);
    grp_fu_3687_p2 <= (tmp_24_fu_2398_p4 & ap_const_lv13_0);
    grp_fu_3696_p2 <= (tmp_25_fu_2442_p4 & ap_const_lv13_0);
    grp_fu_3705_p2 <= (tmp_26_fu_2486_p4 & ap_const_lv13_0);
    grp_fu_3714_p2 <= (tmp_27_fu_2530_p4 & ap_const_lv13_0);
    grp_fu_3723_p2 <= (tmp_28_fu_2574_p4 & ap_const_lv13_0);
    grp_fu_3732_p2 <= (tmp_29_fu_2618_p4 & ap_const_lv13_0);
    grp_fu_3741_p2 <= (tmp_30_fu_2662_p4 & ap_const_lv13_0);
    grp_fu_3750_p2 <= (tmp_31_fu_2706_p4 & ap_const_lv13_0);
    grp_fu_3759_p2 <= (tmp_32_fu_2750_p4 & ap_const_lv13_0);
    grp_fu_3768_p2 <= (tmp_33_fu_2794_p4 & ap_const_lv13_0);
    grp_fu_3777_p2 <= (tmp_34_fu_2838_p4 & ap_const_lv13_0);
    grp_fu_3786_p2 <= (tmp_35_fu_2882_p4 & ap_const_lv13_0);
    grp_fu_3795_p2 <= (tmp_36_fu_2926_p4 & ap_const_lv13_0);
    grp_fu_3804_p2 <= (tmp_37_fu_2970_p4 & ap_const_lv13_0);
    grp_fu_3813_p2 <= (tmp_38_fu_3046_p4 & ap_const_lv13_0);
    grp_fu_3822_p2 <= (tmp_39_fu_3085_p4 & ap_const_lv13_0);
    grp_fu_3831_p2 <= (tmp_40_fu_3124_p4 & ap_const_lv13_0);
    grp_fu_3840_p2 <= (tmp_41_fu_3163_p4 & ap_const_lv13_0);
    grp_fu_3849_p2 <= (tmp_42_fu_3202_p4 & ap_const_lv13_0);
    grp_fu_3858_p2 <= (tmp_43_fu_3241_p4 & ap_const_lv13_0);
    grp_fu_3867_p2 <= (tmp_44_fu_3280_p4 & ap_const_lv13_0);
    grp_fu_3876_p2 <= (tmp_45_fu_3343_p4 & ap_const_lv13_0);
    grp_fu_3885_p2 <= (tmp_46_fu_3378_p4 & ap_const_lv13_0);
    grp_fu_3894_p2 <= (tmp_47_fu_3403_p4 & ap_const_lv13_0);
    grp_fu_3903_p2 <= (tmp_48_fu_3428_p4 & ap_const_lv13_0);
    grp_fu_3912_p2 <= (tmp_49_fu_3445_p4 & ap_const_lv13_0);
    icmp_ln51_fu_1198_p2 <= "1" when (ap_sig_allocacmp_chan_1 = ap_const_lv2_3) else "0";
    indvars_iv_next57_cast_cast_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvars_iv_next57_cast),8));
    mul_ln1317_1_fu_1293_p0 <= mul_ln1317_1_fu_1293_p00(8 - 1 downto 0);
    mul_ln1317_1_fu_1293_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_16_fu_1285_p2),13));
    mul_ln1317_1_fu_1293_p1 <= ap_const_lv13_2E(7 - 1 downto 0);
    mul_ln1317_2_fu_1334_p0 <= mul_ln1317_2_fu_1334_p00(8 - 1 downto 0);
    mul_ln1317_2_fu_1334_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_24_fu_1326_p2),13));
    mul_ln1317_2_fu_1334_p1 <= ap_const_lv13_2E(7 - 1 downto 0);
    mul_ln1317_3_fu_1386_p0 <= mul_ln1317_3_fu_1386_p00(8 - 1 downto 0);
    mul_ln1317_3_fu_1386_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_32_fu_1378_p2),13));
    mul_ln1317_3_fu_1386_p1 <= ap_const_lv13_2E(7 - 1 downto 0);
    mul_ln1317_4_fu_1444_p0 <= mul_ln1317_4_fu_1444_p00(8 - 1 downto 0);
    mul_ln1317_4_fu_1444_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_40_fu_1436_p2),13));
    mul_ln1317_4_fu_1444_p1 <= ap_const_lv13_2E(7 - 1 downto 0);
    mul_ln1317_5_fu_1502_p0 <= mul_ln1317_5_fu_1502_p00(8 - 1 downto 0);
    mul_ln1317_5_fu_1502_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_48_fu_1494_p2),13));
    mul_ln1317_5_fu_1502_p1 <= ap_const_lv13_2E(7 - 1 downto 0);
    mul_ln1317_fu_1252_p0 <= mul_ln1317_fu_1252_p00(8 - 1 downto 0);
    mul_ln1317_fu_1252_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_8_fu_1244_p2),13));
    mul_ln1317_fu_1252_p1 <= ap_const_lv13_2E(7 - 1 downto 0);
    mul_ln1319_fu_1220_p1 <= ap_const_lv14_31(7 - 1 downto 0);
    mul_ln48_fu_1186_p0 <= mul_ln48_fu_1186_p00(8 - 1 downto 0);
    mul_ln48_fu_1186_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_fu_1176_p2),13));
    mul_ln48_fu_1186_p1 <= ap_const_lv13_2E(7 - 1 downto 0);
    p_cast1_cast_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast1),8));
    p_cast2_cast_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast2),8));
    p_cast3_cast_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast3),8));
    p_cast_cast_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast),8));
        sub_ln1319_cast_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1319),7));

    tmp_10_fu_1782_p1 <= grp_fu_3552_p3;
    tmp_10_fu_1782_p4 <= tmp_10_fu_1782_p1(28 downto 13);
    tmp_11_fu_1826_p1 <= grp_fu_3561_p3;
    tmp_11_fu_1826_p4 <= tmp_11_fu_1826_p1(28 downto 13);
    tmp_12_fu_1870_p1 <= grp_fu_3570_p3;
    tmp_12_fu_1870_p4 <= tmp_12_fu_1870_p1(28 downto 13);
    tmp_13_fu_1914_p1 <= grp_fu_3579_p3;
    tmp_13_fu_1914_p4 <= tmp_13_fu_1914_p1(28 downto 13);
    tmp_14_fu_1958_p1 <= grp_fu_3588_p3;
    tmp_14_fu_1958_p4 <= tmp_14_fu_1958_p1(28 downto 13);
    tmp_15_fu_2002_p1 <= grp_fu_3597_p3;
    tmp_15_fu_2002_p4 <= tmp_15_fu_2002_p1(28 downto 13);
    tmp_16_fu_2046_p1 <= grp_fu_3606_p3;
    tmp_16_fu_2046_p4 <= tmp_16_fu_2046_p1(28 downto 13);
    tmp_17_fu_2090_p1 <= grp_fu_3615_p3;
    tmp_17_fu_2090_p4 <= tmp_17_fu_2090_p1(28 downto 13);
    tmp_18_fu_2134_p1 <= grp_fu_3624_p3;
    tmp_18_fu_2134_p4 <= tmp_18_fu_2134_p1(28 downto 13);
    tmp_19_fu_2178_p1 <= grp_fu_3633_p3;
    tmp_19_fu_2178_p4 <= tmp_19_fu_2178_p1(28 downto 13);
    tmp_20_fu_2222_p1 <= grp_fu_3642_p3;
    tmp_20_fu_2222_p4 <= tmp_20_fu_2222_p1(28 downto 13);
    tmp_21_fu_2266_p1 <= grp_fu_3651_p3;
    tmp_21_fu_2266_p4 <= tmp_21_fu_2266_p1(28 downto 13);
    tmp_22_fu_2310_p1 <= grp_fu_3660_p3;
    tmp_22_fu_2310_p4 <= tmp_22_fu_2310_p1(28 downto 13);
    tmp_23_fu_2354_p1 <= grp_fu_3669_p3;
    tmp_23_fu_2354_p4 <= tmp_23_fu_2354_p1(28 downto 13);
    tmp_24_fu_2398_p1 <= grp_fu_3678_p3;
    tmp_24_fu_2398_p4 <= tmp_24_fu_2398_p1(28 downto 13);
    tmp_25_fu_2442_p1 <= grp_fu_3687_p3;
    tmp_25_fu_2442_p4 <= tmp_25_fu_2442_p1(28 downto 13);
    tmp_26_fu_2486_p1 <= grp_fu_3696_p3;
    tmp_26_fu_2486_p4 <= tmp_26_fu_2486_p1(28 downto 13);
    tmp_27_fu_2530_p1 <= grp_fu_3705_p3;
    tmp_27_fu_2530_p4 <= tmp_27_fu_2530_p1(28 downto 13);
    tmp_28_fu_2574_p1 <= grp_fu_3714_p3;
    tmp_28_fu_2574_p4 <= tmp_28_fu_2574_p1(28 downto 13);
    tmp_29_fu_2618_p1 <= grp_fu_3723_p3;
    tmp_29_fu_2618_p4 <= tmp_29_fu_2618_p1(28 downto 13);
    tmp_30_fu_2662_p1 <= grp_fu_3732_p3;
    tmp_30_fu_2662_p4 <= tmp_30_fu_2662_p1(28 downto 13);
    tmp_31_fu_2706_p1 <= grp_fu_3741_p3;
    tmp_31_fu_2706_p4 <= tmp_31_fu_2706_p1(28 downto 13);
    tmp_32_fu_2750_p1 <= grp_fu_3750_p3;
    tmp_32_fu_2750_p4 <= tmp_32_fu_2750_p1(28 downto 13);
    tmp_33_fu_2794_p1 <= grp_fu_3759_p3;
    tmp_33_fu_2794_p4 <= tmp_33_fu_2794_p1(28 downto 13);
    tmp_34_fu_2838_p1 <= grp_fu_3768_p3;
    tmp_34_fu_2838_p4 <= tmp_34_fu_2838_p1(28 downto 13);
    tmp_35_fu_2882_p1 <= grp_fu_3777_p3;
    tmp_35_fu_2882_p4 <= tmp_35_fu_2882_p1(28 downto 13);
    tmp_36_fu_2926_p1 <= grp_fu_3786_p3;
    tmp_36_fu_2926_p4 <= tmp_36_fu_2926_p1(28 downto 13);
    tmp_37_fu_2970_p1 <= grp_fu_3795_p3;
    tmp_37_fu_2970_p4 <= tmp_37_fu_2970_p1(28 downto 13);
    tmp_38_fu_3046_p1 <= grp_fu_3804_p3;
    tmp_38_fu_3046_p4 <= tmp_38_fu_3046_p1(28 downto 13);
    tmp_39_fu_3085_p1 <= grp_fu_3813_p3;
    tmp_39_fu_3085_p4 <= tmp_39_fu_3085_p1(28 downto 13);
    tmp_3_fu_1460_p1 <= grp_fu_3489_p3;
    tmp_3_fu_1460_p4 <= tmp_3_fu_1460_p1(28 downto 13);
    tmp_40_fu_3124_p1 <= grp_fu_3822_p3;
    tmp_40_fu_3124_p4 <= tmp_40_fu_3124_p1(28 downto 13);
    tmp_41_fu_3163_p1 <= grp_fu_3831_p3;
    tmp_41_fu_3163_p4 <= tmp_41_fu_3163_p1(28 downto 13);
    tmp_42_fu_3202_p1 <= grp_fu_3840_p3;
    tmp_42_fu_3202_p4 <= tmp_42_fu_3202_p1(28 downto 13);
    tmp_43_fu_3241_p1 <= grp_fu_3849_p3;
    tmp_43_fu_3241_p4 <= tmp_43_fu_3241_p1(28 downto 13);
    tmp_44_fu_3280_p1 <= grp_fu_3858_p3;
    tmp_44_fu_3280_p4 <= tmp_44_fu_3280_p1(28 downto 13);
    tmp_45_fu_3343_p1 <= grp_fu_3867_p3;
    tmp_45_fu_3343_p4 <= tmp_45_fu_3343_p1(28 downto 13);
    tmp_46_fu_3378_p1 <= grp_fu_3876_p3;
    tmp_46_fu_3378_p4 <= tmp_46_fu_3378_p1(28 downto 13);
    tmp_47_fu_3403_p1 <= grp_fu_3885_p3;
    tmp_47_fu_3403_p4 <= tmp_47_fu_3403_p1(28 downto 13);
    tmp_48_fu_3428_p1 <= grp_fu_3894_p3;
    tmp_48_fu_3428_p4 <= tmp_48_fu_3428_p1(28 downto 13);
    tmp_49_fu_3445_p1 <= grp_fu_3903_p3;
    tmp_49_fu_3445_p4 <= tmp_49_fu_3445_p1(28 downto 13);
    tmp_4_fu_1518_p1 <= grp_fu_3498_p3;
    tmp_4_fu_1518_p4 <= tmp_4_fu_1518_p1(28 downto 13);
    tmp_5_fu_1562_p1 <= grp_fu_3507_p3;
    tmp_5_fu_1562_p4 <= tmp_5_fu_1562_p1(28 downto 13);
    tmp_6_fu_1606_p1 <= grp_fu_3516_p3;
    tmp_6_fu_1606_p4 <= tmp_6_fu_1606_p1(28 downto 13);
    tmp_7_fu_1650_p1 <= grp_fu_3525_p3;
    tmp_7_fu_1650_p4 <= tmp_7_fu_1650_p1(28 downto 13);
    tmp_8_fu_1694_p1 <= grp_fu_3534_p3;
    tmp_8_fu_1694_p4 <= tmp_8_fu_1694_p1(28 downto 13);
    tmp_9_fu_1738_p1 <= grp_fu_3543_p3;
    tmp_9_fu_1738_p4 <= tmp_9_fu_1738_p1(28 downto 13);
    tmp_s_fu_1402_p1 <= grp_fu_3480_p3;
    tmp_s_fu_1402_p4 <= tmp_s_fu_1402_p1(28 downto 13);
    trunc_ln1319_fu_1231_p1 <= mul_ln1319_fu_1220_p2(10 - 1 downto 0);
    trunc_ln864_s_fu_3462_p1 <= grp_fu_3912_p3;
    zext_ln1317_11_fu_1547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_9_fu_1543_p2),64));
    zext_ln1317_12_fu_1591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_10_fu_1587_p2),64));
    zext_ln1317_13_fu_1635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_11_fu_1631_p2),64));
    zext_ln1317_14_fu_1679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_12_fu_1675_p2),64));
    zext_ln1317_15_fu_1723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_13_fu_1719_p2),64));
    zext_ln1317_16_fu_1767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_14_fu_1763_p2),64));
    zext_ln1317_17_fu_1811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_15_fu_1807_p2),64));
    zext_ln1317_19_fu_1855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_17_fu_1851_p2),64));
    zext_ln1317_1_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h),8));
    zext_ln1317_20_fu_1899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_18_fu_1895_p2),64));
    zext_ln1317_21_fu_1943_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_19_fu_1939_p2),64));
    zext_ln1317_22_fu_1987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_20_fu_1983_p2),64));
    zext_ln1317_23_fu_2031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_21_fu_2027_p2),64));
    zext_ln1317_24_fu_2075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_22_fu_2071_p2),64));
    zext_ln1317_25_fu_2119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_23_fu_2115_p2),64));
    zext_ln1317_27_fu_2163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_25_fu_2159_p2),64));
    zext_ln1317_28_fu_2207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_26_fu_2203_p2),64));
    zext_ln1317_29_fu_2251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_27_fu_2247_p2),64));
    zext_ln1317_2_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w),13));
    zext_ln1317_30_fu_2295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_28_fu_2291_p2),64));
    zext_ln1317_31_fu_2339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_29_fu_2335_p2),64));
    zext_ln1317_32_fu_2383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_30_fu_2379_p2),64));
    zext_ln1317_33_fu_2427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_31_fu_2423_p2),64));
    zext_ln1317_35_fu_2471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_33_fu_2467_p2),64));
    zext_ln1317_36_fu_2515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_34_fu_2511_p2),64));
    zext_ln1317_37_fu_2559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_35_fu_2555_p2),64));
    zext_ln1317_38_fu_2603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_36_fu_2599_p2),64));
    zext_ln1317_39_fu_2647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_37_fu_2643_p2),64));
    zext_ln1317_3_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_1_fu_1207_p2),64));
    zext_ln1317_40_fu_2691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_38_fu_2687_p2),64));
    zext_ln1317_41_fu_2735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_39_fu_2731_p2),64));
    zext_ln1317_43_fu_2779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_41_fu_2775_p2),64));
    zext_ln1317_44_fu_2823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_42_fu_2819_p2),64));
    zext_ln1317_45_fu_2867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_43_fu_2863_p2),64));
    zext_ln1317_46_fu_2911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_44_fu_2907_p2),64));
    zext_ln1317_47_fu_2955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_45_fu_2951_p2),64));
    zext_ln1317_48_fu_2999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_46_fu_2995_p2),64));
    zext_ln1317_49_fu_3071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_47_reg_5188),64));
    zext_ln1317_4_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_2_fu_1235_p2),64));
    zext_ln1317_51_fu_3110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_49_reg_5193),64));
    zext_ln1317_52_fu_3149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_50_reg_5198),64));
    zext_ln1317_53_fu_3188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_51_reg_5203),64));
    zext_ln1317_54_fu_3227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_52_reg_5208),64));
    zext_ln1317_55_fu_3266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_53_reg_5213),64));
    zext_ln1317_56_fu_3310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_54_reg_5218),64));
    zext_ln1317_57_fu_3314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_55_reg_5223),64));
    zext_ln1317_5_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_3_fu_1276_p2),64));
    zext_ln1317_6_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_4_fu_1317_p2),64));
    zext_ln1317_7_fu_1373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_5_fu_1369_p2),64));
    zext_ln1317_8_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_6_fu_1427_p2),64));
    zext_ln1317_9_fu_1489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1317_7_fu_1485_p2),64));
    zext_ln1317_fu_1168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_chan_1),7));
    zext_ln1319_10_fu_1689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_10_fu_1684_p2),64));
    zext_ln1319_11_fu_1733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_11_fu_1728_p2),64));
    zext_ln1319_12_fu_1777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_12_fu_1772_p2),64));
    zext_ln1319_13_fu_1821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_13_fu_1816_p2),64));
    zext_ln1319_14_fu_1865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_14_fu_1860_p2),64));
    zext_ln1319_15_fu_1909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_15_fu_1904_p2),64));
    zext_ln1319_16_fu_1953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_16_fu_1948_p2),64));
    zext_ln1319_17_fu_1997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_17_fu_1992_p2),64));
    zext_ln1319_18_fu_2041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_18_fu_2036_p2),64));
    zext_ln1319_19_fu_2085_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_19_fu_2080_p2),64));
    zext_ln1319_1_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_1_fu_1258_p2),64));
    zext_ln1319_20_fu_2129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_20_fu_2124_p2),64));
    zext_ln1319_21_fu_2173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_21_fu_2168_p2),64));
    zext_ln1319_22_fu_2217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_22_fu_2212_p2),64));
    zext_ln1319_23_fu_2261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_23_fu_2256_p2),64));
    zext_ln1319_24_fu_2305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_24_fu_2300_p2),64));
    zext_ln1319_25_fu_2349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_25_fu_2344_p2),64));
    zext_ln1319_26_fu_2393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_26_fu_2388_p2),64));
    zext_ln1319_27_fu_2437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_27_fu_2432_p2),64));
    zext_ln1319_28_fu_2481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_28_fu_2476_p2),64));
    zext_ln1319_29_fu_2525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_29_fu_2520_p2),64));
    zext_ln1319_2_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_2_fu_1299_p2),64));
    zext_ln1319_30_fu_2569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_30_fu_2564_p2),64));
    zext_ln1319_31_fu_2613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_31_fu_2608_p2),64));
    zext_ln1319_32_fu_2657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_32_fu_2652_p2),64));
    zext_ln1319_33_fu_2701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_33_fu_2696_p2),64));
    zext_ln1319_34_fu_2745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_34_fu_2740_p2),64));
    zext_ln1319_35_fu_2789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_35_fu_2784_p2),64));
    zext_ln1319_36_fu_2833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_36_fu_2828_p2),64));
    zext_ln1319_37_fu_2877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_37_fu_2872_p2),64));
    zext_ln1319_38_fu_2921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_38_fu_2916_p2),64));
    zext_ln1319_39_fu_2965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_39_fu_2960_p2),64));
    zext_ln1319_3_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_3_fu_1340_p2),64));
    zext_ln1319_40_fu_3041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_40_fu_3036_p2),64));
    zext_ln1319_41_fu_3080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_41_fu_3075_p2),64));
    zext_ln1319_42_fu_3119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_42_fu_3114_p2),64));
    zext_ln1319_43_fu_3158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_43_fu_3153_p2),64));
    zext_ln1319_44_fu_3197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_44_fu_3192_p2),64));
    zext_ln1319_45_fu_3236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_45_fu_3231_p2),64));
    zext_ln1319_46_fu_3275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_46_fu_3270_p2),64));
    zext_ln1319_47_fu_3323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_47_fu_3318_p2),64));
    zext_ln1319_48_fu_3333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_48_fu_3328_p2),64));
    zext_ln1319_4_fu_1397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_4_fu_1392_p2),64));
    zext_ln1319_5_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_5_fu_1450_p2),64));
    zext_ln1319_6_fu_1513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_6_fu_1508_p2),64));
    zext_ln1319_7_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_7_fu_1552_p2),64));
    zext_ln1319_8_fu_1601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_8_fu_1596_p2),64));
    zext_ln1319_9_fu_1645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1319_9_fu_1640_p2),64));
    zext_ln1319_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1319_fu_1220_p2),64));
    zext_ln48_cast_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln48),8));
    zext_ln51_cast_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln51),13));
    zext_ln63_1_cast_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln63_1),13));
    zext_ln63_2_cast_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln63_2),13));
    zext_ln63_3_cast_fu_1135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln63_3),13));
    zext_ln63_4_cast_fu_1131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln63_4),13));
    zext_ln63_5_cast_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln63_5),13));
    zext_ln63_cast_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln63),16));
end behav;
