// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tiled_conv_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_fm_AWVALID,
        m_axi_fm_AWREADY,
        m_axi_fm_AWADDR,
        m_axi_fm_AWID,
        m_axi_fm_AWLEN,
        m_axi_fm_AWSIZE,
        m_axi_fm_AWBURST,
        m_axi_fm_AWLOCK,
        m_axi_fm_AWCACHE,
        m_axi_fm_AWPROT,
        m_axi_fm_AWQOS,
        m_axi_fm_AWREGION,
        m_axi_fm_AWUSER,
        m_axi_fm_WVALID,
        m_axi_fm_WREADY,
        m_axi_fm_WDATA,
        m_axi_fm_WSTRB,
        m_axi_fm_WLAST,
        m_axi_fm_WID,
        m_axi_fm_WUSER,
        m_axi_fm_ARVALID,
        m_axi_fm_ARREADY,
        m_axi_fm_ARADDR,
        m_axi_fm_ARID,
        m_axi_fm_ARLEN,
        m_axi_fm_ARSIZE,
        m_axi_fm_ARBURST,
        m_axi_fm_ARLOCK,
        m_axi_fm_ARCACHE,
        m_axi_fm_ARPROT,
        m_axi_fm_ARQOS,
        m_axi_fm_ARREGION,
        m_axi_fm_ARUSER,
        m_axi_fm_RVALID,
        m_axi_fm_RREADY,
        m_axi_fm_RDATA,
        m_axi_fm_RLAST,
        m_axi_fm_RID,
        m_axi_fm_RFIFONUM,
        m_axi_fm_RUSER,
        m_axi_fm_RRESP,
        m_axi_fm_BVALID,
        m_axi_fm_BREADY,
        m_axi_fm_BRESP,
        m_axi_fm_BID,
        m_axi_fm_BUSER,
        shl_ln70_1,
        output_feature_map,
        mul_ln39,
        zext_ln130_2,
        shl_ln130_mid,
        zext_ln125_1,
        zext_ln130_3,
        conv_out_buf_V_address0,
        conv_out_buf_V_ce0,
        conv_out_buf_V_q0,
        conv_out_buf_1_address0,
        conv_out_buf_1_ce0,
        conv_out_buf_1_q0,
        conv_out_buf_2_address0,
        conv_out_buf_2_ce0,
        conv_out_buf_2_q0,
        conv_out_buf_3_address0,
        conv_out_buf_3_ce0,
        conv_out_buf_3_q0,
        p_cast26,
        zext_ln74
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_fm_AWVALID;
input   m_axi_fm_AWREADY;
output  [63:0] m_axi_fm_AWADDR;
output  [0:0] m_axi_fm_AWID;
output  [31:0] m_axi_fm_AWLEN;
output  [2:0] m_axi_fm_AWSIZE;
output  [1:0] m_axi_fm_AWBURST;
output  [1:0] m_axi_fm_AWLOCK;
output  [3:0] m_axi_fm_AWCACHE;
output  [2:0] m_axi_fm_AWPROT;
output  [3:0] m_axi_fm_AWQOS;
output  [3:0] m_axi_fm_AWREGION;
output  [0:0] m_axi_fm_AWUSER;
output   m_axi_fm_WVALID;
input   m_axi_fm_WREADY;
output  [15:0] m_axi_fm_WDATA;
output  [1:0] m_axi_fm_WSTRB;
output   m_axi_fm_WLAST;
output  [0:0] m_axi_fm_WID;
output  [0:0] m_axi_fm_WUSER;
output   m_axi_fm_ARVALID;
input   m_axi_fm_ARREADY;
output  [63:0] m_axi_fm_ARADDR;
output  [0:0] m_axi_fm_ARID;
output  [31:0] m_axi_fm_ARLEN;
output  [2:0] m_axi_fm_ARSIZE;
output  [1:0] m_axi_fm_ARBURST;
output  [1:0] m_axi_fm_ARLOCK;
output  [3:0] m_axi_fm_ARCACHE;
output  [2:0] m_axi_fm_ARPROT;
output  [3:0] m_axi_fm_ARQOS;
output  [3:0] m_axi_fm_ARREGION;
output  [0:0] m_axi_fm_ARUSER;
input   m_axi_fm_RVALID;
output   m_axi_fm_RREADY;
input  [15:0] m_axi_fm_RDATA;
input   m_axi_fm_RLAST;
input  [0:0] m_axi_fm_RID;
input  [9:0] m_axi_fm_RFIFONUM;
input  [0:0] m_axi_fm_RUSER;
input  [1:0] m_axi_fm_RRESP;
input   m_axi_fm_BVALID;
output   m_axi_fm_BREADY;
input  [1:0] m_axi_fm_BRESP;
input  [0:0] m_axi_fm_BID;
input  [0:0] m_axi_fm_BUSER;
input  [5:0] shl_ln70_1;
input  [63:0] output_feature_map;
input  [8:0] mul_ln39;
input  [10:0] zext_ln130_2;
input  [18:0] shl_ln130_mid;
input  [16:0] zext_ln125_1;
input  [18:0] zext_ln130_3;
output  [8:0] conv_out_buf_V_address0;
output   conv_out_buf_V_ce0;
input  [15:0] conv_out_buf_V_q0;
output  [8:0] conv_out_buf_1_address0;
output   conv_out_buf_1_ce0;
input  [15:0] conv_out_buf_1_q0;
output  [8:0] conv_out_buf_2_address0;
output   conv_out_buf_2_ce0;
input  [15:0] conv_out_buf_2_q0;
output  [8:0] conv_out_buf_3_address0;
output   conv_out_buf_3_ce0;
input  [15:0] conv_out_buf_3_q0;
input  [6:0] p_cast26;
input  [8:0] zext_ln74;

reg ap_idle;
reg m_axi_fm_AWVALID;
reg m_axi_fm_WVALID;
reg m_axi_fm_BREADY;
reg conv_out_buf_V_ce0;
reg conv_out_buf_1_ce0;
reg conv_out_buf_2_ce0;
reg conv_out_buf_3_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
reg   [0:0] empty_30_reg_968;
reg    ap_block_state16_io;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
reg   [0:0] empty_32_reg_972;
reg   [0:0] empty_32_reg_972_pp0_iter20_reg;
reg    ap_block_state22_pp0_stage0_iter21;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln119_fu_322_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fm_blk_n_AW;
wire    ap_block_pp0_stage0;
reg    fm_blk_n_W;
reg    fm_blk_n_B;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln130_3_cast_fu_286_p1;
reg   [63:0] zext_ln130_3_cast_reg_830;
wire   [18:0] zext_ln130_2_cast_fu_290_p1;
reg   [18:0] zext_ln130_2_cast_reg_835;
reg   [0:0] icmp_ln119_reg_846;
reg   [0:0] icmp_ln119_reg_846_pp0_iter1_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter2_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter3_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter4_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter5_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter6_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter7_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter8_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter9_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter10_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter11_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter12_reg;
reg   [0:0] icmp_ln119_reg_846_pp0_iter13_reg;
wire   [10:0] add_ln119_1_fu_328_p2;
wire   [5:0] empty_fu_358_p2;
reg   [5:0] empty_reg_855;
wire   [0:0] icmp_ln122_fu_372_p2;
reg   [0:0] icmp_ln122_reg_860;
reg   [0:0] icmp_ln122_reg_860_pp0_iter12_reg;
reg   [0:0] icmp_ln122_reg_860_pp0_iter13_reg;
wire   [5:0] p_mid1102_fu_382_p2;
reg   [5:0] p_mid1102_reg_869;
wire   [2:0] select_ln119_2_fu_387_p3;
reg   [2:0] select_ln119_2_reg_874;
reg   [2:0] select_ln119_2_reg_874_pp0_iter12_reg;
reg   [2:0] select_ln119_2_reg_874_pp0_iter13_reg;
reg   [2:0] select_ln119_2_reg_874_pp0_iter14_reg;
reg   [4:0] i_1_reg_879;
wire   [24:0] mul_ln130_fu_764_p2;
reg   [24:0] mul_ln130_reg_884;
wire   [24:0] mul_ln130_1_fu_770_p2;
reg   [24:0] mul_ln130_1_reg_889;
wire   [0:0] and_ln119_fu_452_p2;
reg   [0:0] and_ln119_reg_894;
reg   [0:0] and_ln119_reg_894_pp0_iter13_reg;
wire   [4:0] add_ln122_fu_458_p2;
reg   [4:0] add_ln122_reg_899;
wire   [4:0] select_ln122_fu_469_p3;
reg   [4:0] select_ln122_reg_904;
wire   [4:0] select_ln122_1_fu_477_p3;
reg   [4:0] select_ln122_1_reg_909;
wire   [63:0] add_ln130_fu_504_p2;
reg   [63:0] add_ln130_reg_915;
wire   [18:0] add_ln130_2_fu_542_p2;
reg   [18:0] add_ln130_2_reg_921;
wire   [63:0] add_ln130_4_fu_551_p2;
reg   [63:0] add_ln130_4_reg_926;
wire   [18:0] add_ln130_7_fu_613_p2;
reg   [18:0] add_ln130_7_reg_932;
wire   [8:0] add_ln1696_1_fu_622_p2;
reg   [8:0] add_ln1696_1_reg_937;
reg   [63:0] fm_addr_reg_962;
wire   [0:0] empty_30_fu_715_p2;
wire   [0:0] empty_32_fu_721_p2;
reg   [0:0] empty_32_reg_972_pp0_iter15_reg;
reg   [0:0] empty_32_reg_972_pp0_iter16_reg;
reg   [0:0] empty_32_reg_972_pp0_iter17_reg;
reg   [0:0] empty_32_reg_972_pp0_iter18_reg;
reg   [0:0] empty_32_reg_972_pp0_iter19_reg;
wire   [14:0] select_ln128_fu_752_p3;
reg   [14:0] select_ln128_reg_976;
reg    ap_condition_exit_pp0_iter14_stage0;
wire   [63:0] zext_ln1696_2_fu_702_p1;
wire  signed [63:0] sext_ln122_fu_698_p1;
reg    ap_block_pp0_stage0_01001;
reg   [4:0] j_fu_144;
wire   [4:0] add_ln125_fu_485_p2;
wire    ap_loop_init;
reg   [4:0] i_fu_148;
reg   [9:0] indvar_flatten91_fu_152;
wire   [9:0] select_ln122_3_fu_404_p3;
reg   [2:0] f_fu_156;
reg   [10:0] indvar_flatten136_fu_160;
reg   [10:0] ap_sig_allocacmp_indvar_flatten136_load;
wire   [5:0] grp_fu_334_p1;
wire   [10:0] grp_fu_340_p0;
wire   [5:0] grp_fu_340_p1;
wire   [5:0] zext_ln119_fu_354_p1;
wire   [2:0] add_ln119_fu_366_p2;
wire   [5:0] zext_ln119_1_fu_378_p1;
wire   [9:0] add_ln122_1_fu_398_p2;
wire   [0:0] icmp_ln125_fu_446_p2;
wire   [0:0] xor_ln119_fu_441_p2;
wire   [4:0] select_ln119_fu_431_p3;
wire   [0:0] or_ln122_fu_464_p2;
wire   [63:0] zext_ln122_fu_501_p1;
wire   [8:0] zext_ln122_1_fu_509_p1;
wire   [8:0] empty_27_fu_512_p2;
wire   [16:0] shl_ln130_1_fu_525_p3;
wire   [18:0] shl_ln2_fu_517_p3;
wire   [18:0] add_ln130_1_fu_537_p2;
wire   [18:0] zext_ln125_fu_533_p1;
wire   [63:0] zext_ln122_2_fu_548_p1;
wire   [6:0] tmp_1_fu_563_p3;
wire   [8:0] p_shl1_fu_556_p3;
wire   [8:0] zext_ln1696_fu_570_p1;
wire   [8:0] zext_ln122_3_fu_580_p1;
wire   [8:0] p_mid189_fu_583_p2;
wire   [16:0] shl_ln130_1_mid1_fu_596_p3;
wire   [18:0] shl_ln130_mid1_fu_588_p3;
wire   [18:0] add_ln130_6_fu_608_p2;
wire   [18:0] zext_ln125_2_fu_604_p1;
wire   [8:0] add_ln1696_fu_574_p2;
wire   [8:0] zext_ln1696_1_fu_619_p1;
wire   [63:0] zext_ln130_1_fu_628_p1;
wire   [63:0] zext_ln130_5_fu_645_p1;
wire   [63:0] select_ln119_1_fu_636_p3;
wire   [63:0] add_ln130_8_fu_648_p2;
wire   [63:0] add_ln130_5_fu_641_p2;
wire   [63:0] add_ln130_3_fu_631_p2;
wire   [62:0] tmp_2_fu_664_p4;
wire   [62:0] tmp_3_fu_674_p4;
wire   [62:0] tmp_s_fu_654_p4;
wire   [62:0] select_ln119_3_fu_684_p3;
wire   [62:0] select_ln122_2_fu_691_p3;
wire   [10:0] grp_fu_334_p2;
wire   [10:0] grp_fu_340_p2;
wire   [15:0] tmp_fu_727_p6;
wire   [0:0] tmp_4_fu_744_p3;
wire   [14:0] trunc_ln1696_fu_740_p1;
wire   [5:0] mul_ln130_fu_764_p0;
wire   [18:0] mul_ln130_fu_764_p1;
wire   [5:0] mul_ln130_1_fu_770_p0;
wire   [18:0] mul_ln130_1_fu_770_p1;
reg    grp_fu_334_ce;
reg    grp_fu_340_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [24:0] mul_ln130_1_fu_770_p00;
wire   [24:0] mul_ln130_fu_764_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_done_reg = 1'b0;
end

tiled_conv_urem_11ns_6ns_11_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 11 ))
urem_11ns_6ns_11_15_1_U376(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_indvar_flatten136_load),
    .din1(grp_fu_334_p1),
    .ce(grp_fu_334_ce),
    .dout(grp_fu_334_p2)
);

tiled_conv_urem_11ns_6ns_11_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 11 ))
urem_11ns_6ns_11_15_1_U377(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_340_p0),
    .din1(grp_fu_340_p1),
    .ce(grp_fu_340_ce),
    .dout(grp_fu_340_p2)
);

tiled_conv_mux_43_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_43_16_1_1_U378(
    .din0(conv_out_buf_V_q0),
    .din1(conv_out_buf_1_q0),
    .din2(conv_out_buf_2_q0),
    .din3(conv_out_buf_3_q0),
    .din4(select_ln119_2_reg_874_pp0_iter14_reg),
    .dout(tmp_fu_727_p6)
);

tiled_conv_mul_mul_6ns_19ns_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 25 ))
mul_mul_6ns_19ns_25_1_1_U379(
    .din0(mul_ln130_fu_764_p0),
    .din1(mul_ln130_fu_764_p1),
    .dout(mul_ln130_fu_764_p2)
);

tiled_conv_mul_mul_6ns_19ns_25_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 25 ))
mul_mul_6ns_19ns_25_1_1_U380(
    .din0(mul_ln130_1_fu_770_p0),
    .din1(mul_ln130_1_fu_770_p1),
    .dout(mul_ln130_1_fu_770_p2)
);

tiled_conv_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter14_stage0)) begin
            ap_enable_reg_pp0_iter15 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            f_fu_156 <= 3'd0;
        end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln119_reg_846_pp0_iter10_reg == 1'd0))) begin
            f_fu_156 <= select_ln119_2_fu_387_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_fu_148 <= 5'd0;
        end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (icmp_ln119_reg_846_pp0_iter11_reg == 1'd0))) begin
            i_fu_148 <= select_ln122_1_fu_477_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln119_fu_322_p2 == 1'd0))) begin
            indvar_flatten136_fu_160 <= add_ln119_1_fu_328_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten136_fu_160 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten91_fu_152 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter11 == 1'b1) & (icmp_ln119_reg_846_pp0_iter10_reg == 1'd0))) begin
            indvar_flatten91_fu_152 <= select_ln122_3_fu_404_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            j_fu_144 <= 5'd0;
        end else if (((ap_enable_reg_pp0_iter12 == 1'b1) & (icmp_ln119_reg_846_pp0_iter11_reg == 1'd0))) begin
            j_fu_144 <= add_ln125_fu_485_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_846_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln122_reg_899 <= add_ln122_fu_458_p2;
        and_ln119_reg_894 <= and_ln119_fu_452_p2;
        mul_ln130_1_reg_889 <= mul_ln130_1_fu_770_p2;
        select_ln122_1_reg_909 <= select_ln122_1_fu_477_p3;
        select_ln122_reg_904 <= select_ln122_fu_469_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_reg_860_pp0_iter12_reg == 1'd0) & (1'd0 == and_ln119_reg_894) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln130_2_reg_921 <= add_ln130_2_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_846_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln130_4_reg_926 <= add_ln130_4_fu_551_p2;
        add_ln1696_1_reg_937 <= add_ln1696_1_fu_622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_846_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln119_reg_894))) begin
        add_ln130_7_reg_932 <= add_ln130_7_fu_613_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln130_reg_915 <= add_ln130_fu_504_p2;
        and_ln119_reg_894_pp0_iter13_reg <= and_ln119_reg_894;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_32_reg_972_pp0_iter15_reg <= empty_32_reg_972;
        empty_32_reg_972_pp0_iter16_reg <= empty_32_reg_972_pp0_iter15_reg;
        empty_32_reg_972_pp0_iter17_reg <= empty_32_reg_972_pp0_iter16_reg;
        empty_32_reg_972_pp0_iter18_reg <= empty_32_reg_972_pp0_iter17_reg;
        empty_32_reg_972_pp0_iter19_reg <= empty_32_reg_972_pp0_iter18_reg;
        empty_32_reg_972_pp0_iter20_reg <= empty_32_reg_972_pp0_iter19_reg;
        empty_reg_855 <= empty_fu_358_p2;
        i_1_reg_879 <= i_fu_148;
        icmp_ln119_reg_846_pp0_iter10_reg <= icmp_ln119_reg_846_pp0_iter9_reg;
        icmp_ln119_reg_846_pp0_iter11_reg <= icmp_ln119_reg_846_pp0_iter10_reg;
        icmp_ln119_reg_846_pp0_iter12_reg <= icmp_ln119_reg_846_pp0_iter11_reg;
        icmp_ln119_reg_846_pp0_iter13_reg <= icmp_ln119_reg_846_pp0_iter12_reg;
        icmp_ln119_reg_846_pp0_iter2_reg <= icmp_ln119_reg_846_pp0_iter1_reg;
        icmp_ln119_reg_846_pp0_iter3_reg <= icmp_ln119_reg_846_pp0_iter2_reg;
        icmp_ln119_reg_846_pp0_iter4_reg <= icmp_ln119_reg_846_pp0_iter3_reg;
        icmp_ln119_reg_846_pp0_iter5_reg <= icmp_ln119_reg_846_pp0_iter4_reg;
        icmp_ln119_reg_846_pp0_iter6_reg <= icmp_ln119_reg_846_pp0_iter5_reg;
        icmp_ln119_reg_846_pp0_iter7_reg <= icmp_ln119_reg_846_pp0_iter6_reg;
        icmp_ln119_reg_846_pp0_iter8_reg <= icmp_ln119_reg_846_pp0_iter7_reg;
        icmp_ln119_reg_846_pp0_iter9_reg <= icmp_ln119_reg_846_pp0_iter8_reg;
        icmp_ln122_reg_860_pp0_iter12_reg <= icmp_ln122_reg_860;
        icmp_ln122_reg_860_pp0_iter13_reg <= icmp_ln122_reg_860_pp0_iter12_reg;
        mul_ln130_reg_884 <= mul_ln130_fu_764_p2;
        select_ln119_2_reg_874_pp0_iter12_reg <= select_ln119_2_reg_874;
        select_ln119_2_reg_874_pp0_iter13_reg <= select_ln119_2_reg_874_pp0_iter12_reg;
        select_ln119_2_reg_874_pp0_iter14_reg <= select_ln119_2_reg_874_pp0_iter13_reg;
        select_ln128_reg_976 <= select_ln128_fu_752_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln119_reg_846 <= icmp_ln119_fu_322_p2;
        icmp_ln119_reg_846_pp0_iter1_reg <= icmp_ln119_reg_846;
        zext_ln130_2_cast_reg_835[10 : 0] <= zext_ln130_2_cast_fu_290_p1[10 : 0];
        zext_ln130_3_cast_reg_830[18 : 0] <= zext_ln130_3_cast_fu_286_p1[18 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_846_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_30_reg_968 <= empty_30_fu_715_p2;
        empty_32_reg_972 <= empty_32_fu_721_p2;
        fm_addr_reg_962 <= sext_ln122_fu_698_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_reg_846_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln122_reg_860 <= icmp_ln122_fu_372_p2;
        p_mid1102_reg_869 <= p_mid1102_fu_382_p2;
        select_ln119_2_reg_874 <= select_ln119_2_fu_387_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln119_fu_322_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (icmp_ln119_reg_846_pp0_iter13_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter14_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter14_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter20_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten136_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten136_load = indvar_flatten136_fu_160;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_out_buf_1_ce0 = 1'b1;
    end else begin
        conv_out_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_out_buf_2_ce0 = 1'b1;
    end else begin
        conv_out_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_out_buf_3_ce0 = 1'b1;
    end else begin
        conv_out_buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_out_buf_V_ce0 = 1'b1;
    end else begin
        conv_out_buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (empty_30_reg_968 == 1'd1))) begin
        fm_blk_n_AW = m_axi_fm_AWREADY;
    end else begin
        fm_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (empty_32_reg_972_pp0_iter20_reg == 1'd1))) begin
        fm_blk_n_B = m_axi_fm_BVALID;
    end else begin
        fm_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fm_blk_n_W = m_axi_fm_WREADY;
    end else begin
        fm_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_334_ce = 1'b1;
    end else begin
        grp_fu_334_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_340_ce = 1'b1;
    end else begin
        grp_fu_340_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_30_reg_968 == 1'd1))) begin
        m_axi_fm_AWVALID = 1'b1;
    end else begin
        m_axi_fm_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_32_reg_972_pp0_iter20_reg == 1'd1))) begin
        m_axi_fm_BREADY = 1'b1;
    end else begin
        m_axi_fm_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_fm_WVALID = 1'b1;
    end else begin
        m_axi_fm_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln119_1_fu_328_p2 = (ap_sig_allocacmp_indvar_flatten136_load + 11'd1);

assign add_ln119_fu_366_p2 = (f_fu_156 + 3'd1);

assign add_ln122_1_fu_398_p2 = (indvar_flatten91_fu_152 + 10'd1);

assign add_ln122_fu_458_p2 = (select_ln119_fu_431_p3 + 5'd1);

assign add_ln125_fu_485_p2 = (select_ln122_fu_469_p3 + 5'd1);

assign add_ln130_1_fu_537_p2 = (shl_ln2_fu_517_p3 + zext_ln130_2_cast_reg_835);

assign add_ln130_2_fu_542_p2 = (add_ln130_1_fu_537_p2 + zext_ln125_fu_533_p1);

assign add_ln130_3_fu_631_p2 = (zext_ln130_1_fu_628_p1 + add_ln130_reg_915);

assign add_ln130_4_fu_551_p2 = (zext_ln122_2_fu_548_p1 + output_feature_map);

assign add_ln130_5_fu_641_p2 = (zext_ln130_3_cast_reg_830 + add_ln130_4_reg_926);

assign add_ln130_6_fu_608_p2 = (shl_ln130_mid1_fu_588_p3 + zext_ln130_2_cast_reg_835);

assign add_ln130_7_fu_613_p2 = (add_ln130_6_fu_608_p2 + zext_ln125_2_fu_604_p1);

assign add_ln130_8_fu_648_p2 = (zext_ln130_5_fu_645_p1 + select_ln119_1_fu_636_p3);

assign add_ln130_fu_504_p2 = (zext_ln122_fu_501_p1 + output_feature_map);

assign add_ln1696_1_fu_622_p2 = (add_ln1696_fu_574_p2 + zext_ln1696_1_fu_619_p1);

assign add_ln1696_fu_574_p2 = (p_shl1_fu_556_p3 + zext_ln1696_fu_570_p1);

assign and_ln119_fu_452_p2 = (xor_ln119_fu_441_p2 & icmp_ln125_fu_446_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter21 == 1'b1) & (empty_32_reg_972_pp0_iter20_reg == 1'd1) & (m_axi_fm_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter21 == 1'b1) & (empty_32_reg_972_pp0_iter20_reg == 1'd1) & (m_axi_fm_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (m_axi_fm_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_block_state16_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter21 == 1'b1) & (empty_32_reg_972_pp0_iter20_reg == 1'd1) & (m_axi_fm_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (m_axi_fm_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_block_state16_io)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_io = ((empty_30_reg_968 == 1'd1) & (m_axi_fm_AWREADY == 1'b0));
end

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp0_stage0_iter21 = ((empty_32_reg_972_pp0_iter20_reg == 1'd1) & (m_axi_fm_BVALID == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv_out_buf_1_address0 = zext_ln1696_2_fu_702_p1;

assign conv_out_buf_2_address0 = zext_ln1696_2_fu_702_p1;

assign conv_out_buf_3_address0 = zext_ln1696_2_fu_702_p1;

assign conv_out_buf_V_address0 = zext_ln1696_2_fu_702_p1;

assign empty_27_fu_512_p2 = (zext_ln122_1_fu_509_p1 + mul_ln39);

assign empty_30_fu_715_p2 = ((grp_fu_334_p2 == 11'd0) ? 1'b1 : 1'b0);

assign empty_32_fu_721_p2 = ((grp_fu_340_p2 == 11'd0) ? 1'b1 : 1'b0);

assign empty_fu_358_p2 = (zext_ln119_fu_354_p1 + shl_ln70_1);

assign grp_fu_334_p1 = 11'd20;

assign grp_fu_340_p0 = (ap_sig_allocacmp_indvar_flatten136_load + 11'd1);

assign grp_fu_340_p1 = 11'd20;

assign icmp_ln119_fu_322_p2 = ((ap_sig_allocacmp_indvar_flatten136_load == 11'd1840) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_372_p2 = ((indvar_flatten91_fu_152 == 10'd460) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_446_p2 = ((j_fu_144 == 5'd20) ? 1'b1 : 1'b0);

assign m_axi_fm_ARADDR = 64'd0;

assign m_axi_fm_ARBURST = 2'd0;

assign m_axi_fm_ARCACHE = 4'd0;

assign m_axi_fm_ARID = 1'd0;

assign m_axi_fm_ARLEN = 32'd0;

assign m_axi_fm_ARLOCK = 2'd0;

assign m_axi_fm_ARPROT = 3'd0;

assign m_axi_fm_ARQOS = 4'd0;

assign m_axi_fm_ARREGION = 4'd0;

assign m_axi_fm_ARSIZE = 3'd0;

assign m_axi_fm_ARUSER = 1'd0;

assign m_axi_fm_ARVALID = 1'b0;

assign m_axi_fm_AWADDR = fm_addr_reg_962;

assign m_axi_fm_AWBURST = 2'd0;

assign m_axi_fm_AWCACHE = 4'd0;

assign m_axi_fm_AWID = 1'd0;

assign m_axi_fm_AWLEN = 32'd20;

assign m_axi_fm_AWLOCK = 2'd0;

assign m_axi_fm_AWPROT = 3'd0;

assign m_axi_fm_AWQOS = 4'd0;

assign m_axi_fm_AWREGION = 4'd0;

assign m_axi_fm_AWSIZE = 3'd0;

assign m_axi_fm_AWUSER = 1'd0;

assign m_axi_fm_RREADY = 1'b0;

assign m_axi_fm_WDATA = select_ln128_reg_976;

assign m_axi_fm_WID = 1'd0;

assign m_axi_fm_WLAST = 1'b0;

assign m_axi_fm_WSTRB = 2'd3;

assign m_axi_fm_WUSER = 1'd0;

assign mul_ln130_1_fu_770_p0 = mul_ln130_1_fu_770_p00;

assign mul_ln130_1_fu_770_p00 = p_mid1102_reg_869;

assign mul_ln130_1_fu_770_p1 = 25'd471040;

assign mul_ln130_fu_764_p0 = mul_ln130_fu_764_p00;

assign mul_ln130_fu_764_p00 = empty_reg_855;

assign mul_ln130_fu_764_p1 = 25'd471040;

assign or_ln122_fu_464_p2 = (icmp_ln122_reg_860 | and_ln119_fu_452_p2);

assign p_mid1102_fu_382_p2 = (zext_ln119_1_fu_378_p1 + shl_ln70_1);

assign p_mid189_fu_583_p2 = (zext_ln122_3_fu_580_p1 + mul_ln39);

assign p_shl1_fu_556_p3 = {{select_ln122_1_reg_909}, {4'd0}};

assign select_ln119_1_fu_636_p3 = ((icmp_ln122_reg_860_pp0_iter13_reg[0:0] == 1'b1) ? add_ln130_4_reg_926 : add_ln130_reg_915);

assign select_ln119_2_fu_387_p3 = ((icmp_ln122_fu_372_p2[0:0] == 1'b1) ? add_ln119_fu_366_p2 : f_fu_156);

assign select_ln119_3_fu_684_p3 = ((icmp_ln122_reg_860_pp0_iter13_reg[0:0] == 1'b1) ? tmp_2_fu_664_p4 : tmp_3_fu_674_p4);

assign select_ln119_fu_431_p3 = ((icmp_ln122_reg_860[0:0] == 1'b1) ? 5'd0 : i_fu_148);

assign select_ln122_1_fu_477_p3 = ((and_ln119_fu_452_p2[0:0] == 1'b1) ? add_ln122_fu_458_p2 : select_ln119_fu_431_p3);

assign select_ln122_2_fu_691_p3 = ((and_ln119_reg_894_pp0_iter13_reg[0:0] == 1'b1) ? tmp_s_fu_654_p4 : select_ln119_3_fu_684_p3);

assign select_ln122_3_fu_404_p3 = ((icmp_ln122_fu_372_p2[0:0] == 1'b1) ? 10'd1 : add_ln122_1_fu_398_p2);

assign select_ln122_fu_469_p3 = ((or_ln122_fu_464_p2[0:0] == 1'b1) ? 5'd0 : j_fu_144);

assign select_ln128_fu_752_p3 = ((tmp_4_fu_744_p3[0:0] == 1'b1) ? 15'd0 : trunc_ln1696_fu_740_p1);

assign sext_ln122_fu_698_p1 = $signed(select_ln122_2_fu_691_p3);

assign shl_ln130_1_fu_525_p3 = {{empty_27_fu_512_p2}, {8'd0}};

assign shl_ln130_1_mid1_fu_596_p3 = {{p_mid189_fu_583_p2}, {8'd0}};

assign shl_ln130_mid1_fu_588_p3 = {{p_mid189_fu_583_p2}, {10'd0}};

assign shl_ln2_fu_517_p3 = {{empty_27_fu_512_p2}, {10'd0}};

assign tmp_1_fu_563_p3 = {{select_ln122_1_reg_909}, {2'd0}};

assign tmp_2_fu_664_p4 = {{add_ln130_5_fu_641_p2[63:1]}};

assign tmp_3_fu_674_p4 = {{add_ln130_3_fu_631_p2[63:1]}};

assign tmp_4_fu_744_p3 = tmp_fu_727_p6[32'd15];

assign tmp_s_fu_654_p4 = {{add_ln130_8_fu_648_p2[63:1]}};

assign trunc_ln1696_fu_740_p1 = tmp_fu_727_p6[14:0];

assign xor_ln119_fu_441_p2 = (icmp_ln122_reg_860 ^ 1'd1);

assign zext_ln119_1_fu_378_p1 = add_ln119_fu_366_p2;

assign zext_ln119_fu_354_p1 = f_fu_156;

assign zext_ln122_1_fu_509_p1 = i_1_reg_879;

assign zext_ln122_2_fu_548_p1 = mul_ln130_1_reg_889;

assign zext_ln122_3_fu_580_p1 = add_ln122_reg_899;

assign zext_ln122_fu_501_p1 = mul_ln130_reg_884;

assign zext_ln125_2_fu_604_p1 = shl_ln130_1_mid1_fu_596_p3;

assign zext_ln125_fu_533_p1 = shl_ln130_1_fu_525_p3;

assign zext_ln130_1_fu_628_p1 = add_ln130_2_reg_921;

assign zext_ln130_2_cast_fu_290_p1 = zext_ln130_2;

assign zext_ln130_3_cast_fu_286_p1 = zext_ln130_3;

assign zext_ln130_5_fu_645_p1 = add_ln130_7_reg_932;

assign zext_ln1696_1_fu_619_p1 = select_ln122_reg_904;

assign zext_ln1696_2_fu_702_p1 = add_ln1696_1_reg_937;

assign zext_ln1696_fu_570_p1 = tmp_1_fu_563_p3;

always @ (posedge ap_clk) begin
    zext_ln130_3_cast_reg_830[63:19] <= 45'b000000000000000000000000000000000000000000000;
    zext_ln130_2_cast_reg_835[18:11] <= 8'b00000000;
end

endmodule //tiled_conv_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH
