// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tiled_conv_conv_7x7_Pipeline_CHANNEL_KERN_I (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sub_ln1319,
        W_buf_0_address0,
        W_buf_0_ce0,
        W_buf_0_q0,
        W_buf_0_address1,
        W_buf_0_ce1,
        W_buf_0_q1,
        W_buf_0_address2,
        W_buf_0_ce2,
        W_buf_0_q2,
        W_buf_0_address3,
        W_buf_0_ce3,
        W_buf_0_q3,
        W_buf_0_address4,
        W_buf_0_ce4,
        W_buf_0_q4,
        W_buf_0_address5,
        W_buf_0_ce5,
        W_buf_0_q5,
        W_buf_0_address6,
        W_buf_0_ce6,
        W_buf_0_q6,
        W_buf_1_address0,
        W_buf_1_ce0,
        W_buf_1_q0,
        W_buf_1_address1,
        W_buf_1_ce1,
        W_buf_1_q1,
        W_buf_1_address2,
        W_buf_1_ce2,
        W_buf_1_q2,
        W_buf_1_address3,
        W_buf_1_ce3,
        W_buf_1_q3,
        W_buf_1_address4,
        W_buf_1_ce4,
        W_buf_1_q4,
        W_buf_1_address5,
        W_buf_1_ce5,
        W_buf_1_q5,
        W_buf_1_address6,
        W_buf_1_ce6,
        W_buf_1_q6,
        W_buf_2_address0,
        W_buf_2_ce0,
        W_buf_2_q0,
        W_buf_2_address1,
        W_buf_2_ce1,
        W_buf_2_q1,
        W_buf_2_address2,
        W_buf_2_ce2,
        W_buf_2_q2,
        W_buf_2_address3,
        W_buf_2_ce3,
        W_buf_2_q3,
        W_buf_2_address4,
        W_buf_2_ce4,
        W_buf_2_q4,
        W_buf_2_address5,
        W_buf_2_ce5,
        W_buf_2_q5,
        W_buf_2_address6,
        W_buf_2_ce6,
        W_buf_2_q6,
        W_buf_3_address0,
        W_buf_3_ce0,
        W_buf_3_q0,
        W_buf_3_address1,
        W_buf_3_ce1,
        W_buf_3_q1,
        W_buf_3_address2,
        W_buf_3_ce2,
        W_buf_3_q2,
        W_buf_3_address3,
        W_buf_3_ce3,
        W_buf_3_q3,
        W_buf_3_address4,
        W_buf_3_ce4,
        W_buf_3_q4,
        W_buf_3_address5,
        W_buf_3_ce5,
        W_buf_3_q5,
        W_buf_3_address6,
        W_buf_3_ce6,
        W_buf_3_q6,
        W_buf_4_address0,
        W_buf_4_ce0,
        W_buf_4_q0,
        W_buf_4_address1,
        W_buf_4_ce1,
        W_buf_4_q1,
        W_buf_4_address2,
        W_buf_4_ce2,
        W_buf_4_q2,
        W_buf_4_address3,
        W_buf_4_ce3,
        W_buf_4_q3,
        W_buf_4_address4,
        W_buf_4_ce4,
        W_buf_4_q4,
        W_buf_4_address5,
        W_buf_4_ce5,
        W_buf_4_q5,
        W_buf_4_address6,
        W_buf_4_ce6,
        W_buf_4_q6,
        W_buf_5_address0,
        W_buf_5_ce0,
        W_buf_5_q0,
        W_buf_5_address1,
        W_buf_5_ce1,
        W_buf_5_q1,
        W_buf_5_address2,
        W_buf_5_ce2,
        W_buf_5_q2,
        W_buf_5_address3,
        W_buf_5_ce3,
        W_buf_5_q3,
        W_buf_5_address4,
        W_buf_5_ce4,
        W_buf_5_q4,
        W_buf_5_address5,
        W_buf_5_ce5,
        W_buf_5_q5,
        W_buf_5_address6,
        W_buf_5_ce6,
        W_buf_5_q6,
        W_buf_6_address0,
        W_buf_6_ce0,
        W_buf_6_q0,
        W_buf_6_address1,
        W_buf_6_ce1,
        W_buf_6_q1,
        W_buf_6_address2,
        W_buf_6_ce2,
        W_buf_6_q2,
        W_buf_6_address3,
        W_buf_6_ce3,
        W_buf_6_q3,
        W_buf_6_address4,
        W_buf_6_ce4,
        W_buf_6_q4,
        W_buf_6_address5,
        W_buf_6_ce5,
        W_buf_6_q5,
        W_buf_6_address6,
        W_buf_6_ce6,
        W_buf_6_q6,
        select_ln34_4,
        X_buf_0_address0,
        X_buf_0_ce0,
        X_buf_0_q0,
        X_buf_1_address0,
        X_buf_1_ce0,
        X_buf_1_q0,
        X_buf_2_address0,
        X_buf_2_ce0,
        X_buf_2_q0,
        X_buf_3_address0,
        X_buf_3_ce0,
        X_buf_3_q0,
        X_buf_4_address0,
        X_buf_4_ce0,
        X_buf_4_q0,
        X_buf_5_address0,
        X_buf_5_ce0,
        X_buf_5_q0,
        X_buf_6_address0,
        X_buf_6_ce0,
        X_buf_6_q0,
        X_buf_7_address0,
        X_buf_7_ce0,
        X_buf_7_q0,
        X_buf_8_address0,
        X_buf_8_ce0,
        X_buf_8_q0,
        X_buf_9_address0,
        X_buf_9_ce0,
        X_buf_9_q0,
        X_buf_10_address0,
        X_buf_10_ce0,
        X_buf_10_q0,
        X_buf_11_address0,
        X_buf_11_ce0,
        X_buf_11_q0,
        X_buf_12_address0,
        X_buf_12_ce0,
        X_buf_12_q0,
        X_buf_13_address0,
        X_buf_13_ce0,
        X_buf_13_q0,
        X_buf_14_address0,
        X_buf_14_ce0,
        X_buf_14_q0,
        X_buf_15_address0,
        X_buf_15_ce0,
        X_buf_15_q0,
        X_buf_16_address0,
        X_buf_16_ce0,
        X_buf_16_q0,
        X_buf_17_address0,
        X_buf_17_ce0,
        X_buf_17_q0,
        X_buf_18_address0,
        X_buf_18_ce0,
        X_buf_18_q0,
        X_buf_19_address0,
        X_buf_19_ce0,
        X_buf_19_q0,
        X_buf_20_address0,
        X_buf_20_ce0,
        X_buf_20_q0,
        X_buf_21_address0,
        X_buf_21_ce0,
        X_buf_21_q0,
        X_buf_22_address0,
        X_buf_22_ce0,
        X_buf_22_q0,
        X_buf_23_address0,
        X_buf_23_ce0,
        X_buf_23_q0,
        X_buf_24_address0,
        X_buf_24_ce0,
        X_buf_24_q0,
        X_buf_25_address0,
        X_buf_25_ce0,
        X_buf_25_q0,
        X_buf_26_address0,
        X_buf_26_ce0,
        X_buf_26_q0,
        X_buf_27_address0,
        X_buf_27_ce0,
        X_buf_27_q0,
        X_buf_28_address0,
        X_buf_28_ce0,
        X_buf_28_q0,
        X_buf_29_address0,
        X_buf_29_ce0,
        X_buf_29_q0,
        X_buf_30_address0,
        X_buf_30_ce0,
        X_buf_30_q0,
        X_buf_31_address0,
        X_buf_31_ce0,
        X_buf_31_q0,
        X_buf_32_address0,
        X_buf_32_ce0,
        X_buf_32_q0,
        X_buf_33_address0,
        X_buf_33_ce0,
        X_buf_33_q0,
        X_buf_34_address0,
        X_buf_34_ce0,
        X_buf_34_q0,
        X_buf_35_address0,
        X_buf_35_ce0,
        X_buf_35_q0,
        X_buf_36_address0,
        X_buf_36_ce0,
        X_buf_36_q0,
        X_buf_37_address0,
        X_buf_37_ce0,
        X_buf_37_q0,
        X_buf_38_address0,
        X_buf_38_ce0,
        X_buf_38_q0,
        X_buf_39_address0,
        X_buf_39_ce0,
        X_buf_39_q0,
        X_buf_40_address0,
        X_buf_40_ce0,
        X_buf_40_q0,
        X_buf_41_address0,
        X_buf_41_ce0,
        X_buf_41_q0,
        X_buf_42_address0,
        X_buf_42_ce0,
        X_buf_42_q0,
        X_buf_43_address0,
        X_buf_43_ce0,
        X_buf_43_q0,
        X_buf_44_address0,
        X_buf_44_ce0,
        X_buf_44_q0,
        select_ln34_1,
        or_ln52,
        add_ln52_2,
        add_ln52_3,
        add_ln52_4,
        add_ln52,
        add_ln52_5,
        val_V_out,
        val_V_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] sub_ln1319;
output  [6:0] W_buf_0_address0;
output   W_buf_0_ce0;
input  [15:0] W_buf_0_q0;
output  [6:0] W_buf_0_address1;
output   W_buf_0_ce1;
input  [15:0] W_buf_0_q1;
output  [6:0] W_buf_0_address2;
output   W_buf_0_ce2;
input  [15:0] W_buf_0_q2;
output  [6:0] W_buf_0_address3;
output   W_buf_0_ce3;
input  [15:0] W_buf_0_q3;
output  [6:0] W_buf_0_address4;
output   W_buf_0_ce4;
input  [15:0] W_buf_0_q4;
output  [6:0] W_buf_0_address5;
output   W_buf_0_ce5;
input  [15:0] W_buf_0_q5;
output  [6:0] W_buf_0_address6;
output   W_buf_0_ce6;
input  [15:0] W_buf_0_q6;
output  [6:0] W_buf_1_address0;
output   W_buf_1_ce0;
input  [15:0] W_buf_1_q0;
output  [6:0] W_buf_1_address1;
output   W_buf_1_ce1;
input  [15:0] W_buf_1_q1;
output  [6:0] W_buf_1_address2;
output   W_buf_1_ce2;
input  [15:0] W_buf_1_q2;
output  [6:0] W_buf_1_address3;
output   W_buf_1_ce3;
input  [15:0] W_buf_1_q3;
output  [6:0] W_buf_1_address4;
output   W_buf_1_ce4;
input  [15:0] W_buf_1_q4;
output  [6:0] W_buf_1_address5;
output   W_buf_1_ce5;
input  [15:0] W_buf_1_q5;
output  [6:0] W_buf_1_address6;
output   W_buf_1_ce6;
input  [15:0] W_buf_1_q6;
output  [6:0] W_buf_2_address0;
output   W_buf_2_ce0;
input  [15:0] W_buf_2_q0;
output  [6:0] W_buf_2_address1;
output   W_buf_2_ce1;
input  [15:0] W_buf_2_q1;
output  [6:0] W_buf_2_address2;
output   W_buf_2_ce2;
input  [15:0] W_buf_2_q2;
output  [6:0] W_buf_2_address3;
output   W_buf_2_ce3;
input  [15:0] W_buf_2_q3;
output  [6:0] W_buf_2_address4;
output   W_buf_2_ce4;
input  [15:0] W_buf_2_q4;
output  [6:0] W_buf_2_address5;
output   W_buf_2_ce5;
input  [15:0] W_buf_2_q5;
output  [6:0] W_buf_2_address6;
output   W_buf_2_ce6;
input  [15:0] W_buf_2_q6;
output  [6:0] W_buf_3_address0;
output   W_buf_3_ce0;
input  [15:0] W_buf_3_q0;
output  [6:0] W_buf_3_address1;
output   W_buf_3_ce1;
input  [15:0] W_buf_3_q1;
output  [6:0] W_buf_3_address2;
output   W_buf_3_ce2;
input  [15:0] W_buf_3_q2;
output  [6:0] W_buf_3_address3;
output   W_buf_3_ce3;
input  [15:0] W_buf_3_q3;
output  [6:0] W_buf_3_address4;
output   W_buf_3_ce4;
input  [15:0] W_buf_3_q4;
output  [6:0] W_buf_3_address5;
output   W_buf_3_ce5;
input  [15:0] W_buf_3_q5;
output  [6:0] W_buf_3_address6;
output   W_buf_3_ce6;
input  [15:0] W_buf_3_q6;
output  [6:0] W_buf_4_address0;
output   W_buf_4_ce0;
input  [15:0] W_buf_4_q0;
output  [6:0] W_buf_4_address1;
output   W_buf_4_ce1;
input  [15:0] W_buf_4_q1;
output  [6:0] W_buf_4_address2;
output   W_buf_4_ce2;
input  [15:0] W_buf_4_q2;
output  [6:0] W_buf_4_address3;
output   W_buf_4_ce3;
input  [15:0] W_buf_4_q3;
output  [6:0] W_buf_4_address4;
output   W_buf_4_ce4;
input  [15:0] W_buf_4_q4;
output  [6:0] W_buf_4_address5;
output   W_buf_4_ce5;
input  [15:0] W_buf_4_q5;
output  [6:0] W_buf_4_address6;
output   W_buf_4_ce6;
input  [15:0] W_buf_4_q6;
output  [6:0] W_buf_5_address0;
output   W_buf_5_ce0;
input  [15:0] W_buf_5_q0;
output  [6:0] W_buf_5_address1;
output   W_buf_5_ce1;
input  [15:0] W_buf_5_q1;
output  [6:0] W_buf_5_address2;
output   W_buf_5_ce2;
input  [15:0] W_buf_5_q2;
output  [6:0] W_buf_5_address3;
output   W_buf_5_ce3;
input  [15:0] W_buf_5_q3;
output  [6:0] W_buf_5_address4;
output   W_buf_5_ce4;
input  [15:0] W_buf_5_q4;
output  [6:0] W_buf_5_address5;
output   W_buf_5_ce5;
input  [15:0] W_buf_5_q5;
output  [6:0] W_buf_5_address6;
output   W_buf_5_ce6;
input  [15:0] W_buf_5_q6;
output  [6:0] W_buf_6_address0;
output   W_buf_6_ce0;
input  [15:0] W_buf_6_q0;
output  [6:0] W_buf_6_address1;
output   W_buf_6_ce1;
input  [15:0] W_buf_6_q1;
output  [6:0] W_buf_6_address2;
output   W_buf_6_ce2;
input  [15:0] W_buf_6_q2;
output  [6:0] W_buf_6_address3;
output   W_buf_6_ce3;
input  [15:0] W_buf_6_q3;
output  [6:0] W_buf_6_address4;
output   W_buf_6_ce4;
input  [15:0] W_buf_6_q4;
output  [6:0] W_buf_6_address5;
output   W_buf_6_ce5;
input  [15:0] W_buf_6_q5;
output  [6:0] W_buf_6_address6;
output   W_buf_6_ce6;
input  [15:0] W_buf_6_q6;
input  [5:0] select_ln34_4;
output  [7:0] X_buf_0_address0;
output   X_buf_0_ce0;
input  [15:0] X_buf_0_q0;
output  [7:0] X_buf_1_address0;
output   X_buf_1_ce0;
input  [15:0] X_buf_1_q0;
output  [7:0] X_buf_2_address0;
output   X_buf_2_ce0;
input  [15:0] X_buf_2_q0;
output  [7:0] X_buf_3_address0;
output   X_buf_3_ce0;
input  [15:0] X_buf_3_q0;
output  [7:0] X_buf_4_address0;
output   X_buf_4_ce0;
input  [15:0] X_buf_4_q0;
output  [7:0] X_buf_5_address0;
output   X_buf_5_ce0;
input  [15:0] X_buf_5_q0;
output  [7:0] X_buf_6_address0;
output   X_buf_6_ce0;
input  [15:0] X_buf_6_q0;
output  [7:0] X_buf_7_address0;
output   X_buf_7_ce0;
input  [15:0] X_buf_7_q0;
output  [7:0] X_buf_8_address0;
output   X_buf_8_ce0;
input  [15:0] X_buf_8_q0;
output  [7:0] X_buf_9_address0;
output   X_buf_9_ce0;
input  [15:0] X_buf_9_q0;
output  [7:0] X_buf_10_address0;
output   X_buf_10_ce0;
input  [15:0] X_buf_10_q0;
output  [7:0] X_buf_11_address0;
output   X_buf_11_ce0;
input  [15:0] X_buf_11_q0;
output  [7:0] X_buf_12_address0;
output   X_buf_12_ce0;
input  [15:0] X_buf_12_q0;
output  [7:0] X_buf_13_address0;
output   X_buf_13_ce0;
input  [15:0] X_buf_13_q0;
output  [7:0] X_buf_14_address0;
output   X_buf_14_ce0;
input  [15:0] X_buf_14_q0;
output  [7:0] X_buf_15_address0;
output   X_buf_15_ce0;
input  [15:0] X_buf_15_q0;
output  [7:0] X_buf_16_address0;
output   X_buf_16_ce0;
input  [15:0] X_buf_16_q0;
output  [7:0] X_buf_17_address0;
output   X_buf_17_ce0;
input  [15:0] X_buf_17_q0;
output  [7:0] X_buf_18_address0;
output   X_buf_18_ce0;
input  [15:0] X_buf_18_q0;
output  [7:0] X_buf_19_address0;
output   X_buf_19_ce0;
input  [15:0] X_buf_19_q0;
output  [7:0] X_buf_20_address0;
output   X_buf_20_ce0;
input  [15:0] X_buf_20_q0;
output  [7:0] X_buf_21_address0;
output   X_buf_21_ce0;
input  [15:0] X_buf_21_q0;
output  [7:0] X_buf_22_address0;
output   X_buf_22_ce0;
input  [15:0] X_buf_22_q0;
output  [7:0] X_buf_23_address0;
output   X_buf_23_ce0;
input  [15:0] X_buf_23_q0;
output  [7:0] X_buf_24_address0;
output   X_buf_24_ce0;
input  [15:0] X_buf_24_q0;
output  [7:0] X_buf_25_address0;
output   X_buf_25_ce0;
input  [15:0] X_buf_25_q0;
output  [7:0] X_buf_26_address0;
output   X_buf_26_ce0;
input  [15:0] X_buf_26_q0;
output  [7:0] X_buf_27_address0;
output   X_buf_27_ce0;
input  [15:0] X_buf_27_q0;
output  [7:0] X_buf_28_address0;
output   X_buf_28_ce0;
input  [15:0] X_buf_28_q0;
output  [7:0] X_buf_29_address0;
output   X_buf_29_ce0;
input  [15:0] X_buf_29_q0;
output  [7:0] X_buf_30_address0;
output   X_buf_30_ce0;
input  [15:0] X_buf_30_q0;
output  [7:0] X_buf_31_address0;
output   X_buf_31_ce0;
input  [15:0] X_buf_31_q0;
output  [7:0] X_buf_32_address0;
output   X_buf_32_ce0;
input  [15:0] X_buf_32_q0;
output  [7:0] X_buf_33_address0;
output   X_buf_33_ce0;
input  [15:0] X_buf_33_q0;
output  [7:0] X_buf_34_address0;
output   X_buf_34_ce0;
input  [15:0] X_buf_34_q0;
output  [7:0] X_buf_35_address0;
output   X_buf_35_ce0;
input  [15:0] X_buf_35_q0;
output  [7:0] X_buf_36_address0;
output   X_buf_36_ce0;
input  [15:0] X_buf_36_q0;
output  [7:0] X_buf_37_address0;
output   X_buf_37_ce0;
input  [15:0] X_buf_37_q0;
output  [7:0] X_buf_38_address0;
output   X_buf_38_ce0;
input  [15:0] X_buf_38_q0;
output  [7:0] X_buf_39_address0;
output   X_buf_39_ce0;
input  [15:0] X_buf_39_q0;
output  [7:0] X_buf_40_address0;
output   X_buf_40_ce0;
input  [15:0] X_buf_40_q0;
output  [7:0] X_buf_41_address0;
output   X_buf_41_ce0;
input  [15:0] X_buf_41_q0;
output  [7:0] X_buf_42_address0;
output   X_buf_42_ce0;
input  [15:0] X_buf_42_q0;
output  [7:0] X_buf_43_address0;
output   X_buf_43_ce0;
input  [15:0] X_buf_43_q0;
output  [7:0] X_buf_44_address0;
output   X_buf_44_ce0;
input  [15:0] X_buf_44_q0;
input  [5:0] select_ln34_1;
input  [5:0] or_ln52;
input  [5:0] add_ln52_2;
input  [5:0] add_ln52_3;
input  [5:0] add_ln52_4;
input  [5:0] add_ln52;
input  [5:0] add_ln52_5;
output  [15:0] val_V_out;
output   val_V_out_ap_vld;

reg ap_idle;
reg W_buf_0_ce0;
reg W_buf_0_ce1;
reg W_buf_0_ce2;
reg W_buf_0_ce3;
reg W_buf_0_ce4;
reg W_buf_0_ce5;
reg W_buf_0_ce6;
reg W_buf_1_ce0;
reg W_buf_1_ce1;
reg W_buf_1_ce2;
reg W_buf_1_ce3;
reg W_buf_1_ce4;
reg W_buf_1_ce5;
reg W_buf_1_ce6;
reg W_buf_2_ce0;
reg W_buf_2_ce1;
reg W_buf_2_ce2;
reg W_buf_2_ce3;
reg W_buf_2_ce4;
reg W_buf_2_ce5;
reg W_buf_2_ce6;
reg W_buf_3_ce0;
reg W_buf_3_ce1;
reg W_buf_3_ce2;
reg W_buf_3_ce3;
reg W_buf_3_ce4;
reg W_buf_3_ce5;
reg W_buf_3_ce6;
reg W_buf_4_ce0;
reg W_buf_4_ce1;
reg W_buf_4_ce2;
reg W_buf_4_ce3;
reg W_buf_4_ce4;
reg W_buf_4_ce5;
reg W_buf_4_ce6;
reg W_buf_5_ce0;
reg W_buf_5_ce1;
reg W_buf_5_ce2;
reg W_buf_5_ce3;
reg W_buf_5_ce4;
reg W_buf_5_ce5;
reg W_buf_5_ce6;
reg W_buf_6_ce0;
reg W_buf_6_ce1;
reg W_buf_6_ce2;
reg W_buf_6_ce3;
reg W_buf_6_ce4;
reg W_buf_6_ce5;
reg W_buf_6_ce6;
reg X_buf_0_ce0;
reg X_buf_1_ce0;
reg X_buf_2_ce0;
reg X_buf_3_ce0;
reg X_buf_4_ce0;
reg X_buf_5_ce0;
reg X_buf_6_ce0;
reg X_buf_7_ce0;
reg X_buf_8_ce0;
reg X_buf_9_ce0;
reg X_buf_10_ce0;
reg X_buf_11_ce0;
reg X_buf_12_ce0;
reg X_buf_13_ce0;
reg X_buf_14_ce0;
reg X_buf_15_ce0;
reg X_buf_16_ce0;
reg X_buf_17_ce0;
reg X_buf_18_ce0;
reg X_buf_19_ce0;
reg X_buf_20_ce0;
reg X_buf_21_ce0;
reg X_buf_22_ce0;
reg X_buf_23_ce0;
reg X_buf_24_ce0;
reg X_buf_25_ce0;
reg X_buf_26_ce0;
reg X_buf_27_ce0;
reg X_buf_28_ce0;
reg X_buf_29_ce0;
reg X_buf_30_ce0;
reg X_buf_31_ce0;
reg X_buf_32_ce0;
reg X_buf_33_ce0;
reg X_buf_34_ce0;
reg X_buf_35_ce0;
reg X_buf_36_ce0;
reg X_buf_37_ce0;
reg X_buf_38_ce0;
reg X_buf_39_ce0;
reg X_buf_40_ce0;
reg X_buf_41_ce0;
reg X_buf_42_ce0;
reg X_buf_43_ce0;
reg X_buf_44_ce0;
reg val_V_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln42_fu_1511_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln42_reg_2819;
reg   [0:0] icmp_ln42_reg_2819_pp0_iter1_reg;
reg   [0:0] icmp_ln42_reg_2819_pp0_iter2_reg;
reg   [0:0] icmp_ln42_reg_2819_pp0_iter3_reg;
wire   [2:0] select_ln42_fu_1538_p3;
reg   [2:0] select_ln42_reg_2823;
reg   [2:0] select_ln42_reg_2823_pp0_iter1_reg;
wire   [1:0] select_ln42_1_fu_1568_p3;
reg   [1:0] select_ln42_1_reg_2835;
wire   [6:0] select_ln42_2_fu_1576_p3;
reg   [6:0] select_ln42_2_reg_2840;
wire   [15:0] tmp1_fu_1774_p43;
reg  signed [15:0] tmp1_reg_3321;
wire   [15:0] tmp_1_fu_1861_p9;
reg  signed [15:0] tmp_1_reg_3326;
wire   [15:0] tmp_s_fu_1880_p46;
reg  signed [15:0] tmp_s_reg_3331;
wire   [15:0] tmp_1_1_fu_1973_p9;
reg  signed [15:0] tmp_1_1_reg_3336;
wire   [15:0] tmp_2_fu_1992_p43;
reg  signed [15:0] tmp_2_reg_3341;
wire   [15:0] tmp_1_2_fu_2079_p9;
reg  signed [15:0] tmp_1_2_reg_3346;
wire   [15:0] tmp_3_fu_2098_p44;
reg  signed [15:0] tmp_3_reg_3351;
wire   [15:0] tmp_1_3_fu_2187_p9;
reg  signed [15:0] tmp_1_3_reg_3356;
wire   [15:0] tmp_4_fu_2206_p45;
reg  signed [15:0] tmp_4_reg_3361;
wire   [15:0] tmp_1_4_fu_2297_p9;
reg  signed [15:0] tmp_1_4_reg_3366;
wire   [15:0] tmp_5_fu_2316_p46;
reg  signed [15:0] tmp_5_reg_3371;
wire   [15:0] tmp_1_5_fu_2409_p9;
reg  signed [15:0] tmp_1_5_reg_3376;
wire   [15:0] tmp_6_fu_2428_p47;
reg  signed [15:0] tmp_6_reg_3381;
wire   [15:0] tmp_1_6_fu_2523_p9;
reg  signed [15:0] tmp_1_6_reg_3386;
wire  signed [28:0] mul_ln864_fu_2708_p2;
reg  signed [28:0] mul_ln864_reg_3391;
wire  signed [28:0] mul_ln864_1_fu_2714_p2;
reg  signed [28:0] mul_ln864_1_reg_3396;
wire  signed [28:0] mul_ln864_2_fu_2720_p2;
reg  signed [28:0] mul_ln864_2_reg_3401;
wire  signed [28:0] mul_ln864_3_fu_2726_p2;
reg  signed [28:0] mul_ln864_3_reg_3406;
wire  signed [28:0] mul_ln864_4_fu_2732_p2;
reg  signed [28:0] mul_ln864_4_reg_3411;
wire  signed [28:0] mul_ln864_5_fu_2738_p2;
reg  signed [28:0] mul_ln864_5_reg_3416;
wire  signed [28:0] mul_ln864_6_fu_2744_p2;
reg  signed [28:0] mul_ln864_6_reg_3421;
wire   [15:0] add_ln859_1_fu_2653_p2;
reg   [15:0] add_ln859_1_reg_3426;
wire   [15:0] add_ln859_4_fu_2671_p2;
reg   [15:0] add_ln859_4_reg_3431;
wire   [63:0] zext_ln1319_2_fu_1608_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1319_3_fu_1623_p1;
wire   [63:0] zext_ln1319_4_fu_1639_p1;
wire   [63:0] zext_ln1319_5_fu_1655_p1;
wire   [63:0] zext_ln1319_6_fu_1671_p1;
wire   [63:0] zext_ln1319_7_fu_1687_p1;
wire   [63:0] zext_ln1319_8_fu_1703_p1;
wire   [63:0] p_cast_fu_1726_p1;
reg   [15:0] val_V_fu_202;
wire   [15:0] add_ln859_6_fu_2684_p2;
wire    ap_loop_init;
reg   [2:0] i_fu_206;
wire   [2:0] add_ln45_fu_1584_p2;
reg   [2:0] ap_sig_allocacmp_i_load;
reg   [1:0] chan_fu_210;
reg   [1:0] ap_sig_allocacmp_chan_1;
reg   [4:0] indvar_flatten_fu_214;
wire   [4:0] add_ln42_3_fu_1517_p2;
reg   [4:0] ap_sig_allocacmp_indvar_flatten_load;
wire    ap_block_pp0_stage0_01001;
wire  signed [6:0] sub_ln1319_cast_fu_1459_p1;
wire   [6:0] zext_ln1319_fu_1489_p1;
wire   [6:0] add_ln1319_fu_1493_p2;
wire   [6:0] shl_ln1319_fu_1499_p2;
wire   [0:0] icmp_ln45_fu_1532_p2;
wire   [1:0] add_ln42_fu_1526_p2;
wire   [6:0] zext_ln1319_1_fu_1546_p1;
wire   [6:0] add_ln1319_1_fu_1550_p2;
wire   [6:0] shl_ln1319_1_fu_1556_p2;
wire   [6:0] sub_ln1319_2_fu_1562_p2;
wire   [6:0] sub_ln1319_1_fu_1505_p2;
wire   [6:0] add_ln42_4_fu_1618_p2;
wire   [6:0] add_ln42_5_fu_1634_p2;
wire   [6:0] add_ln42_6_fu_1650_p2;
wire   [6:0] add_ln42_7_fu_1666_p2;
wire   [6:0] add_ln42_8_fu_1682_p2;
wire   [6:0] add_ln42_9_fu_1698_p2;
wire   [5:0] i_cast_fu_1714_p1;
wire   [5:0] empty_60_fu_1717_p2;
wire   [7:0] grp_fu_2699_p3;
wire   [15:0] trunc_ln864_1_fu_2593_p4;
wire   [15:0] trunc_ln864_2_fu_2602_p4;
wire   [15:0] add_ln859_fu_2647_p2;
wire   [15:0] trunc_ln_fu_2584_p4;
wire   [15:0] trunc_ln864_4_fu_2620_p4;
wire   [15:0] trunc_ln864_3_fu_2611_p4;
wire   [15:0] add_ln859_2_fu_2659_p2;
wire   [15:0] trunc_ln864_5_fu_2629_p4;
wire   [15:0] add_ln859_3_fu_2665_p2;
wire   [15:0] trunc_ln864_6_fu_2638_p4;
wire   [15:0] add_ln859_5_fu_2680_p2;
wire   [1:0] grp_fu_2699_p0;
wire   [5:0] grp_fu_2699_p1;
wire   [5:0] grp_fu_2699_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [7:0] grp_fu_2699_p00;
wire   [7:0] grp_fu_2699_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

tiled_conv_mux_416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_416_16_1_1_U146(
    .din0(X_buf_0_q0),
    .din1(16'd0),
    .din2(X_buf_2_q0),
    .din3(16'd0),
    .din4(X_buf_4_q0),
    .din5(16'd0),
    .din6(X_buf_6_q0),
    .din7(16'd0),
    .din8(X_buf_8_q0),
    .din9(16'd0),
    .din10(X_buf_10_q0),
    .din11(16'd0),
    .din12(X_buf_12_q0),
    .din13(16'd0),
    .din14(X_buf_14_q0),
    .din15(16'd0),
    .din16(X_buf_16_q0),
    .din17(16'd0),
    .din18(X_buf_18_q0),
    .din19(16'd0),
    .din20(X_buf_20_q0),
    .din21(16'd0),
    .din22(X_buf_22_q0),
    .din23(16'd0),
    .din24(X_buf_24_q0),
    .din25(16'd0),
    .din26(X_buf_26_q0),
    .din27(16'd0),
    .din28(X_buf_28_q0),
    .din29(16'd0),
    .din30(X_buf_30_q0),
    .din31(16'd0),
    .din32(X_buf_32_q0),
    .din33(16'd0),
    .din34(X_buf_34_q0),
    .din35(16'd0),
    .din36(X_buf_36_q0),
    .din37(16'd0),
    .din38(X_buf_38_q0),
    .din39(16'd0),
    .din40(X_buf_40_q0),
    .din41(select_ln34_1),
    .dout(tmp1_fu_1774_p43)
);

tiled_conv_mux_73_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_73_16_1_1_U147(
    .din0(W_buf_0_q6),
    .din1(W_buf_1_q6),
    .din2(W_buf_2_q6),
    .din3(W_buf_3_q6),
    .din4(W_buf_4_q6),
    .din5(W_buf_5_q6),
    .din6(W_buf_6_q6),
    .din7(select_ln42_reg_2823_pp0_iter1_reg),
    .dout(tmp_1_fu_1861_p9)
);

tiled_conv_mux_446_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_446_16_1_1_U148(
    .din0(16'd0),
    .din1(X_buf_1_q0),
    .din2(16'd0),
    .din3(X_buf_3_q0),
    .din4(16'd0),
    .din5(X_buf_5_q0),
    .din6(16'd0),
    .din7(X_buf_7_q0),
    .din8(16'd0),
    .din9(X_buf_9_q0),
    .din10(16'd0),
    .din11(X_buf_11_q0),
    .din12(16'd0),
    .din13(X_buf_13_q0),
    .din14(16'd0),
    .din15(X_buf_15_q0),
    .din16(16'd0),
    .din17(X_buf_17_q0),
    .din18(16'd0),
    .din19(X_buf_19_q0),
    .din20(16'd0),
    .din21(X_buf_21_q0),
    .din22(16'd0),
    .din23(X_buf_23_q0),
    .din24(16'd0),
    .din25(X_buf_25_q0),
    .din26(16'd0),
    .din27(X_buf_27_q0),
    .din28(16'd0),
    .din29(X_buf_29_q0),
    .din30(16'd0),
    .din31(X_buf_31_q0),
    .din32(16'd0),
    .din33(X_buf_33_q0),
    .din34(16'd0),
    .din35(X_buf_35_q0),
    .din36(16'd0),
    .din37(X_buf_37_q0),
    .din38(16'd0),
    .din39(X_buf_39_q0),
    .din40(16'd0),
    .din41(X_buf_41_q0),
    .din42(16'd0),
    .din43(X_buf_43_q0),
    .din44(or_ln52),
    .dout(tmp_s_fu_1880_p46)
);

tiled_conv_mux_73_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_73_16_1_1_U149(
    .din0(W_buf_0_q5),
    .din1(W_buf_1_q5),
    .din2(W_buf_2_q5),
    .din3(W_buf_3_q5),
    .din4(W_buf_4_q5),
    .din5(W_buf_5_q5),
    .din6(W_buf_6_q5),
    .din7(select_ln42_reg_2823_pp0_iter1_reg),
    .dout(tmp_1_1_fu_1973_p9)
);

tiled_conv_mux_416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_416_16_1_1_U150(
    .din0(16'd0),
    .din1(16'd0),
    .din2(X_buf_2_q0),
    .din3(16'd0),
    .din4(X_buf_4_q0),
    .din5(16'd0),
    .din6(X_buf_6_q0),
    .din7(16'd0),
    .din8(X_buf_8_q0),
    .din9(16'd0),
    .din10(X_buf_10_q0),
    .din11(16'd0),
    .din12(X_buf_12_q0),
    .din13(16'd0),
    .din14(X_buf_14_q0),
    .din15(16'd0),
    .din16(X_buf_16_q0),
    .din17(16'd0),
    .din18(X_buf_18_q0),
    .din19(16'd0),
    .din20(X_buf_20_q0),
    .din21(16'd0),
    .din22(X_buf_22_q0),
    .din23(16'd0),
    .din24(X_buf_24_q0),
    .din25(16'd0),
    .din26(X_buf_26_q0),
    .din27(16'd0),
    .din28(X_buf_28_q0),
    .din29(16'd0),
    .din30(X_buf_30_q0),
    .din31(16'd0),
    .din32(X_buf_32_q0),
    .din33(16'd0),
    .din34(X_buf_34_q0),
    .din35(16'd0),
    .din36(X_buf_36_q0),
    .din37(16'd0),
    .din38(X_buf_38_q0),
    .din39(16'd0),
    .din40(X_buf_40_q0),
    .din41(add_ln52_2),
    .dout(tmp_2_fu_1992_p43)
);

tiled_conv_mux_73_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_73_16_1_1_U151(
    .din0(W_buf_0_q4),
    .din1(W_buf_1_q4),
    .din2(W_buf_2_q4),
    .din3(W_buf_3_q4),
    .din4(W_buf_4_q4),
    .din5(W_buf_5_q4),
    .din6(W_buf_6_q4),
    .din7(select_ln42_reg_2823_pp0_iter1_reg),
    .dout(tmp_1_2_fu_2079_p9)
);

tiled_conv_mux_426_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_426_16_1_1_U152(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(X_buf_3_q0),
    .din4(16'd0),
    .din5(X_buf_5_q0),
    .din6(16'd0),
    .din7(X_buf_7_q0),
    .din8(16'd0),
    .din9(X_buf_9_q0),
    .din10(16'd0),
    .din11(X_buf_11_q0),
    .din12(16'd0),
    .din13(X_buf_13_q0),
    .din14(16'd0),
    .din15(X_buf_15_q0),
    .din16(16'd0),
    .din17(X_buf_17_q0),
    .din18(16'd0),
    .din19(X_buf_19_q0),
    .din20(16'd0),
    .din21(X_buf_21_q0),
    .din22(16'd0),
    .din23(X_buf_23_q0),
    .din24(16'd0),
    .din25(X_buf_25_q0),
    .din26(16'd0),
    .din27(X_buf_27_q0),
    .din28(16'd0),
    .din29(X_buf_29_q0),
    .din30(16'd0),
    .din31(X_buf_31_q0),
    .din32(16'd0),
    .din33(X_buf_33_q0),
    .din34(16'd0),
    .din35(X_buf_35_q0),
    .din36(16'd0),
    .din37(X_buf_37_q0),
    .din38(16'd0),
    .din39(X_buf_39_q0),
    .din40(16'd0),
    .din41(X_buf_41_q0),
    .din42(add_ln52_3),
    .dout(tmp_3_fu_2098_p44)
);

tiled_conv_mux_73_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_73_16_1_1_U153(
    .din0(W_buf_0_q3),
    .din1(W_buf_1_q3),
    .din2(W_buf_2_q3),
    .din3(W_buf_3_q3),
    .din4(W_buf_4_q3),
    .din5(W_buf_5_q3),
    .din6(W_buf_6_q3),
    .din7(select_ln42_reg_2823_pp0_iter1_reg),
    .dout(tmp_1_3_fu_2187_p9)
);

tiled_conv_mux_436_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_436_16_1_1_U154(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(X_buf_4_q0),
    .din5(16'd0),
    .din6(X_buf_6_q0),
    .din7(16'd0),
    .din8(X_buf_8_q0),
    .din9(16'd0),
    .din10(X_buf_10_q0),
    .din11(16'd0),
    .din12(X_buf_12_q0),
    .din13(16'd0),
    .din14(X_buf_14_q0),
    .din15(16'd0),
    .din16(X_buf_16_q0),
    .din17(16'd0),
    .din18(X_buf_18_q0),
    .din19(16'd0),
    .din20(X_buf_20_q0),
    .din21(16'd0),
    .din22(X_buf_22_q0),
    .din23(16'd0),
    .din24(X_buf_24_q0),
    .din25(16'd0),
    .din26(X_buf_26_q0),
    .din27(16'd0),
    .din28(X_buf_28_q0),
    .din29(16'd0),
    .din30(X_buf_30_q0),
    .din31(16'd0),
    .din32(X_buf_32_q0),
    .din33(16'd0),
    .din34(X_buf_34_q0),
    .din35(16'd0),
    .din36(X_buf_36_q0),
    .din37(16'd0),
    .din38(X_buf_38_q0),
    .din39(16'd0),
    .din40(X_buf_40_q0),
    .din41(16'd0),
    .din42(X_buf_42_q0),
    .din43(add_ln52_4),
    .dout(tmp_4_fu_2206_p45)
);

tiled_conv_mux_73_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_73_16_1_1_U155(
    .din0(W_buf_0_q2),
    .din1(W_buf_1_q2),
    .din2(W_buf_2_q2),
    .din3(W_buf_3_q2),
    .din4(W_buf_4_q2),
    .din5(W_buf_5_q2),
    .din6(W_buf_6_q2),
    .din7(select_ln42_reg_2823_pp0_iter1_reg),
    .dout(tmp_1_4_fu_2297_p9)
);

tiled_conv_mux_446_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_446_16_1_1_U156(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(X_buf_5_q0),
    .din6(16'd0),
    .din7(X_buf_7_q0),
    .din8(16'd0),
    .din9(X_buf_9_q0),
    .din10(16'd0),
    .din11(X_buf_11_q0),
    .din12(16'd0),
    .din13(X_buf_13_q0),
    .din14(16'd0),
    .din15(X_buf_15_q0),
    .din16(16'd0),
    .din17(X_buf_17_q0),
    .din18(16'd0),
    .din19(X_buf_19_q0),
    .din20(16'd0),
    .din21(X_buf_21_q0),
    .din22(16'd0),
    .din23(X_buf_23_q0),
    .din24(16'd0),
    .din25(X_buf_25_q0),
    .din26(16'd0),
    .din27(X_buf_27_q0),
    .din28(16'd0),
    .din29(X_buf_29_q0),
    .din30(16'd0),
    .din31(X_buf_31_q0),
    .din32(16'd0),
    .din33(X_buf_33_q0),
    .din34(16'd0),
    .din35(X_buf_35_q0),
    .din36(16'd0),
    .din37(X_buf_37_q0),
    .din38(16'd0),
    .din39(X_buf_39_q0),
    .din40(16'd0),
    .din41(X_buf_41_q0),
    .din42(16'd0),
    .din43(X_buf_43_q0),
    .din44(add_ln52),
    .dout(tmp_5_fu_2316_p46)
);

tiled_conv_mux_73_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_73_16_1_1_U157(
    .din0(W_buf_0_q1),
    .din1(W_buf_1_q1),
    .din2(W_buf_2_q1),
    .din3(W_buf_3_q1),
    .din4(W_buf_4_q1),
    .din5(W_buf_5_q1),
    .din6(W_buf_6_q1),
    .din7(select_ln42_reg_2823_pp0_iter1_reg),
    .dout(tmp_1_5_fu_2409_p9)
);

tiled_conv_mux_456_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_456_16_1_1_U158(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(X_buf_6_q0),
    .din7(16'd0),
    .din8(X_buf_8_q0),
    .din9(16'd0),
    .din10(X_buf_10_q0),
    .din11(16'd0),
    .din12(X_buf_12_q0),
    .din13(16'd0),
    .din14(X_buf_14_q0),
    .din15(16'd0),
    .din16(X_buf_16_q0),
    .din17(16'd0),
    .din18(X_buf_18_q0),
    .din19(16'd0),
    .din20(X_buf_20_q0),
    .din21(16'd0),
    .din22(X_buf_22_q0),
    .din23(16'd0),
    .din24(X_buf_24_q0),
    .din25(16'd0),
    .din26(X_buf_26_q0),
    .din27(16'd0),
    .din28(X_buf_28_q0),
    .din29(16'd0),
    .din30(X_buf_30_q0),
    .din31(16'd0),
    .din32(X_buf_32_q0),
    .din33(16'd0),
    .din34(X_buf_34_q0),
    .din35(16'd0),
    .din36(X_buf_36_q0),
    .din37(16'd0),
    .din38(X_buf_38_q0),
    .din39(16'd0),
    .din40(X_buf_40_q0),
    .din41(16'd0),
    .din42(X_buf_42_q0),
    .din43(16'd0),
    .din44(X_buf_44_q0),
    .din45(add_ln52_5),
    .dout(tmp_6_fu_2428_p47)
);

tiled_conv_mux_73_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_73_16_1_1_U159(
    .din0(W_buf_0_q0),
    .din1(W_buf_1_q0),
    .din2(W_buf_2_q0),
    .din3(W_buf_3_q0),
    .din4(W_buf_4_q0),
    .din5(W_buf_5_q0),
    .din6(W_buf_6_q0),
    .din7(select_ln42_reg_2823_pp0_iter1_reg),
    .dout(tmp_1_6_fu_2523_p9)
);

tiled_conv_mac_muladd_2ns_6ns_6ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
mac_muladd_2ns_6ns_6ns_8_1_1_U160(
    .din0(grp_fu_2699_p0),
    .din1(grp_fu_2699_p1),
    .din2(grp_fu_2699_p2),
    .dout(grp_fu_2699_p3)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U161(
    .din0(tmp_1_reg_3326),
    .din1(tmp1_reg_3321),
    .dout(mul_ln864_fu_2708_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U162(
    .din0(tmp_1_1_reg_3336),
    .din1(tmp_s_reg_3331),
    .dout(mul_ln864_1_fu_2714_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U163(
    .din0(tmp_1_2_reg_3346),
    .din1(tmp_2_reg_3341),
    .dout(mul_ln864_2_fu_2720_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U164(
    .din0(tmp_1_3_reg_3356),
    .din1(tmp_3_reg_3351),
    .dout(mul_ln864_3_fu_2726_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U165(
    .din0(tmp_1_4_reg_3366),
    .din1(tmp_4_reg_3361),
    .dout(mul_ln864_4_fu_2732_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U166(
    .din0(tmp_1_5_reg_3376),
    .din1(tmp_5_reg_3371),
    .dout(mul_ln864_5_fu_2738_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U167(
    .din0(tmp_1_6_reg_3386),
    .din1(tmp_6_reg_3381),
    .dout(mul_ln864_6_fu_2744_p2)
);

tiled_conv_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln42_fu_1511_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            chan_fu_210 <= select_ln42_1_fu_1568_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            chan_fu_210 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln42_fu_1511_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_206 <= add_ln45_fu_1584_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_206 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln42_fu_1511_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_214 <= add_ln42_3_fu_1517_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_214 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            val_V_fu_202 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            val_V_fu_202 <= add_ln859_6_fu_2684_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln859_1_reg_3426 <= add_ln859_1_fu_2653_p2;
        add_ln859_4_reg_3431 <= add_ln859_4_fu_2671_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        icmp_ln42_reg_2819_pp0_iter2_reg <= icmp_ln42_reg_2819_pp0_iter1_reg;
        icmp_ln42_reg_2819_pp0_iter3_reg <= icmp_ln42_reg_2819_pp0_iter2_reg;
        mul_ln864_1_reg_3396 <= mul_ln864_1_fu_2714_p2;
        mul_ln864_2_reg_3401 <= mul_ln864_2_fu_2720_p2;
        mul_ln864_3_reg_3406 <= mul_ln864_3_fu_2726_p2;
        mul_ln864_4_reg_3411 <= mul_ln864_4_fu_2732_p2;
        mul_ln864_5_reg_3416 <= mul_ln864_5_fu_2738_p2;
        mul_ln864_6_reg_3421 <= mul_ln864_6_fu_2744_p2;
        mul_ln864_reg_3391 <= mul_ln864_fu_2708_p2;
        tmp1_reg_3321 <= tmp1_fu_1774_p43;
        tmp_1_1_reg_3336 <= tmp_1_1_fu_1973_p9;
        tmp_1_2_reg_3346 <= tmp_1_2_fu_2079_p9;
        tmp_1_3_reg_3356 <= tmp_1_3_fu_2187_p9;
        tmp_1_4_reg_3366 <= tmp_1_4_fu_2297_p9;
        tmp_1_5_reg_3376 <= tmp_1_5_fu_2409_p9;
        tmp_1_6_reg_3386 <= tmp_1_6_fu_2523_p9;
        tmp_1_reg_3326 <= tmp_1_fu_1861_p9;
        tmp_2_reg_3341 <= tmp_2_fu_1992_p43;
        tmp_3_reg_3351 <= tmp_3_fu_2098_p44;
        tmp_4_reg_3361 <= tmp_4_fu_2206_p45;
        tmp_5_reg_3371 <= tmp_5_fu_2316_p46;
        tmp_6_reg_3381 <= tmp_6_fu_2428_p47;
        tmp_s_reg_3331 <= tmp_s_fu_1880_p46;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln42_reg_2819 <= icmp_ln42_fu_1511_p2;
        icmp_ln42_reg_2819_pp0_iter1_reg <= icmp_ln42_reg_2819;
        select_ln42_reg_2823_pp0_iter1_reg <= select_ln42_reg_2823;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_fu_1511_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln42_1_reg_2835 <= select_ln42_1_fu_1568_p3;
        select_ln42_2_reg_2840 <= select_ln42_2_fu_1576_p3;
        select_ln42_reg_2823 <= select_ln42_fu_1538_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_0_ce0 = 1'b1;
    end else begin
        W_buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_0_ce1 = 1'b1;
    end else begin
        W_buf_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_0_ce2 = 1'b1;
    end else begin
        W_buf_0_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_0_ce3 = 1'b1;
    end else begin
        W_buf_0_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_0_ce4 = 1'b1;
    end else begin
        W_buf_0_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_0_ce5 = 1'b1;
    end else begin
        W_buf_0_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_0_ce6 = 1'b1;
    end else begin
        W_buf_0_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_1_ce0 = 1'b1;
    end else begin
        W_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_1_ce1 = 1'b1;
    end else begin
        W_buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_1_ce2 = 1'b1;
    end else begin
        W_buf_1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_1_ce3 = 1'b1;
    end else begin
        W_buf_1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_1_ce4 = 1'b1;
    end else begin
        W_buf_1_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_1_ce5 = 1'b1;
    end else begin
        W_buf_1_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_1_ce6 = 1'b1;
    end else begin
        W_buf_1_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_2_ce0 = 1'b1;
    end else begin
        W_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_2_ce1 = 1'b1;
    end else begin
        W_buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_2_ce2 = 1'b1;
    end else begin
        W_buf_2_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_2_ce3 = 1'b1;
    end else begin
        W_buf_2_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_2_ce4 = 1'b1;
    end else begin
        W_buf_2_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_2_ce5 = 1'b1;
    end else begin
        W_buf_2_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_2_ce6 = 1'b1;
    end else begin
        W_buf_2_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_3_ce0 = 1'b1;
    end else begin
        W_buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_3_ce1 = 1'b1;
    end else begin
        W_buf_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_3_ce2 = 1'b1;
    end else begin
        W_buf_3_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_3_ce3 = 1'b1;
    end else begin
        W_buf_3_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_3_ce4 = 1'b1;
    end else begin
        W_buf_3_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_3_ce5 = 1'b1;
    end else begin
        W_buf_3_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_3_ce6 = 1'b1;
    end else begin
        W_buf_3_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_4_ce0 = 1'b1;
    end else begin
        W_buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_4_ce1 = 1'b1;
    end else begin
        W_buf_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_4_ce2 = 1'b1;
    end else begin
        W_buf_4_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_4_ce3 = 1'b1;
    end else begin
        W_buf_4_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_4_ce4 = 1'b1;
    end else begin
        W_buf_4_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_4_ce5 = 1'b1;
    end else begin
        W_buf_4_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_4_ce6 = 1'b1;
    end else begin
        W_buf_4_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_5_ce0 = 1'b1;
    end else begin
        W_buf_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_5_ce1 = 1'b1;
    end else begin
        W_buf_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_5_ce2 = 1'b1;
    end else begin
        W_buf_5_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_5_ce3 = 1'b1;
    end else begin
        W_buf_5_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_5_ce4 = 1'b1;
    end else begin
        W_buf_5_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_5_ce5 = 1'b1;
    end else begin
        W_buf_5_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_5_ce6 = 1'b1;
    end else begin
        W_buf_5_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_6_ce0 = 1'b1;
    end else begin
        W_buf_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_6_ce1 = 1'b1;
    end else begin
        W_buf_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_6_ce2 = 1'b1;
    end else begin
        W_buf_6_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_6_ce3 = 1'b1;
    end else begin
        W_buf_6_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_6_ce4 = 1'b1;
    end else begin
        W_buf_6_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_6_ce5 = 1'b1;
    end else begin
        W_buf_6_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_6_ce6 = 1'b1;
    end else begin
        W_buf_6_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_0_ce0 = 1'b1;
    end else begin
        X_buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_10_ce0 = 1'b1;
    end else begin
        X_buf_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_11_ce0 = 1'b1;
    end else begin
        X_buf_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_12_ce0 = 1'b1;
    end else begin
        X_buf_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_13_ce0 = 1'b1;
    end else begin
        X_buf_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_14_ce0 = 1'b1;
    end else begin
        X_buf_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_15_ce0 = 1'b1;
    end else begin
        X_buf_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_16_ce0 = 1'b1;
    end else begin
        X_buf_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_17_ce0 = 1'b1;
    end else begin
        X_buf_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_18_ce0 = 1'b1;
    end else begin
        X_buf_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_19_ce0 = 1'b1;
    end else begin
        X_buf_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_1_ce0 = 1'b1;
    end else begin
        X_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_20_ce0 = 1'b1;
    end else begin
        X_buf_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_21_ce0 = 1'b1;
    end else begin
        X_buf_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_22_ce0 = 1'b1;
    end else begin
        X_buf_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_23_ce0 = 1'b1;
    end else begin
        X_buf_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_24_ce0 = 1'b1;
    end else begin
        X_buf_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_25_ce0 = 1'b1;
    end else begin
        X_buf_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_26_ce0 = 1'b1;
    end else begin
        X_buf_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_27_ce0 = 1'b1;
    end else begin
        X_buf_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_28_ce0 = 1'b1;
    end else begin
        X_buf_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_29_ce0 = 1'b1;
    end else begin
        X_buf_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_2_ce0 = 1'b1;
    end else begin
        X_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_30_ce0 = 1'b1;
    end else begin
        X_buf_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_31_ce0 = 1'b1;
    end else begin
        X_buf_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_32_ce0 = 1'b1;
    end else begin
        X_buf_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_33_ce0 = 1'b1;
    end else begin
        X_buf_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_34_ce0 = 1'b1;
    end else begin
        X_buf_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_35_ce0 = 1'b1;
    end else begin
        X_buf_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_36_ce0 = 1'b1;
    end else begin
        X_buf_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_37_ce0 = 1'b1;
    end else begin
        X_buf_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_38_ce0 = 1'b1;
    end else begin
        X_buf_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_39_ce0 = 1'b1;
    end else begin
        X_buf_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_3_ce0 = 1'b1;
    end else begin
        X_buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_40_ce0 = 1'b1;
    end else begin
        X_buf_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_41_ce0 = 1'b1;
    end else begin
        X_buf_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_42_ce0 = 1'b1;
    end else begin
        X_buf_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_43_ce0 = 1'b1;
    end else begin
        X_buf_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_44_ce0 = 1'b1;
    end else begin
        X_buf_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_4_ce0 = 1'b1;
    end else begin
        X_buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_5_ce0 = 1'b1;
    end else begin
        X_buf_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_6_ce0 = 1'b1;
    end else begin
        X_buf_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_7_ce0 = 1'b1;
    end else begin
        X_buf_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_8_ce0 = 1'b1;
    end else begin
        X_buf_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_9_ce0 = 1'b1;
    end else begin
        X_buf_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln42_fu_1511_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_chan_1 = 2'd0;
    end else begin
        ap_sig_allocacmp_chan_1 = chan_fu_210;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_206;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_214;
    end
end

always @ (*) begin
    if (((icmp_ln42_reg_2819_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        val_V_out_ap_vld = 1'b1;
    end else begin
        val_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W_buf_0_address0 = zext_ln1319_8_fu_1703_p1;

assign W_buf_0_address1 = zext_ln1319_7_fu_1687_p1;

assign W_buf_0_address2 = zext_ln1319_6_fu_1671_p1;

assign W_buf_0_address3 = zext_ln1319_5_fu_1655_p1;

assign W_buf_0_address4 = zext_ln1319_4_fu_1639_p1;

assign W_buf_0_address5 = zext_ln1319_3_fu_1623_p1;

assign W_buf_0_address6 = zext_ln1319_2_fu_1608_p1;

assign W_buf_1_address0 = zext_ln1319_8_fu_1703_p1;

assign W_buf_1_address1 = zext_ln1319_7_fu_1687_p1;

assign W_buf_1_address2 = zext_ln1319_6_fu_1671_p1;

assign W_buf_1_address3 = zext_ln1319_5_fu_1655_p1;

assign W_buf_1_address4 = zext_ln1319_4_fu_1639_p1;

assign W_buf_1_address5 = zext_ln1319_3_fu_1623_p1;

assign W_buf_1_address6 = zext_ln1319_2_fu_1608_p1;

assign W_buf_2_address0 = zext_ln1319_8_fu_1703_p1;

assign W_buf_2_address1 = zext_ln1319_7_fu_1687_p1;

assign W_buf_2_address2 = zext_ln1319_6_fu_1671_p1;

assign W_buf_2_address3 = zext_ln1319_5_fu_1655_p1;

assign W_buf_2_address4 = zext_ln1319_4_fu_1639_p1;

assign W_buf_2_address5 = zext_ln1319_3_fu_1623_p1;

assign W_buf_2_address6 = zext_ln1319_2_fu_1608_p1;

assign W_buf_3_address0 = zext_ln1319_8_fu_1703_p1;

assign W_buf_3_address1 = zext_ln1319_7_fu_1687_p1;

assign W_buf_3_address2 = zext_ln1319_6_fu_1671_p1;

assign W_buf_3_address3 = zext_ln1319_5_fu_1655_p1;

assign W_buf_3_address4 = zext_ln1319_4_fu_1639_p1;

assign W_buf_3_address5 = zext_ln1319_3_fu_1623_p1;

assign W_buf_3_address6 = zext_ln1319_2_fu_1608_p1;

assign W_buf_4_address0 = zext_ln1319_8_fu_1703_p1;

assign W_buf_4_address1 = zext_ln1319_7_fu_1687_p1;

assign W_buf_4_address2 = zext_ln1319_6_fu_1671_p1;

assign W_buf_4_address3 = zext_ln1319_5_fu_1655_p1;

assign W_buf_4_address4 = zext_ln1319_4_fu_1639_p1;

assign W_buf_4_address5 = zext_ln1319_3_fu_1623_p1;

assign W_buf_4_address6 = zext_ln1319_2_fu_1608_p1;

assign W_buf_5_address0 = zext_ln1319_8_fu_1703_p1;

assign W_buf_5_address1 = zext_ln1319_7_fu_1687_p1;

assign W_buf_5_address2 = zext_ln1319_6_fu_1671_p1;

assign W_buf_5_address3 = zext_ln1319_5_fu_1655_p1;

assign W_buf_5_address4 = zext_ln1319_4_fu_1639_p1;

assign W_buf_5_address5 = zext_ln1319_3_fu_1623_p1;

assign W_buf_5_address6 = zext_ln1319_2_fu_1608_p1;

assign W_buf_6_address0 = zext_ln1319_8_fu_1703_p1;

assign W_buf_6_address1 = zext_ln1319_7_fu_1687_p1;

assign W_buf_6_address2 = zext_ln1319_6_fu_1671_p1;

assign W_buf_6_address3 = zext_ln1319_5_fu_1655_p1;

assign W_buf_6_address4 = zext_ln1319_4_fu_1639_p1;

assign W_buf_6_address5 = zext_ln1319_3_fu_1623_p1;

assign W_buf_6_address6 = zext_ln1319_2_fu_1608_p1;

assign X_buf_0_address0 = p_cast_fu_1726_p1;

assign X_buf_10_address0 = p_cast_fu_1726_p1;

assign X_buf_11_address0 = p_cast_fu_1726_p1;

assign X_buf_12_address0 = p_cast_fu_1726_p1;

assign X_buf_13_address0 = p_cast_fu_1726_p1;

assign X_buf_14_address0 = p_cast_fu_1726_p1;

assign X_buf_15_address0 = p_cast_fu_1726_p1;

assign X_buf_16_address0 = p_cast_fu_1726_p1;

assign X_buf_17_address0 = p_cast_fu_1726_p1;

assign X_buf_18_address0 = p_cast_fu_1726_p1;

assign X_buf_19_address0 = p_cast_fu_1726_p1;

assign X_buf_1_address0 = p_cast_fu_1726_p1;

assign X_buf_20_address0 = p_cast_fu_1726_p1;

assign X_buf_21_address0 = p_cast_fu_1726_p1;

assign X_buf_22_address0 = p_cast_fu_1726_p1;

assign X_buf_23_address0 = p_cast_fu_1726_p1;

assign X_buf_24_address0 = p_cast_fu_1726_p1;

assign X_buf_25_address0 = p_cast_fu_1726_p1;

assign X_buf_26_address0 = p_cast_fu_1726_p1;

assign X_buf_27_address0 = p_cast_fu_1726_p1;

assign X_buf_28_address0 = p_cast_fu_1726_p1;

assign X_buf_29_address0 = p_cast_fu_1726_p1;

assign X_buf_2_address0 = p_cast_fu_1726_p1;

assign X_buf_30_address0 = p_cast_fu_1726_p1;

assign X_buf_31_address0 = p_cast_fu_1726_p1;

assign X_buf_32_address0 = p_cast_fu_1726_p1;

assign X_buf_33_address0 = p_cast_fu_1726_p1;

assign X_buf_34_address0 = p_cast_fu_1726_p1;

assign X_buf_35_address0 = p_cast_fu_1726_p1;

assign X_buf_36_address0 = p_cast_fu_1726_p1;

assign X_buf_37_address0 = p_cast_fu_1726_p1;

assign X_buf_38_address0 = p_cast_fu_1726_p1;

assign X_buf_39_address0 = p_cast_fu_1726_p1;

assign X_buf_3_address0 = p_cast_fu_1726_p1;

assign X_buf_40_address0 = p_cast_fu_1726_p1;

assign X_buf_41_address0 = p_cast_fu_1726_p1;

assign X_buf_42_address0 = p_cast_fu_1726_p1;

assign X_buf_43_address0 = p_cast_fu_1726_p1;

assign X_buf_44_address0 = p_cast_fu_1726_p1;

assign X_buf_4_address0 = p_cast_fu_1726_p1;

assign X_buf_5_address0 = p_cast_fu_1726_p1;

assign X_buf_6_address0 = p_cast_fu_1726_p1;

assign X_buf_7_address0 = p_cast_fu_1726_p1;

assign X_buf_8_address0 = p_cast_fu_1726_p1;

assign X_buf_9_address0 = p_cast_fu_1726_p1;

assign add_ln1319_1_fu_1550_p2 = ($signed(sub_ln1319_cast_fu_1459_p1) + $signed(zext_ln1319_1_fu_1546_p1));

assign add_ln1319_fu_1493_p2 = ($signed(sub_ln1319_cast_fu_1459_p1) + $signed(zext_ln1319_fu_1489_p1));

assign add_ln42_3_fu_1517_p2 = (ap_sig_allocacmp_indvar_flatten_load + 5'd1);

assign add_ln42_4_fu_1618_p2 = (select_ln42_2_reg_2840 + 7'd1);

assign add_ln42_5_fu_1634_p2 = (select_ln42_2_reg_2840 + 7'd2);

assign add_ln42_6_fu_1650_p2 = (select_ln42_2_reg_2840 + 7'd3);

assign add_ln42_7_fu_1666_p2 = (select_ln42_2_reg_2840 + 7'd4);

assign add_ln42_8_fu_1682_p2 = (select_ln42_2_reg_2840 + 7'd5);

assign add_ln42_9_fu_1698_p2 = (select_ln42_2_reg_2840 + 7'd6);

assign add_ln42_fu_1526_p2 = (ap_sig_allocacmp_chan_1 + 2'd1);

assign add_ln45_fu_1584_p2 = (select_ln42_fu_1538_p3 + 3'd1);

assign add_ln859_1_fu_2653_p2 = (add_ln859_fu_2647_p2 + trunc_ln_fu_2584_p4);

assign add_ln859_2_fu_2659_p2 = (trunc_ln864_4_fu_2620_p4 + trunc_ln864_3_fu_2611_p4);

assign add_ln859_3_fu_2665_p2 = (add_ln859_2_fu_2659_p2 + trunc_ln864_5_fu_2629_p4);

assign add_ln859_4_fu_2671_p2 = (add_ln859_3_fu_2665_p2 + trunc_ln864_6_fu_2638_p4);

assign add_ln859_5_fu_2680_p2 = (add_ln859_4_reg_3431 + add_ln859_1_reg_3426);

assign add_ln859_6_fu_2684_p2 = (add_ln859_5_fu_2680_p2 + val_V_fu_202);

assign add_ln859_fu_2647_p2 = (trunc_ln864_1_fu_2593_p4 + trunc_ln864_2_fu_2602_p4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_60_fu_1717_p2 = (i_cast_fu_1714_p1 + select_ln34_4);

assign grp_fu_2699_p0 = grp_fu_2699_p00;

assign grp_fu_2699_p00 = select_ln42_1_reg_2835;

assign grp_fu_2699_p1 = 8'd52;

assign grp_fu_2699_p2 = grp_fu_2699_p20;

assign grp_fu_2699_p20 = empty_60_fu_1717_p2;

assign i_cast_fu_1714_p1 = select_ln42_reg_2823;

assign icmp_ln42_fu_1511_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 5'd21) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_1532_p2 = ((ap_sig_allocacmp_i_load == 3'd7) ? 1'b1 : 1'b0);

assign p_cast_fu_1726_p1 = grp_fu_2699_p3;

assign select_ln42_1_fu_1568_p3 = ((icmp_ln45_fu_1532_p2[0:0] == 1'b1) ? add_ln42_fu_1526_p2 : ap_sig_allocacmp_chan_1);

assign select_ln42_2_fu_1576_p3 = ((icmp_ln45_fu_1532_p2[0:0] == 1'b1) ? sub_ln1319_2_fu_1562_p2 : sub_ln1319_1_fu_1505_p2);

assign select_ln42_fu_1538_p3 = ((icmp_ln45_fu_1532_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_i_load);

assign shl_ln1319_1_fu_1556_p2 = add_ln1319_1_fu_1550_p2 << 7'd3;

assign shl_ln1319_fu_1499_p2 = add_ln1319_fu_1493_p2 << 7'd3;

assign sub_ln1319_1_fu_1505_p2 = (shl_ln1319_fu_1499_p2 - add_ln1319_fu_1493_p2);

assign sub_ln1319_2_fu_1562_p2 = (shl_ln1319_1_fu_1556_p2 - add_ln1319_1_fu_1550_p2);

assign sub_ln1319_cast_fu_1459_p1 = $signed(sub_ln1319);

assign trunc_ln864_1_fu_2593_p4 = {{mul_ln864_1_reg_3396[28:13]}};

assign trunc_ln864_2_fu_2602_p4 = {{mul_ln864_2_reg_3401[28:13]}};

assign trunc_ln864_3_fu_2611_p4 = {{mul_ln864_3_reg_3406[28:13]}};

assign trunc_ln864_4_fu_2620_p4 = {{mul_ln864_4_reg_3411[28:13]}};

assign trunc_ln864_5_fu_2629_p4 = {{mul_ln864_5_reg_3416[28:13]}};

assign trunc_ln864_6_fu_2638_p4 = {{mul_ln864_6_reg_3421[28:13]}};

assign trunc_ln_fu_2584_p4 = {{mul_ln864_reg_3391[28:13]}};

assign val_V_out = val_V_fu_202;

assign zext_ln1319_1_fu_1546_p1 = add_ln42_fu_1526_p2;

assign zext_ln1319_2_fu_1608_p1 = select_ln42_2_reg_2840;

assign zext_ln1319_3_fu_1623_p1 = add_ln42_4_fu_1618_p2;

assign zext_ln1319_4_fu_1639_p1 = add_ln42_5_fu_1634_p2;

assign zext_ln1319_5_fu_1655_p1 = add_ln42_6_fu_1650_p2;

assign zext_ln1319_6_fu_1671_p1 = add_ln42_7_fu_1666_p2;

assign zext_ln1319_7_fu_1687_p1 = add_ln42_8_fu_1682_p2;

assign zext_ln1319_8_fu_1703_p1 = add_ln42_9_fu_1698_p2;

assign zext_ln1319_fu_1489_p1 = ap_sig_allocacmp_chan_1;

endmodule //tiled_conv_conv_7x7_Pipeline_CHANNEL_KERN_I
