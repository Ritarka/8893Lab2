// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tiled_conv_conv_7x7_Pipeline_ZERO_KERN_ZERO_HEIGHT_ZERO_WIDTH (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Y_buf_0_address0,
        Y_buf_0_ce0,
        Y_buf_0_we0,
        Y_buf_0_d0,
        Y_buf_1_address0,
        Y_buf_1_ce0,
        Y_buf_1_we0,
        Y_buf_1_d0,
        Y_buf_2_address0,
        Y_buf_2_ce0,
        Y_buf_2_we0,
        Y_buf_2_d0,
        Y_buf_3_address0,
        Y_buf_3_ce0,
        Y_buf_3_we0,
        Y_buf_3_d0,
        Y_buf_4_address0,
        Y_buf_4_ce0,
        Y_buf_4_we0,
        Y_buf_4_d0,
        Y_buf_5_address0,
        Y_buf_5_ce0,
        Y_buf_5_we0,
        Y_buf_5_d0,
        Y_buf_6_address0,
        Y_buf_6_ce0,
        Y_buf_6_we0,
        Y_buf_6_d0,
        Y_buf_7_address0,
        Y_buf_7_ce0,
        Y_buf_7_we0,
        Y_buf_7_d0,
        Y_buf_8_address0,
        Y_buf_8_ce0,
        Y_buf_8_we0,
        Y_buf_8_d0,
        Y_buf_9_address0,
        Y_buf_9_ce0,
        Y_buf_9_we0,
        Y_buf_9_d0,
        Y_buf_10_address0,
        Y_buf_10_ce0,
        Y_buf_10_we0,
        Y_buf_10_d0,
        Y_buf_11_address0,
        Y_buf_11_ce0,
        Y_buf_11_we0,
        Y_buf_11_d0,
        Y_buf_12_address0,
        Y_buf_12_ce0,
        Y_buf_12_we0,
        Y_buf_12_d0,
        Y_buf_13_address0,
        Y_buf_13_ce0,
        Y_buf_13_we0,
        Y_buf_13_d0,
        Y_buf_14_address0,
        Y_buf_14_ce0,
        Y_buf_14_we0,
        Y_buf_14_d0,
        Y_buf_15_address0,
        Y_buf_15_ce0,
        Y_buf_15_we0,
        Y_buf_15_d0,
        Y_buf_16_address0,
        Y_buf_16_ce0,
        Y_buf_16_we0,
        Y_buf_16_d0,
        Y_buf_17_address0,
        Y_buf_17_ce0,
        Y_buf_17_we0,
        Y_buf_17_d0,
        Y_buf_18_address0,
        Y_buf_18_ce0,
        Y_buf_18_we0,
        Y_buf_18_d0,
        Y_buf_19_address0,
        Y_buf_19_ce0,
        Y_buf_19_we0,
        Y_buf_19_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] Y_buf_0_address0;
output   Y_buf_0_ce0;
output   Y_buf_0_we0;
output  [15:0] Y_buf_0_d0;
output  [6:0] Y_buf_1_address0;
output   Y_buf_1_ce0;
output   Y_buf_1_we0;
output  [15:0] Y_buf_1_d0;
output  [6:0] Y_buf_2_address0;
output   Y_buf_2_ce0;
output   Y_buf_2_we0;
output  [15:0] Y_buf_2_d0;
output  [6:0] Y_buf_3_address0;
output   Y_buf_3_ce0;
output   Y_buf_3_we0;
output  [15:0] Y_buf_3_d0;
output  [6:0] Y_buf_4_address0;
output   Y_buf_4_ce0;
output   Y_buf_4_we0;
output  [15:0] Y_buf_4_d0;
output  [6:0] Y_buf_5_address0;
output   Y_buf_5_ce0;
output   Y_buf_5_we0;
output  [15:0] Y_buf_5_d0;
output  [6:0] Y_buf_6_address0;
output   Y_buf_6_ce0;
output   Y_buf_6_we0;
output  [15:0] Y_buf_6_d0;
output  [6:0] Y_buf_7_address0;
output   Y_buf_7_ce0;
output   Y_buf_7_we0;
output  [15:0] Y_buf_7_d0;
output  [6:0] Y_buf_8_address0;
output   Y_buf_8_ce0;
output   Y_buf_8_we0;
output  [15:0] Y_buf_8_d0;
output  [6:0] Y_buf_9_address0;
output   Y_buf_9_ce0;
output   Y_buf_9_we0;
output  [15:0] Y_buf_9_d0;
output  [6:0] Y_buf_10_address0;
output   Y_buf_10_ce0;
output   Y_buf_10_we0;
output  [15:0] Y_buf_10_d0;
output  [6:0] Y_buf_11_address0;
output   Y_buf_11_ce0;
output   Y_buf_11_we0;
output  [15:0] Y_buf_11_d0;
output  [6:0] Y_buf_12_address0;
output   Y_buf_12_ce0;
output   Y_buf_12_we0;
output  [15:0] Y_buf_12_d0;
output  [6:0] Y_buf_13_address0;
output   Y_buf_13_ce0;
output   Y_buf_13_we0;
output  [15:0] Y_buf_13_d0;
output  [6:0] Y_buf_14_address0;
output   Y_buf_14_ce0;
output   Y_buf_14_we0;
output  [15:0] Y_buf_14_d0;
output  [6:0] Y_buf_15_address0;
output   Y_buf_15_ce0;
output   Y_buf_15_we0;
output  [15:0] Y_buf_15_d0;
output  [6:0] Y_buf_16_address0;
output   Y_buf_16_ce0;
output   Y_buf_16_we0;
output  [15:0] Y_buf_16_d0;
output  [6:0] Y_buf_17_address0;
output   Y_buf_17_ce0;
output   Y_buf_17_we0;
output  [15:0] Y_buf_17_d0;
output  [6:0] Y_buf_18_address0;
output   Y_buf_18_ce0;
output   Y_buf_18_we0;
output  [15:0] Y_buf_18_d0;
output  [6:0] Y_buf_19_address0;
output   Y_buf_19_ce0;
output   Y_buf_19_we0;
output  [15:0] Y_buf_19_d0;

reg ap_idle;
reg Y_buf_0_ce0;
reg Y_buf_0_we0;
reg Y_buf_1_ce0;
reg Y_buf_1_we0;
reg Y_buf_2_ce0;
reg Y_buf_2_we0;
reg Y_buf_3_ce0;
reg Y_buf_3_we0;
reg Y_buf_4_ce0;
reg Y_buf_4_we0;
reg Y_buf_5_ce0;
reg Y_buf_5_we0;
reg Y_buf_6_ce0;
reg Y_buf_6_we0;
reg Y_buf_7_ce0;
reg Y_buf_7_we0;
reg Y_buf_8_ce0;
reg Y_buf_8_we0;
reg Y_buf_9_ce0;
reg Y_buf_9_we0;
reg Y_buf_10_ce0;
reg Y_buf_10_we0;
reg Y_buf_11_ce0;
reg Y_buf_11_we0;
reg Y_buf_12_ce0;
reg Y_buf_12_we0;
reg Y_buf_13_ce0;
reg Y_buf_13_we0;
reg Y_buf_14_ce0;
reg Y_buf_14_we0;
reg Y_buf_15_ce0;
reg Y_buf_15_we0;
reg Y_buf_16_ce0;
reg Y_buf_16_we0;
reg Y_buf_17_ce0;
reg Y_buf_17_we0;
reg Y_buf_18_ce0;
reg Y_buf_18_we0;
reg Y_buf_19_ce0;
reg Y_buf_19_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln29_fu_454_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln31_fu_469_p2;
reg   [0:0] icmp_ln31_reg_675;
wire   [4:0] select_ln31_fu_563_p3;
reg   [4:0] select_ln31_reg_683;
wire   [6:0] grp_fu_627_p3;
reg   [6:0] empty_61_reg_687;
wire   [63:0] p_cast1_fu_604_p1;
wire    ap_block_pp0_stage0;
reg   [4:0] ow_fu_126;
wire   [4:0] add_ln33_fu_583_p2;
wire    ap_loop_init;
reg   [4:0] oh_fu_130;
wire   [4:0] select_ln31_1_fu_571_p3;
reg   [9:0] indvar_flatten_fu_134;
wire   [9:0] select_ln31_2_fu_484_p3;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load_3;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [2:0] kernel_fu_138;
wire   [2:0] select_ln29_1_fu_524_p3;
reg   [10:0] indvar_flatten33_fu_142;
wire   [10:0] add_ln29_1_fu_460_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten33_load;
wire   [9:0] add_ln31_1_fu_478_p2;
wire   [2:0] add_ln29_fu_511_p2;
wire   [0:0] icmp_ln33_fu_540_p2;
wire   [0:0] xor_ln29_fu_535_p2;
wire   [4:0] select_ln29_fu_517_p3;
wire   [0:0] and_ln29_fu_546_p2;
wire   [0:0] or_ln31_fu_558_p2;
wire   [4:0] add_ln31_fu_552_p2;
wire   [2:0] grp_fu_627_p0;
wire   [4:0] grp_fu_627_p1;
wire   [4:0] grp_fu_627_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [6:0] grp_fu_627_p00;
wire   [6:0] grp_fu_627_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

tiled_conv_mac_muladd_3ns_5ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mac_muladd_3ns_5ns_5ns_7_1_1_U146(
    .din0(grp_fu_627_p0),
    .din1(grp_fu_627_p1),
    .din2(grp_fu_627_p2),
    .dout(grp_fu_627_p3)
);

tiled_conv_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln29_fu_454_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten33_fu_142 <= add_ln29_1_fu_460_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten33_fu_142 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln29_fu_454_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_134 <= select_ln31_2_fu_484_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_134 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            kernel_fu_138 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            kernel_fu_138 <= select_ln29_1_fu_524_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            oh_fu_130 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            oh_fu_130 <= select_ln31_1_fu_571_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ow_fu_126 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            ow_fu_126 <= add_ln33_fu_583_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        select_ln31_reg_683 <= select_ln31_fu_563_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_61_reg_687 <= grp_fu_627_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_454_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln31_reg_675 <= icmp_ln31_fu_469_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_0_ce0 = 1'b1;
    end else begin
        Y_buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd0))) begin
        Y_buf_0_we0 = 1'b1;
    end else begin
        Y_buf_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_10_ce0 = 1'b1;
    end else begin
        Y_buf_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd10))) begin
        Y_buf_10_we0 = 1'b1;
    end else begin
        Y_buf_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_11_ce0 = 1'b1;
    end else begin
        Y_buf_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd11))) begin
        Y_buf_11_we0 = 1'b1;
    end else begin
        Y_buf_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_12_ce0 = 1'b1;
    end else begin
        Y_buf_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd12))) begin
        Y_buf_12_we0 = 1'b1;
    end else begin
        Y_buf_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_13_ce0 = 1'b1;
    end else begin
        Y_buf_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd13))) begin
        Y_buf_13_we0 = 1'b1;
    end else begin
        Y_buf_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_14_ce0 = 1'b1;
    end else begin
        Y_buf_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd14))) begin
        Y_buf_14_we0 = 1'b1;
    end else begin
        Y_buf_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_15_ce0 = 1'b1;
    end else begin
        Y_buf_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd15))) begin
        Y_buf_15_we0 = 1'b1;
    end else begin
        Y_buf_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_16_ce0 = 1'b1;
    end else begin
        Y_buf_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd16))) begin
        Y_buf_16_we0 = 1'b1;
    end else begin
        Y_buf_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_17_ce0 = 1'b1;
    end else begin
        Y_buf_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd17))) begin
        Y_buf_17_we0 = 1'b1;
    end else begin
        Y_buf_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_18_ce0 = 1'b1;
    end else begin
        Y_buf_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd18))) begin
        Y_buf_18_we0 = 1'b1;
    end else begin
        Y_buf_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_19_ce0 = 1'b1;
    end else begin
        Y_buf_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & ((select_ln31_reg_683 == 5'd19) | ((select_ln31_reg_683 == 5'd20) | ((select_ln31_reg_683 == 5'd21) | ((select_ln31_reg_683 == 5'd22) | ((select_ln31_reg_683 == 5'd23) | ((select_ln31_reg_683 == 5'd24) | ((select_ln31_reg_683 == 5'd25) | ((select_ln31_reg_683 == 5'd26) | ((select_ln31_reg_683 == 5'd27) | ((select_ln31_reg_683 == 5'd28) | ((select_ln31_reg_683 == 5'd29) | ((select_ln31_reg_683 == 5'd30) | (select_ln31_reg_683 == 5'd31))))))))))))))) begin
        Y_buf_19_we0 = 1'b1;
    end else begin
        Y_buf_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_1_ce0 = 1'b1;
    end else begin
        Y_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd1))) begin
        Y_buf_1_we0 = 1'b1;
    end else begin
        Y_buf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_2_ce0 = 1'b1;
    end else begin
        Y_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd2))) begin
        Y_buf_2_we0 = 1'b1;
    end else begin
        Y_buf_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_3_ce0 = 1'b1;
    end else begin
        Y_buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd3))) begin
        Y_buf_3_we0 = 1'b1;
    end else begin
        Y_buf_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_4_ce0 = 1'b1;
    end else begin
        Y_buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd4))) begin
        Y_buf_4_we0 = 1'b1;
    end else begin
        Y_buf_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_5_ce0 = 1'b1;
    end else begin
        Y_buf_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd5))) begin
        Y_buf_5_we0 = 1'b1;
    end else begin
        Y_buf_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_6_ce0 = 1'b1;
    end else begin
        Y_buf_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd6))) begin
        Y_buf_6_we0 = 1'b1;
    end else begin
        Y_buf_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_7_ce0 = 1'b1;
    end else begin
        Y_buf_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd7))) begin
        Y_buf_7_we0 = 1'b1;
    end else begin
        Y_buf_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_8_ce0 = 1'b1;
    end else begin
        Y_buf_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd8))) begin
        Y_buf_8_we0 = 1'b1;
    end else begin
        Y_buf_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Y_buf_9_ce0 = 1'b1;
    end else begin
        Y_buf_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln31_reg_683 == 5'd9))) begin
        Y_buf_9_we0 = 1'b1;
    end else begin
        Y_buf_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln29_fu_454_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten33_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten33_load = indvar_flatten33_fu_142;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_134;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load_3 = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load_3 = indvar_flatten_fu_134;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Y_buf_0_address0 = p_cast1_fu_604_p1;

assign Y_buf_0_d0 = 16'd0;

assign Y_buf_10_address0 = p_cast1_fu_604_p1;

assign Y_buf_10_d0 = 16'd0;

assign Y_buf_11_address0 = p_cast1_fu_604_p1;

assign Y_buf_11_d0 = 16'd0;

assign Y_buf_12_address0 = p_cast1_fu_604_p1;

assign Y_buf_12_d0 = 16'd0;

assign Y_buf_13_address0 = p_cast1_fu_604_p1;

assign Y_buf_13_d0 = 16'd0;

assign Y_buf_14_address0 = p_cast1_fu_604_p1;

assign Y_buf_14_d0 = 16'd0;

assign Y_buf_15_address0 = p_cast1_fu_604_p1;

assign Y_buf_15_d0 = 16'd0;

assign Y_buf_16_address0 = p_cast1_fu_604_p1;

assign Y_buf_16_d0 = 16'd0;

assign Y_buf_17_address0 = p_cast1_fu_604_p1;

assign Y_buf_17_d0 = 16'd0;

assign Y_buf_18_address0 = p_cast1_fu_604_p1;

assign Y_buf_18_d0 = 16'd0;

assign Y_buf_19_address0 = p_cast1_fu_604_p1;

assign Y_buf_19_d0 = 16'd0;

assign Y_buf_1_address0 = p_cast1_fu_604_p1;

assign Y_buf_1_d0 = 16'd0;

assign Y_buf_2_address0 = p_cast1_fu_604_p1;

assign Y_buf_2_d0 = 16'd0;

assign Y_buf_3_address0 = p_cast1_fu_604_p1;

assign Y_buf_3_d0 = 16'd0;

assign Y_buf_4_address0 = p_cast1_fu_604_p1;

assign Y_buf_4_d0 = 16'd0;

assign Y_buf_5_address0 = p_cast1_fu_604_p1;

assign Y_buf_5_d0 = 16'd0;

assign Y_buf_6_address0 = p_cast1_fu_604_p1;

assign Y_buf_6_d0 = 16'd0;

assign Y_buf_7_address0 = p_cast1_fu_604_p1;

assign Y_buf_7_d0 = 16'd0;

assign Y_buf_8_address0 = p_cast1_fu_604_p1;

assign Y_buf_8_d0 = 16'd0;

assign Y_buf_9_address0 = p_cast1_fu_604_p1;

assign Y_buf_9_d0 = 16'd0;

assign add_ln29_1_fu_460_p2 = (ap_sig_allocacmp_indvar_flatten33_load + 11'd1);

assign add_ln29_fu_511_p2 = (kernel_fu_138 + 3'd1);

assign add_ln31_1_fu_478_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign add_ln31_fu_552_p2 = (select_ln29_fu_517_p3 + 5'd1);

assign add_ln33_fu_583_p2 = (select_ln31_fu_563_p3 + 5'd1);

assign and_ln29_fu_546_p2 = (xor_ln29_fu_535_p2 & icmp_ln33_fu_540_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_627_p0 = grp_fu_627_p00;

assign grp_fu_627_p00 = select_ln29_1_fu_524_p3;

assign grp_fu_627_p1 = 7'd23;

assign grp_fu_627_p2 = grp_fu_627_p20;

assign grp_fu_627_p20 = select_ln31_1_fu_571_p3;

assign icmp_ln29_fu_454_p2 = ((ap_sig_allocacmp_indvar_flatten33_load == 11'd1840) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_469_p2 = ((ap_sig_allocacmp_indvar_flatten_load_3 == 10'd460) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_540_p2 = ((ow_fu_126 == 5'd20) ? 1'b1 : 1'b0);

assign or_ln31_fu_558_p2 = (icmp_ln31_reg_675 | and_ln29_fu_546_p2);

assign p_cast1_fu_604_p1 = empty_61_reg_687;

assign select_ln29_1_fu_524_p3 = ((icmp_ln31_reg_675[0:0] == 1'b1) ? add_ln29_fu_511_p2 : kernel_fu_138);

assign select_ln29_fu_517_p3 = ((icmp_ln31_reg_675[0:0] == 1'b1) ? 5'd0 : oh_fu_130);

assign select_ln31_1_fu_571_p3 = ((and_ln29_fu_546_p2[0:0] == 1'b1) ? add_ln31_fu_552_p2 : select_ln29_fu_517_p3);

assign select_ln31_2_fu_484_p3 = ((icmp_ln31_fu_469_p2[0:0] == 1'b1) ? 10'd1 : add_ln31_1_fu_478_p2);

assign select_ln31_fu_563_p3 = ((or_ln31_fu_558_p2[0:0] == 1'b1) ? 5'd0 : ow_fu_126);

assign xor_ln29_fu_535_p2 = (icmp_ln31_reg_675 ^ 1'd1);

endmodule //tiled_conv_conv_7x7_Pipeline_ZERO_KERN_ZERO_HEIGHT_ZERO_WIDTH
