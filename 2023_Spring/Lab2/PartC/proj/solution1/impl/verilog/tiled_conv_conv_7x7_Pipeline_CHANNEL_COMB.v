// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tiled_conv_conv_7x7_Pipeline_CHANNEL_COMB (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sub_ln1319,
        select_ln41_4,
        X_buf_0_address0,
        X_buf_0_ce0,
        X_buf_0_q0,
        X_buf_1_address0,
        X_buf_1_ce0,
        X_buf_1_q0,
        X_buf_2_address0,
        X_buf_2_ce0,
        X_buf_2_q0,
        X_buf_3_address0,
        X_buf_3_ce0,
        X_buf_3_q0,
        X_buf_4_address0,
        X_buf_4_ce0,
        X_buf_4_q0,
        X_buf_5_address0,
        X_buf_5_ce0,
        X_buf_5_q0,
        X_buf_6_address0,
        X_buf_6_ce0,
        X_buf_6_q0,
        X_buf_7_address0,
        X_buf_7_ce0,
        X_buf_7_q0,
        X_buf_8_address0,
        X_buf_8_ce0,
        X_buf_8_q0,
        X_buf_9_address0,
        X_buf_9_ce0,
        X_buf_9_q0,
        X_buf_10_address0,
        X_buf_10_ce0,
        X_buf_10_q0,
        X_buf_11_address0,
        X_buf_11_ce0,
        X_buf_11_q0,
        X_buf_12_address0,
        X_buf_12_ce0,
        X_buf_12_q0,
        X_buf_13_address0,
        X_buf_13_ce0,
        X_buf_13_q0,
        X_buf_14_address0,
        X_buf_14_ce0,
        X_buf_14_q0,
        X_buf_15_address0,
        X_buf_15_ce0,
        X_buf_15_q0,
        X_buf_16_address0,
        X_buf_16_ce0,
        X_buf_16_q0,
        X_buf_17_address0,
        X_buf_17_ce0,
        X_buf_17_q0,
        X_buf_18_address0,
        X_buf_18_ce0,
        X_buf_18_q0,
        X_buf_19_address0,
        X_buf_19_ce0,
        X_buf_19_q0,
        X_buf_20_address0,
        X_buf_20_ce0,
        X_buf_20_q0,
        X_buf_21_address0,
        X_buf_21_ce0,
        X_buf_21_q0,
        X_buf_22_address0,
        X_buf_22_ce0,
        X_buf_22_q0,
        X_buf_23_address0,
        X_buf_23_ce0,
        X_buf_23_q0,
        X_buf_24_address0,
        X_buf_24_ce0,
        X_buf_24_q0,
        X_buf_25_address0,
        X_buf_25_ce0,
        X_buf_25_q0,
        X_buf_26_address0,
        X_buf_26_ce0,
        X_buf_26_q0,
        X_buf_27_address0,
        X_buf_27_ce0,
        X_buf_27_q0,
        X_buf_28_address0,
        X_buf_28_ce0,
        X_buf_28_q0,
        X_buf_29_address0,
        X_buf_29_ce0,
        X_buf_29_q0,
        X_buf_30_address0,
        X_buf_30_ce0,
        X_buf_30_q0,
        X_buf_31_address0,
        X_buf_31_ce0,
        X_buf_31_q0,
        X_buf_32_address0,
        X_buf_32_ce0,
        X_buf_32_q0,
        X_buf_33_address0,
        X_buf_33_ce0,
        X_buf_33_q0,
        X_buf_34_address0,
        X_buf_34_ce0,
        X_buf_34_q0,
        X_buf_35_address0,
        X_buf_35_ce0,
        X_buf_35_q0,
        X_buf_36_address0,
        X_buf_36_ce0,
        X_buf_36_q0,
        X_buf_37_address0,
        X_buf_37_ce0,
        X_buf_37_q0,
        X_buf_38_address0,
        X_buf_38_ce0,
        X_buf_38_q0,
        X_buf_39_address0,
        X_buf_39_ce0,
        X_buf_39_q0,
        X_buf_40_address0,
        X_buf_40_ce0,
        X_buf_40_q0,
        X_buf_41_address0,
        X_buf_41_ce0,
        X_buf_41_q0,
        X_buf_42_address0,
        X_buf_42_ce0,
        X_buf_42_q0,
        X_buf_43_address0,
        X_buf_43_ce0,
        X_buf_43_q0,
        X_buf_44_address0,
        X_buf_44_ce0,
        X_buf_44_q0,
        select_ln44_3,
        W_buf_0_address0,
        W_buf_0_ce0,
        W_buf_0_q0,
        W_buf_1_address0,
        W_buf_1_ce0,
        W_buf_1_q0,
        W_buf_2_address0,
        W_buf_2_ce0,
        W_buf_2_q0,
        W_buf_3_address0,
        W_buf_3_ce0,
        W_buf_3_q0,
        W_buf_4_address0,
        W_buf_4_ce0,
        W_buf_4_q0,
        W_buf_5_address0,
        W_buf_5_ce0,
        W_buf_5_q0,
        W_buf_6_address0,
        W_buf_6_ce0,
        W_buf_6_q0,
        lhs_out,
        lhs_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] sub_ln1319;
input  [5:0] select_ln41_4;
output  [7:0] X_buf_0_address0;
output   X_buf_0_ce0;
input  [15:0] X_buf_0_q0;
output  [7:0] X_buf_1_address0;
output   X_buf_1_ce0;
input  [15:0] X_buf_1_q0;
output  [7:0] X_buf_2_address0;
output   X_buf_2_ce0;
input  [15:0] X_buf_2_q0;
output  [7:0] X_buf_3_address0;
output   X_buf_3_ce0;
input  [15:0] X_buf_3_q0;
output  [7:0] X_buf_4_address0;
output   X_buf_4_ce0;
input  [15:0] X_buf_4_q0;
output  [7:0] X_buf_5_address0;
output   X_buf_5_ce0;
input  [15:0] X_buf_5_q0;
output  [7:0] X_buf_6_address0;
output   X_buf_6_ce0;
input  [15:0] X_buf_6_q0;
output  [7:0] X_buf_7_address0;
output   X_buf_7_ce0;
input  [15:0] X_buf_7_q0;
output  [7:0] X_buf_8_address0;
output   X_buf_8_ce0;
input  [15:0] X_buf_8_q0;
output  [7:0] X_buf_9_address0;
output   X_buf_9_ce0;
input  [15:0] X_buf_9_q0;
output  [7:0] X_buf_10_address0;
output   X_buf_10_ce0;
input  [15:0] X_buf_10_q0;
output  [7:0] X_buf_11_address0;
output   X_buf_11_ce0;
input  [15:0] X_buf_11_q0;
output  [7:0] X_buf_12_address0;
output   X_buf_12_ce0;
input  [15:0] X_buf_12_q0;
output  [7:0] X_buf_13_address0;
output   X_buf_13_ce0;
input  [15:0] X_buf_13_q0;
output  [7:0] X_buf_14_address0;
output   X_buf_14_ce0;
input  [15:0] X_buf_14_q0;
output  [7:0] X_buf_15_address0;
output   X_buf_15_ce0;
input  [15:0] X_buf_15_q0;
output  [7:0] X_buf_16_address0;
output   X_buf_16_ce0;
input  [15:0] X_buf_16_q0;
output  [7:0] X_buf_17_address0;
output   X_buf_17_ce0;
input  [15:0] X_buf_17_q0;
output  [7:0] X_buf_18_address0;
output   X_buf_18_ce0;
input  [15:0] X_buf_18_q0;
output  [7:0] X_buf_19_address0;
output   X_buf_19_ce0;
input  [15:0] X_buf_19_q0;
output  [7:0] X_buf_20_address0;
output   X_buf_20_ce0;
input  [15:0] X_buf_20_q0;
output  [7:0] X_buf_21_address0;
output   X_buf_21_ce0;
input  [15:0] X_buf_21_q0;
output  [7:0] X_buf_22_address0;
output   X_buf_22_ce0;
input  [15:0] X_buf_22_q0;
output  [7:0] X_buf_23_address0;
output   X_buf_23_ce0;
input  [15:0] X_buf_23_q0;
output  [7:0] X_buf_24_address0;
output   X_buf_24_ce0;
input  [15:0] X_buf_24_q0;
output  [7:0] X_buf_25_address0;
output   X_buf_25_ce0;
input  [15:0] X_buf_25_q0;
output  [7:0] X_buf_26_address0;
output   X_buf_26_ce0;
input  [15:0] X_buf_26_q0;
output  [7:0] X_buf_27_address0;
output   X_buf_27_ce0;
input  [15:0] X_buf_27_q0;
output  [7:0] X_buf_28_address0;
output   X_buf_28_ce0;
input  [15:0] X_buf_28_q0;
output  [7:0] X_buf_29_address0;
output   X_buf_29_ce0;
input  [15:0] X_buf_29_q0;
output  [7:0] X_buf_30_address0;
output   X_buf_30_ce0;
input  [15:0] X_buf_30_q0;
output  [7:0] X_buf_31_address0;
output   X_buf_31_ce0;
input  [15:0] X_buf_31_q0;
output  [7:0] X_buf_32_address0;
output   X_buf_32_ce0;
input  [15:0] X_buf_32_q0;
output  [7:0] X_buf_33_address0;
output   X_buf_33_ce0;
input  [15:0] X_buf_33_q0;
output  [7:0] X_buf_34_address0;
output   X_buf_34_ce0;
input  [15:0] X_buf_34_q0;
output  [7:0] X_buf_35_address0;
output   X_buf_35_ce0;
input  [15:0] X_buf_35_q0;
output  [7:0] X_buf_36_address0;
output   X_buf_36_ce0;
input  [15:0] X_buf_36_q0;
output  [7:0] X_buf_37_address0;
output   X_buf_37_ce0;
input  [15:0] X_buf_37_q0;
output  [7:0] X_buf_38_address0;
output   X_buf_38_ce0;
input  [15:0] X_buf_38_q0;
output  [7:0] X_buf_39_address0;
output   X_buf_39_ce0;
input  [15:0] X_buf_39_q0;
output  [7:0] X_buf_40_address0;
output   X_buf_40_ce0;
input  [15:0] X_buf_40_q0;
output  [7:0] X_buf_41_address0;
output   X_buf_41_ce0;
input  [15:0] X_buf_41_q0;
output  [7:0] X_buf_42_address0;
output   X_buf_42_ce0;
input  [15:0] X_buf_42_q0;
output  [7:0] X_buf_43_address0;
output   X_buf_43_ce0;
input  [15:0] X_buf_43_q0;
output  [7:0] X_buf_44_address0;
output   X_buf_44_ce0;
input  [15:0] X_buf_44_q0;
input  [5:0] select_ln44_3;
output  [6:0] W_buf_0_address0;
output   W_buf_0_ce0;
input  [15:0] W_buf_0_q0;
output  [6:0] W_buf_1_address0;
output   W_buf_1_ce0;
input  [15:0] W_buf_1_q0;
output  [6:0] W_buf_2_address0;
output   W_buf_2_ce0;
input  [15:0] W_buf_2_q0;
output  [6:0] W_buf_3_address0;
output   W_buf_3_ce0;
input  [15:0] W_buf_3_q0;
output  [6:0] W_buf_4_address0;
output   W_buf_4_ce0;
input  [15:0] W_buf_4_q0;
output  [6:0] W_buf_5_address0;
output   W_buf_5_ce0;
input  [15:0] W_buf_5_q0;
output  [6:0] W_buf_6_address0;
output   W_buf_6_ce0;
input  [15:0] W_buf_6_q0;
output  [15:0] lhs_out;
output   lhs_out_ap_vld;

reg ap_idle;
reg X_buf_0_ce0;
reg X_buf_1_ce0;
reg X_buf_2_ce0;
reg X_buf_3_ce0;
reg X_buf_4_ce0;
reg X_buf_5_ce0;
reg X_buf_6_ce0;
reg X_buf_7_ce0;
reg X_buf_8_ce0;
reg X_buf_9_ce0;
reg X_buf_10_ce0;
reg X_buf_11_ce0;
reg X_buf_12_ce0;
reg X_buf_13_ce0;
reg X_buf_14_ce0;
reg X_buf_15_ce0;
reg X_buf_16_ce0;
reg X_buf_17_ce0;
reg X_buf_18_ce0;
reg X_buf_19_ce0;
reg X_buf_20_ce0;
reg X_buf_21_ce0;
reg X_buf_22_ce0;
reg X_buf_23_ce0;
reg X_buf_24_ce0;
reg X_buf_25_ce0;
reg X_buf_26_ce0;
reg X_buf_27_ce0;
reg X_buf_28_ce0;
reg X_buf_29_ce0;
reg X_buf_30_ce0;
reg X_buf_31_ce0;
reg X_buf_32_ce0;
reg X_buf_33_ce0;
reg X_buf_34_ce0;
reg X_buf_35_ce0;
reg X_buf_36_ce0;
reg X_buf_37_ce0;
reg X_buf_38_ce0;
reg X_buf_39_ce0;
reg X_buf_40_ce0;
reg X_buf_41_ce0;
reg X_buf_42_ce0;
reg X_buf_43_ce0;
reg X_buf_44_ce0;
reg W_buf_0_ce0;
reg W_buf_1_ce0;
reg W_buf_2_ce0;
reg W_buf_3_ce0;
reg W_buf_4_ce0;
reg W_buf_5_ce0;
reg W_buf_6_ce0;
reg lhs_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln52_fu_934_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire  signed [6:0] sub_ln1319_cast_fu_907_p1;
reg  signed [6:0] sub_ln1319_cast_reg_1366;
reg   [0:0] icmp_ln52_reg_1371;
reg   [0:0] icmp_ln52_reg_1371_pp0_iter1_reg;
reg   [0:0] icmp_ln52_reg_1371_pp0_iter2_reg;
wire   [0:0] icmp_ln67_fu_949_p2;
reg   [0:0] icmp_ln67_reg_1375;
wire   [5:0] select_ln52_fu_955_p3;
reg   [5:0] select_ln52_reg_1380;
wire   [1:0] select_ln52_1_fu_988_p3;
reg   [1:0] select_ln52_1_reg_1385;
wire   [6:0] add_ln1319_fu_999_p2;
reg   [6:0] add_ln1319_reg_1390;
reg   [3:0] tmp_reg_1396;
reg   [3:0] tmp_reg_1396_pp0_iter2_reg;
wire   [2:0] j_fu_1045_p3;
reg   [2:0] j_reg_1402;
reg   [2:0] j_reg_1402_pp0_iter2_reg;
wire   [15:0] r_V_fu_1159_p47;
reg  signed [15:0] r_V_reg_1668;
wire   [15:0] tmp_2_fu_1255_p9;
reg  signed [15:0] tmp_2_reg_1673;
wire   [63:0] zext_ln1317_3_fu_1083_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1319_1_fu_1140_p1;
reg   [15:0] lhs_fu_190;
wire    ap_loop_init;
reg   [5:0] x_fu_194;
wire   [5:0] x_1_fu_963_p2;
reg   [5:0] ap_sig_allocacmp_x_load;
reg   [1:0] chan_fu_198;
reg   [7:0] indvar_flatten_fu_202;
wire   [7:0] add_ln52_5_fu_940_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
wire    ap_block_pp0_stage0_01001;
wire   [1:0] add_ln52_fu_982_p2;
wire   [6:0] zext_ln1317_fu_995_p1;
wire   [5:0] mul_fu_1007_p0;
wire   [7:0] mul_fu_1007_p1;
wire   [12:0] mul_fu_1007_p2;
wire   [2:0] trunc_ln3_fu_1023_p4;
wire   [0:0] icmp_ln69_fu_1033_p2;
wire   [2:0] add_ln69_fu_1039_p2;
wire   [6:0] shl_ln1319_fu_1061_p2;
wire   [5:0] i_fu_1071_p1;
wire   [5:0] add_ln70_fu_1074_p2;
wire   [7:0] grp_fu_1309_p3;
wire   [6:0] sub_ln1319_1_fu_1066_p2;
wire   [6:0] zext_ln1319_fu_1131_p1;
wire   [6:0] add_ln1319_1_fu_1134_p2;
wire   [5:0] zext_ln69_fu_1151_p1;
wire   [5:0] r_V_fu_1159_p46;
wire  signed [28:0] trunc_ln4_fu_1291_p1;
wire   [28:0] grp_fu_1318_p3;
wire   [1:0] grp_fu_1309_p0;
wire   [5:0] grp_fu_1309_p1;
wire   [5:0] grp_fu_1309_p2;
wire   [28:0] grp_fu_1318_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [7:0] grp_fu_1309_p00;
wire   [7:0] grp_fu_1309_p20;
wire   [12:0] mul_fu_1007_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
end

tiled_conv_mul_6ns_8ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_6ns_8ns_13_1_1_U146(
    .din0(mul_fu_1007_p0),
    .din1(mul_fu_1007_p1),
    .dout(mul_fu_1007_p2)
);

tiled_conv_mux_456_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_456_16_1_1_U147(
    .din0(X_buf_0_q0),
    .din1(X_buf_1_q0),
    .din2(X_buf_2_q0),
    .din3(X_buf_3_q0),
    .din4(X_buf_4_q0),
    .din5(X_buf_5_q0),
    .din6(X_buf_6_q0),
    .din7(X_buf_7_q0),
    .din8(X_buf_8_q0),
    .din9(X_buf_9_q0),
    .din10(X_buf_10_q0),
    .din11(X_buf_11_q0),
    .din12(X_buf_12_q0),
    .din13(X_buf_13_q0),
    .din14(X_buf_14_q0),
    .din15(X_buf_15_q0),
    .din16(X_buf_16_q0),
    .din17(X_buf_17_q0),
    .din18(X_buf_18_q0),
    .din19(X_buf_19_q0),
    .din20(X_buf_20_q0),
    .din21(X_buf_21_q0),
    .din22(X_buf_22_q0),
    .din23(X_buf_23_q0),
    .din24(X_buf_24_q0),
    .din25(X_buf_25_q0),
    .din26(X_buf_26_q0),
    .din27(X_buf_27_q0),
    .din28(X_buf_28_q0),
    .din29(X_buf_29_q0),
    .din30(X_buf_30_q0),
    .din31(X_buf_31_q0),
    .din32(X_buf_32_q0),
    .din33(X_buf_33_q0),
    .din34(X_buf_34_q0),
    .din35(X_buf_35_q0),
    .din36(X_buf_36_q0),
    .din37(X_buf_37_q0),
    .din38(X_buf_38_q0),
    .din39(X_buf_39_q0),
    .din40(X_buf_40_q0),
    .din41(X_buf_41_q0),
    .din42(X_buf_42_q0),
    .din43(X_buf_43_q0),
    .din44(X_buf_44_q0),
    .din45(r_V_fu_1159_p46),
    .dout(r_V_fu_1159_p47)
);

tiled_conv_mux_74_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_74_16_1_1_U148(
    .din0(W_buf_0_q0),
    .din1(W_buf_1_q0),
    .din2(W_buf_2_q0),
    .din3(W_buf_3_q0),
    .din4(W_buf_4_q0),
    .din5(W_buf_5_q0),
    .din6(W_buf_6_q0),
    .din7(tmp_reg_1396_pp0_iter2_reg),
    .dout(tmp_2_fu_1255_p9)
);

tiled_conv_mac_muladd_2ns_6ns_6ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
mac_muladd_2ns_6ns_6ns_8_1_1_U149(
    .din0(grp_fu_1309_p0),
    .din1(grp_fu_1309_p1),
    .din2(grp_fu_1309_p2),
    .dout(grp_fu_1309_p3)
);

tiled_conv_mac_muladd_16s_16s_29ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_1_1_U150(
    .din0(tmp_2_reg_1673),
    .din1(r_V_reg_1668),
    .din2(grp_fu_1318_p2),
    .dout(grp_fu_1318_p3)
);

tiled_conv_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            chan_fu_198 <= 2'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            chan_fu_198 <= select_ln52_1_fu_988_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln52_fu_934_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_202 <= add_ln52_5_fu_940_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_202 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lhs_fu_190 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            lhs_fu_190 <= {{trunc_ln4_fu_1291_p1[28:13]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln52_fu_934_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_194 <= x_1_fu_963_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_194 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1319_reg_1390 <= add_ln1319_fu_999_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln52_reg_1371 <= icmp_ln52_fu_934_p2;
        icmp_ln52_reg_1371_pp0_iter1_reg <= icmp_ln52_reg_1371;
        j_reg_1402 <= j_fu_1045_p3;
        select_ln52_1_reg_1385 <= select_ln52_1_fu_988_p3;
        sub_ln1319_cast_reg_1366 <= sub_ln1319_cast_fu_907_p1;
        tmp_reg_1396 <= {{mul_fu_1007_p2[12:9]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        icmp_ln52_reg_1371_pp0_iter2_reg <= icmp_ln52_reg_1371_pp0_iter1_reg;
        j_reg_1402_pp0_iter2_reg <= j_reg_1402;
        r_V_reg_1668 <= r_V_fu_1159_p47;
        tmp_2_reg_1673 <= tmp_2_fu_1255_p9;
        tmp_reg_1396_pp0_iter2_reg <= tmp_reg_1396;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_934_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln67_reg_1375 <= icmp_ln67_fu_949_p2;
        select_ln52_reg_1380 <= select_ln52_fu_955_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        W_buf_0_ce0 = 1'b1;
    end else begin
        W_buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        W_buf_1_ce0 = 1'b1;
    end else begin
        W_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        W_buf_2_ce0 = 1'b1;
    end else begin
        W_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        W_buf_3_ce0 = 1'b1;
    end else begin
        W_buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        W_buf_4_ce0 = 1'b1;
    end else begin
        W_buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        W_buf_5_ce0 = 1'b1;
    end else begin
        W_buf_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        W_buf_6_ce0 = 1'b1;
    end else begin
        W_buf_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_0_ce0 = 1'b1;
    end else begin
        X_buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_10_ce0 = 1'b1;
    end else begin
        X_buf_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_11_ce0 = 1'b1;
    end else begin
        X_buf_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_12_ce0 = 1'b1;
    end else begin
        X_buf_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_13_ce0 = 1'b1;
    end else begin
        X_buf_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_14_ce0 = 1'b1;
    end else begin
        X_buf_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_15_ce0 = 1'b1;
    end else begin
        X_buf_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_16_ce0 = 1'b1;
    end else begin
        X_buf_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_17_ce0 = 1'b1;
    end else begin
        X_buf_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_18_ce0 = 1'b1;
    end else begin
        X_buf_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_19_ce0 = 1'b1;
    end else begin
        X_buf_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_1_ce0 = 1'b1;
    end else begin
        X_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_20_ce0 = 1'b1;
    end else begin
        X_buf_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_21_ce0 = 1'b1;
    end else begin
        X_buf_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_22_ce0 = 1'b1;
    end else begin
        X_buf_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_23_ce0 = 1'b1;
    end else begin
        X_buf_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_24_ce0 = 1'b1;
    end else begin
        X_buf_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_25_ce0 = 1'b1;
    end else begin
        X_buf_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_26_ce0 = 1'b1;
    end else begin
        X_buf_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_27_ce0 = 1'b1;
    end else begin
        X_buf_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_28_ce0 = 1'b1;
    end else begin
        X_buf_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_29_ce0 = 1'b1;
    end else begin
        X_buf_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_2_ce0 = 1'b1;
    end else begin
        X_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_30_ce0 = 1'b1;
    end else begin
        X_buf_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_31_ce0 = 1'b1;
    end else begin
        X_buf_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_32_ce0 = 1'b1;
    end else begin
        X_buf_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_33_ce0 = 1'b1;
    end else begin
        X_buf_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_34_ce0 = 1'b1;
    end else begin
        X_buf_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_35_ce0 = 1'b1;
    end else begin
        X_buf_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_36_ce0 = 1'b1;
    end else begin
        X_buf_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_37_ce0 = 1'b1;
    end else begin
        X_buf_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_38_ce0 = 1'b1;
    end else begin
        X_buf_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_39_ce0 = 1'b1;
    end else begin
        X_buf_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_3_ce0 = 1'b1;
    end else begin
        X_buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_40_ce0 = 1'b1;
    end else begin
        X_buf_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_41_ce0 = 1'b1;
    end else begin
        X_buf_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_42_ce0 = 1'b1;
    end else begin
        X_buf_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_43_ce0 = 1'b1;
    end else begin
        X_buf_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_44_ce0 = 1'b1;
    end else begin
        X_buf_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_4_ce0 = 1'b1;
    end else begin
        X_buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_5_ce0 = 1'b1;
    end else begin
        X_buf_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_6_ce0 = 1'b1;
    end else begin
        X_buf_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_7_ce0 = 1'b1;
    end else begin
        X_buf_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_8_ce0 = 1'b1;
    end else begin
        X_buf_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        X_buf_9_ce0 = 1'b1;
    end else begin
        X_buf_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_fu_934_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_202;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_load = 6'd0;
    end else begin
        ap_sig_allocacmp_x_load = x_fu_194;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln52_reg_1371_pp0_iter2_reg == 1'd1))) begin
        lhs_out_ap_vld = 1'b1;
    end else begin
        lhs_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W_buf_0_address0 = zext_ln1319_1_fu_1140_p1;

assign W_buf_1_address0 = zext_ln1319_1_fu_1140_p1;

assign W_buf_2_address0 = zext_ln1319_1_fu_1140_p1;

assign W_buf_3_address0 = zext_ln1319_1_fu_1140_p1;

assign W_buf_4_address0 = zext_ln1319_1_fu_1140_p1;

assign W_buf_5_address0 = zext_ln1319_1_fu_1140_p1;

assign W_buf_6_address0 = zext_ln1319_1_fu_1140_p1;

assign X_buf_0_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_10_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_11_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_12_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_13_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_14_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_15_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_16_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_17_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_18_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_19_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_1_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_20_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_21_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_22_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_23_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_24_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_25_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_26_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_27_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_28_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_29_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_2_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_30_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_31_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_32_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_33_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_34_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_35_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_36_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_37_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_38_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_39_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_3_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_40_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_41_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_42_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_43_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_44_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_4_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_5_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_6_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_7_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_8_address0 = zext_ln1317_3_fu_1083_p1;

assign X_buf_9_address0 = zext_ln1317_3_fu_1083_p1;

assign add_ln1319_1_fu_1134_p2 = (sub_ln1319_1_fu_1066_p2 + zext_ln1319_fu_1131_p1);

assign add_ln1319_fu_999_p2 = ($signed(sub_ln1319_cast_reg_1366) + $signed(zext_ln1317_fu_995_p1));

assign add_ln52_5_fu_940_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign add_ln52_fu_982_p2 = (chan_fu_198 + 2'd1);

assign add_ln69_fu_1039_p2 = (trunc_ln3_fu_1023_p4 + 3'd1);

assign add_ln70_fu_1074_p2 = (i_fu_1071_p1 + select_ln41_4);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_1309_p0 = grp_fu_1309_p00;

assign grp_fu_1309_p00 = select_ln52_1_reg_1385;

assign grp_fu_1309_p1 = 8'd52;

assign grp_fu_1309_p2 = grp_fu_1309_p20;

assign grp_fu_1309_p20 = add_ln70_fu_1074_p2;

assign grp_fu_1318_p2 = {{lhs_fu_190}, {13'd0}};

assign i_fu_1071_p1 = tmp_reg_1396;

assign icmp_ln52_fu_934_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd147) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_949_p2 = ((ap_sig_allocacmp_x_load == 6'd49) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1033_p2 = ((trunc_ln3_fu_1023_p4 != 3'd7) ? 1'b1 : 1'b0);

assign j_fu_1045_p3 = ((icmp_ln69_fu_1033_p2[0:0] == 1'b1) ? trunc_ln3_fu_1023_p4 : add_ln69_fu_1039_p2);

assign lhs_out = lhs_fu_190;

assign mul_fu_1007_p0 = mul_fu_1007_p00;

assign mul_fu_1007_p00 = select_ln52_reg_1380;

assign mul_fu_1007_p1 = 13'd74;

assign r_V_fu_1159_p46 = (zext_ln69_fu_1151_p1 + select_ln44_3);

assign select_ln52_1_fu_988_p3 = ((icmp_ln67_reg_1375[0:0] == 1'b1) ? add_ln52_fu_982_p2 : chan_fu_198);

assign select_ln52_fu_955_p3 = ((icmp_ln67_fu_949_p2[0:0] == 1'b1) ? 6'd0 : ap_sig_allocacmp_x_load);

assign shl_ln1319_fu_1061_p2 = add_ln1319_reg_1390 << 7'd3;

assign sub_ln1319_1_fu_1066_p2 = (shl_ln1319_fu_1061_p2 - add_ln1319_reg_1390);

assign sub_ln1319_cast_fu_907_p1 = $signed(sub_ln1319);

assign trunc_ln3_fu_1023_p4 = {{mul_fu_1007_p2[11:9]}};

assign trunc_ln4_fu_1291_p1 = grp_fu_1318_p3;

assign x_1_fu_963_p2 = (select_ln52_fu_955_p3 + 6'd1);

assign zext_ln1317_3_fu_1083_p1 = grp_fu_1309_p3;

assign zext_ln1317_fu_995_p1 = select_ln52_1_fu_988_p3;

assign zext_ln1319_1_fu_1140_p1 = add_ln1319_1_fu_1134_p2;

assign zext_ln1319_fu_1131_p1 = j_reg_1402;

assign zext_ln69_fu_1151_p1 = j_reg_1402_pp0_iter2_reg;

endmodule //tiled_conv_conv_7x7_Pipeline_CHANNEL_COMB
