// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tiled_conv_conv_7x7_Pipeline_CHANNEL_KERN_I_KERN_J (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        select_ln41_3,
        sub_ln1319,
        W_buf_0_address0,
        W_buf_0_ce0,
        W_buf_0_q0,
        W_buf_1_address0,
        W_buf_1_ce0,
        W_buf_1_q0,
        W_buf_2_address0,
        W_buf_2_ce0,
        W_buf_2_q0,
        W_buf_3_address0,
        W_buf_3_ce0,
        W_buf_3_q0,
        W_buf_4_address0,
        W_buf_4_ce0,
        W_buf_4_q0,
        W_buf_5_address0,
        W_buf_5_ce0,
        W_buf_5_q0,
        W_buf_6_address0,
        W_buf_6_ce0,
        W_buf_6_q0,
        select_ln44_2,
        X_buf_address0,
        X_buf_ce0,
        X_buf_q0,
        lhs_out,
        lhs_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] select_ln41_3;
input  [5:0] sub_ln1319;
output  [6:0] W_buf_0_address0;
output   W_buf_0_ce0;
input  [15:0] W_buf_0_q0;
output  [6:0] W_buf_1_address0;
output   W_buf_1_ce0;
input  [15:0] W_buf_1_q0;
output  [6:0] W_buf_2_address0;
output   W_buf_2_ce0;
input  [15:0] W_buf_2_q0;
output  [6:0] W_buf_3_address0;
output   W_buf_3_ce0;
input  [15:0] W_buf_3_q0;
output  [6:0] W_buf_4_address0;
output   W_buf_4_ce0;
input  [15:0] W_buf_4_q0;
output  [6:0] W_buf_5_address0;
output   W_buf_5_ce0;
input  [15:0] W_buf_5_q0;
output  [6:0] W_buf_6_address0;
output   W_buf_6_ce0;
input  [15:0] W_buf_6_q0;
input  [5:0] select_ln44_2;
output  [12:0] X_buf_address0;
output   X_buf_ce0;
input  [15:0] X_buf_q0;
output  [15:0] lhs_out;
output   lhs_out_ap_vld;

reg ap_idle;
reg W_buf_0_ce0;
reg W_buf_1_ce0;
reg W_buf_2_ce0;
reg W_buf_3_ce0;
reg W_buf_4_ce0;
reg W_buf_5_ce0;
reg W_buf_6_ce0;
reg X_buf_ce0;
reg lhs_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln52_fu_299_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln52_reg_651;
reg   [0:0] icmp_ln52_reg_651_pp0_iter1_reg;
wire   [7:0] mul_ln1317_fu_356_p2;
reg   [7:0] mul_ln1317_reg_655;
wire   [6:0] add_ln1319_fu_362_p2;
reg   [6:0] add_ln1319_reg_660;
wire   [2:0] select_ln55_fu_406_p3;
reg   [2:0] select_ln55_reg_666;
wire   [5:0] select_ln55_1_fu_424_p3;
reg   [5:0] select_ln55_1_reg_671;
wire   [2:0] select_ln55_2_fu_432_p3;
reg   [2:0] select_ln55_2_reg_676;
reg   [2:0] select_ln55_2_reg_676_pp0_iter1_reg;
wire   [5:0] add_ln61_fu_444_p2;
reg   [5:0] add_ln61_reg_681;
reg  signed [15:0] r_V_reg_726;
wire   [15:0] tmp_5_fu_535_p9;
reg  signed [15:0] tmp_5_reg_731;
wire   [63:0] zext_ln1319_1_fu_517_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1317_4_fu_531_p1;
reg   [15:0] lhs_fu_96;
wire    ap_loop_init;
reg   [2:0] j_fu_100;
wire   [2:0] add_ln59_fu_450_p2;
reg   [2:0] ap_sig_allocacmp_j_load;
reg   [2:0] i_fu_104;
reg   [2:0] ap_sig_allocacmp_i_2;
reg   [5:0] indvar_flatten_fu_108;
wire   [5:0] select_ln55_3_fu_462_p3;
reg   [5:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [1:0] chan_fu_112;
wire   [1:0] select_ln52_1_fu_340_p3;
reg   [1:0] ap_sig_allocacmp_chan_load;
reg   [7:0] indvar_flatten20_fu_116;
wire   [7:0] add_ln52_7_fu_305_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten20_load;
wire    ap_block_pp0_stage0_01001;
wire   [5:0] zext_ln55_fu_289_p1;
wire   [0:0] icmp_ln55_fu_326_p2;
wire   [1:0] add_ln52_fu_320_p2;
wire   [1:0] mul_ln1317_fu_356_p0;
wire   [6:0] mul_ln1317_fu_356_p1;
wire  signed [6:0] sub_ln1319_cast_fu_249_p1;
wire   [6:0] zext_ln1317_fu_348_p1;
wire   [5:0] empty_fu_293_p2;
wire   [0:0] icmp_ln59_fu_382_p2;
wire   [0:0] xor_ln52_fu_376_p2;
wire   [2:0] select_ln52_fu_332_p3;
wire   [0:0] and_ln52_fu_388_p2;
wire   [0:0] or_ln55_fu_400_p2;
wire   [2:0] add_ln55_fu_394_p2;
wire   [5:0] zext_ln55_1_fu_414_p1;
wire   [5:0] p_mid1_fu_418_p2;
wire   [5:0] select_ln52_2_fu_368_p3;
wire   [5:0] j_cast_fu_440_p1;
wire   [5:0] add_ln55_1_fu_456_p2;
wire   [6:0] shl_ln1319_fu_495_p2;
wire   [6:0] sub_ln1319_1_fu_500_p2;
wire   [6:0] zext_ln1319_fu_508_p1;
wire   [6:0] add_ln1319_1_fu_511_p2;
wire   [12:0] grp_fu_589_p4;
wire  signed [28:0] trunc_ln4_fu_571_p1;
wire   [28:0] grp_fu_599_p3;
wire   [5:0] grp_fu_589_p1;
wire   [5:0] grp_fu_589_p2;
wire   [5:0] grp_fu_589_p3;
wire   [28:0] grp_fu_599_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [7:0] grp_fu_589_p10;
wire   [12:0] grp_fu_589_p30;
wire   [7:0] mul_ln1317_fu_356_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

tiled_conv_mul_2ns_7ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
mul_2ns_7ns_8_1_1_U58(
    .din0(mul_ln1317_fu_356_p0),
    .din1(mul_ln1317_fu_356_p1),
    .dout(mul_ln1317_fu_356_p2)
);

tiled_conv_mux_73_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_73_16_1_1_U59(
    .din0(W_buf_0_q0),
    .din1(W_buf_1_q0),
    .din2(W_buf_2_q0),
    .din3(W_buf_3_q0),
    .din4(W_buf_4_q0),
    .din5(W_buf_5_q0),
    .din6(W_buf_6_q0),
    .din7(select_ln55_2_reg_676_pp0_iter1_reg),
    .dout(tmp_5_fu_535_p9)
);

tiled_conv_ama_addmuladd_8ns_6ns_6ns_6ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .dout_WIDTH( 13 ))
ama_addmuladd_8ns_6ns_6ns_6ns_13_1_1_U60(
    .din0(mul_ln1317_reg_655),
    .din1(grp_fu_589_p1),
    .din2(grp_fu_589_p2),
    .din3(grp_fu_589_p3),
    .dout(grp_fu_589_p4)
);

tiled_conv_mac_muladd_16s_16s_29ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_1_1_U61(
    .din0(tmp_5_reg_731),
    .din1(r_V_reg_726),
    .din2(grp_fu_599_p2),
    .dout(grp_fu_599_p3)
);

tiled_conv_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln52_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            chan_fu_112 <= select_ln52_1_fu_340_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            chan_fu_112 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln52_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_104 <= select_ln55_2_fu_432_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_104 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln52_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten20_fu_116 <= add_ln52_7_fu_305_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten20_fu_116 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln52_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_108 <= select_ln55_3_fu_462_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_108 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln52_fu_299_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_100 <= add_ln59_fu_450_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_100 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            lhs_fu_96 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            lhs_fu_96 <= {{trunc_ln4_fu_571_p1[28:13]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_299_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1319_reg_660 <= add_ln1319_fu_362_p2;
        add_ln61_reg_681 <= add_ln61_fu_444_p2;
        mul_ln1317_reg_655 <= mul_ln1317_fu_356_p2;
        select_ln55_1_reg_671 <= select_ln55_1_fu_424_p3;
        select_ln55_2_reg_676 <= select_ln55_2_fu_432_p3;
        select_ln55_reg_666 <= select_ln55_fu_406_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln52_reg_651 <= icmp_ln52_fu_299_p2;
        icmp_ln52_reg_651_pp0_iter1_reg <= icmp_ln52_reg_651;
        select_ln55_2_reg_676_pp0_iter1_reg <= select_ln55_2_reg_676;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        r_V_reg_726 <= X_buf_q0;
        tmp_5_reg_731 <= tmp_5_fu_535_p9;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_0_ce0 = 1'b1;
    end else begin
        W_buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_1_ce0 = 1'b1;
    end else begin
        W_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_2_ce0 = 1'b1;
    end else begin
        W_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_3_ce0 = 1'b1;
    end else begin
        W_buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_4_ce0 = 1'b1;
    end else begin
        W_buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_5_ce0 = 1'b1;
    end else begin
        W_buf_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_buf_6_ce0 = 1'b1;
    end else begin
        W_buf_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        X_buf_ce0 = 1'b1;
    end else begin
        X_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln52_fu_299_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_chan_load = 2'd0;
    end else begin
        ap_sig_allocacmp_chan_load = chan_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_2 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten20_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten20_load = indvar_flatten20_fu_116;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 6'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_108;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_load = 3'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln52_reg_651_pp0_iter1_reg == 1'd1))) begin
        lhs_out_ap_vld = 1'b1;
    end else begin
        lhs_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W_buf_0_address0 = zext_ln1319_1_fu_517_p1;

assign W_buf_1_address0 = zext_ln1319_1_fu_517_p1;

assign W_buf_2_address0 = zext_ln1319_1_fu_517_p1;

assign W_buf_3_address0 = zext_ln1319_1_fu_517_p1;

assign W_buf_4_address0 = zext_ln1319_1_fu_517_p1;

assign W_buf_5_address0 = zext_ln1319_1_fu_517_p1;

assign W_buf_6_address0 = zext_ln1319_1_fu_517_p1;

assign X_buf_address0 = zext_ln1317_4_fu_531_p1;

assign add_ln1319_1_fu_511_p2 = (sub_ln1319_1_fu_500_p2 + zext_ln1319_fu_508_p1);

assign add_ln1319_fu_362_p2 = ($signed(sub_ln1319_cast_fu_249_p1) + $signed(zext_ln1317_fu_348_p1));

assign add_ln52_7_fu_305_p2 = (ap_sig_allocacmp_indvar_flatten20_load + 8'd1);

assign add_ln52_fu_320_p2 = (ap_sig_allocacmp_chan_load + 2'd1);

assign add_ln55_1_fu_456_p2 = (ap_sig_allocacmp_indvar_flatten_load + 6'd1);

assign add_ln55_fu_394_p2 = (select_ln52_fu_332_p3 + 3'd1);

assign add_ln59_fu_450_p2 = (select_ln55_fu_406_p3 + 3'd1);

assign add_ln61_fu_444_p2 = (j_cast_fu_440_p1 + select_ln44_2);

assign and_ln52_fu_388_p2 = (xor_ln52_fu_376_p2 & icmp_ln59_fu_382_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_fu_293_p2 = (zext_ln55_fu_289_p1 + select_ln41_3);

assign grp_fu_589_p1 = grp_fu_589_p10;

assign grp_fu_589_p10 = select_ln55_1_reg_671;

assign grp_fu_589_p2 = 13'd46;

assign grp_fu_589_p3 = grp_fu_589_p30;

assign grp_fu_589_p30 = add_ln61_reg_681;

assign grp_fu_599_p2 = {{lhs_fu_96}, {13'd0}};

assign icmp_ln52_fu_299_p2 = ((ap_sig_allocacmp_indvar_flatten20_load == 8'd147) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_326_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 6'd49) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_382_p2 = ((ap_sig_allocacmp_j_load == 3'd7) ? 1'b1 : 1'b0);

assign j_cast_fu_440_p1 = select_ln55_fu_406_p3;

assign lhs_out = lhs_fu_96;

assign mul_ln1317_fu_356_p0 = mul_ln1317_fu_356_p00;

assign mul_ln1317_fu_356_p00 = select_ln52_1_fu_340_p3;

assign mul_ln1317_fu_356_p1 = 8'd52;

assign or_ln55_fu_400_p2 = (icmp_ln55_fu_326_p2 | and_ln52_fu_388_p2);

assign p_mid1_fu_418_p2 = (zext_ln55_1_fu_414_p1 + select_ln41_3);

assign select_ln52_1_fu_340_p3 = ((icmp_ln55_fu_326_p2[0:0] == 1'b1) ? add_ln52_fu_320_p2 : ap_sig_allocacmp_chan_load);

assign select_ln52_2_fu_368_p3 = ((icmp_ln55_fu_326_p2[0:0] == 1'b1) ? select_ln41_3 : empty_fu_293_p2);

assign select_ln52_fu_332_p3 = ((icmp_ln55_fu_326_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_i_2);

assign select_ln55_1_fu_424_p3 = ((and_ln52_fu_388_p2[0:0] == 1'b1) ? p_mid1_fu_418_p2 : select_ln52_2_fu_368_p3);

assign select_ln55_2_fu_432_p3 = ((and_ln52_fu_388_p2[0:0] == 1'b1) ? add_ln55_fu_394_p2 : select_ln52_fu_332_p3);

assign select_ln55_3_fu_462_p3 = ((icmp_ln55_fu_326_p2[0:0] == 1'b1) ? 6'd1 : add_ln55_1_fu_456_p2);

assign select_ln55_fu_406_p3 = ((or_ln55_fu_400_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_j_load);

assign shl_ln1319_fu_495_p2 = add_ln1319_reg_660 << 7'd3;

assign sub_ln1319_1_fu_500_p2 = (shl_ln1319_fu_495_p2 - add_ln1319_reg_660);

assign sub_ln1319_cast_fu_249_p1 = $signed(sub_ln1319);

assign trunc_ln4_fu_571_p1 = grp_fu_599_p3;

assign xor_ln52_fu_376_p2 = (icmp_ln55_fu_326_p2 ^ 1'd1);

assign zext_ln1317_4_fu_531_p1 = grp_fu_589_p4;

assign zext_ln1317_fu_348_p1 = select_ln52_1_fu_340_p3;

assign zext_ln1319_1_fu_517_p1 = add_ln1319_1_fu_511_p2;

assign zext_ln1319_fu_508_p1 = select_ln55_reg_666;

assign zext_ln55_1_fu_414_p1 = add_ln55_fu_394_p2;

assign zext_ln55_fu_289_p1 = ap_sig_allocacmp_i_2;

endmodule //tiled_conv_conv_7x7_Pipeline_CHANNEL_KERN_I_KERN_J
