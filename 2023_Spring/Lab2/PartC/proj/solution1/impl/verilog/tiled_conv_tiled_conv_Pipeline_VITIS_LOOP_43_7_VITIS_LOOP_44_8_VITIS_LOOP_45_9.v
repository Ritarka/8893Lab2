// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tiled_conv_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln43,
        select_ln40_4,
        sub_ln1319,
        conv_wt_buf_V_address0,
        conv_wt_buf_V_ce0,
        conv_wt_buf_V_q0,
        select_ln40,
        conv_in_buf_V_address0,
        conv_in_buf_V_ce0,
        conv_in_buf_V_q0,
        lhs_out,
        lhs_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [14:0] zext_ln43;
input  [5:0] select_ln40_4;
input  [5:0] sub_ln1319;
output  [9:0] conv_wt_buf_V_address0;
output   conv_wt_buf_V_ce0;
input  [15:0] conv_wt_buf_V_q0;
input  [5:0] select_ln40;
output  [12:0] conv_in_buf_V_address0;
output   conv_in_buf_V_ce0;
input  [15:0] conv_in_buf_V_q0;
output  [15:0] lhs_out;
output   lhs_out_ap_vld;

reg ap_idle;
reg conv_wt_buf_V_ce0;
reg conv_in_buf_V_ce0;
reg lhs_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln43_fu_209_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire  signed [6:0] sub_ln1319_cast_fu_169_p1;
reg  signed [6:0] sub_ln1319_cast_reg_591;
reg   [2:0] i_1_reg_596;
reg   [0:0] icmp_ln43_reg_601;
reg   [0:0] icmp_ln43_reg_601_pp0_iter1_reg;
reg   [0:0] icmp_ln43_reg_601_pp0_iter2_reg;
reg   [0:0] icmp_ln43_reg_601_pp0_iter3_reg;
reg   [0:0] icmp_ln43_reg_601_pp0_iter4_reg;
reg   [0:0] icmp_ln43_reg_601_pp0_iter5_reg;
reg   [0:0] icmp_ln43_reg_601_pp0_iter6_reg;
wire   [0:0] icmp_ln44_fu_236_p2;
reg   [0:0] icmp_ln44_reg_605;
wire   [1:0] select_ln43_1_fu_250_p3;
reg   [1:0] select_ln43_1_reg_610;
reg   [1:0] select_ln43_1_reg_610_pp0_iter1_reg;
reg   [1:0] select_ln43_1_reg_610_pp0_iter2_reg;
wire   [0:0] and_ln43_fu_270_p2;
reg   [0:0] and_ln43_reg_616;
wire   [2:0] add_ln44_fu_276_p2;
reg   [2:0] add_ln44_reg_621;
wire   [2:0] select_ln44_fu_288_p3;
reg   [2:0] select_ln44_reg_626;
reg   [2:0] select_ln44_reg_626_pp0_iter1_reg;
reg   [2:0] select_ln44_reg_626_pp0_iter2_reg;
reg   [2:0] select_ln44_reg_626_pp0_iter3_reg;
wire   [2:0] select_ln44_1_fu_296_p3;
reg   [2:0] select_ln44_1_reg_632;
reg   [2:0] select_ln44_1_reg_632_pp0_iter1_reg;
reg   [2:0] select_ln44_1_reg_632_pp0_iter2_reg;
wire   [5:0] add_ln46_1_fu_394_p2;
reg   [5:0] add_ln46_1_reg_637;
reg   [5:0] add_ln46_1_reg_637_pp0_iter2_reg;
wire   [9:0] trunc_ln1319_fu_438_p1;
reg   [9:0] trunc_ln1319_reg_642;
wire   [6:0] trunc_ln1319_1_fu_442_p1;
reg   [6:0] trunc_ln1319_1_reg_647;
reg    ap_condition_exit_pp0_iter1_stage0;
wire   [63:0] zext_ln1319_2_fu_470_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln46_4_fu_475_p1;
reg   [15:0] lhs_fu_84;
wire   [15:0] zext_ln43_cast_fu_165_p1;
reg   [15:0] ap_sig_allocacmp_lhs_load_1;
wire    ap_loop_init;
reg   [2:0] j_fu_88;
wire   [2:0] add_ln45_fu_304_p2;
reg   [2:0] ap_sig_allocacmp_j_load;
reg   [2:0] i_fu_92;
reg   [2:0] ap_sig_allocacmp_i_1;
reg   [5:0] indvar_flatten118_fu_96;
wire   [5:0] select_ln44_3_fu_316_p3;
reg   [5:0] ap_sig_allocacmp_indvar_flatten118_load;
reg   [1:0] chan_fu_100;
reg   [1:0] ap_sig_allocacmp_chan_load;
reg   [7:0] indvar_flatten140_fu_104;
wire   [7:0] add_ln43_fu_215_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten140_load;
wire    ap_block_pp0_stage0_01001;
wire   [1:0] add_ln43_1_fu_230_p2;
wire   [0:0] icmp_ln45_fu_264_p2;
wire   [0:0] xor_ln43_fu_258_p2;
wire   [2:0] select_ln43_fu_242_p3;
wire   [0:0] or_ln44_fu_282_p2;
wire   [5:0] add_ln44_1_fu_310_p2;
wire   [5:0] zext_ln44_fu_349_p1;
wire   [1:0] mul_ln46_fu_360_p0;
wire   [6:0] mul_ln46_fu_360_p1;
wire   [5:0] empty_fu_352_p2;
wire   [5:0] zext_ln44_1_fu_372_p1;
wire   [5:0] p_mid1116_fu_375_p2;
wire   [5:0] select_ln43_2_fu_366_p3;
wire   [5:0] select_ln44_2_fu_380_p3;
wire   [5:0] j_3_cast_fu_391_p1;
wire   [6:0] zext_ln46_fu_399_p1;
wire  signed [6:0] add_ln1319_fu_402_p2;
wire   [9:0] tmp_fu_411_p3;
wire   [60:0] zext_ln1319_fu_423_p1;
wire  signed [60:0] sext_ln1319_fu_407_p1;
wire  signed [60:0] sext_ln1319_1_fu_419_p1;
wire   [60:0] newFirst29_fu_426_p2;
wire   [60:0] newSecond30_fu_432_p2;
wire   [9:0] zext_ln1319_1_fu_456_p1;
wire   [9:0] p_shl_fu_449_p3;
wire   [9:0] newFirst_fu_459_p2;
wire   [9:0] newSecond_fu_464_p2;
wire   [12:0] grp_fu_516_p4;
wire  signed [28:0] trunc_ln5_fu_498_p1;
wire   [28:0] grp_fu_527_p3;
wire   [7:0] mul_ln46_fu_360_p2;
wire   [5:0] grp_fu_516_p1;
wire   [5:0] grp_fu_516_p2;
wire   [5:0] grp_fu_516_p3;
wire   [28:0] grp_fu_527_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [7:0] grp_fu_516_p10;
wire   [12:0] grp_fu_516_p30;
wire   [7:0] mul_ln46_fu_360_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_done_reg = 1'b0;
end

tiled_conv_mul_2ns_7ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
mul_2ns_7ns_8_1_1_U29(
    .din0(mul_ln46_fu_360_p0),
    .din1(mul_ln46_fu_360_p1),
    .dout(mul_ln46_fu_360_p2)
);

tiled_conv_ama_addmuladd_8ns_6ns_6ns_6ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .dout_WIDTH( 13 ))
ama_addmuladd_8ns_6ns_6ns_6ns_13_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln46_fu_360_p2),
    .din1(grp_fu_516_p1),
    .din2(grp_fu_516_p2),
    .din3(grp_fu_516_p3),
    .ce(1'b1),
    .dout(grp_fu_516_p4)
);

tiled_conv_mac_muladd_16s_16s_29ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
mac_muladd_16s_16s_29ns_29_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_wt_buf_V_q0),
    .din1(conv_in_buf_V_q0),
    .din2(grp_fu_527_p2),
    .ce(1'b1),
    .dout(grp_fu_527_p3)
);

tiled_conv_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln43_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            chan_fu_100 <= select_ln43_1_fu_250_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            chan_fu_100 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln43_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_92 <= select_ln44_1_fu_296_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_92 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln43_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten118_fu_96 <= select_ln44_3_fu_316_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten118_fu_96 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln43_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten140_fu_104 <= add_ln43_fu_215_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten140_fu_104 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln43_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_88 <= add_ln45_fu_304_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_88 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            lhs_fu_84 <= zext_ln43_cast_fu_165_p1;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            lhs_fu_84 <= {{trunc_ln5_fu_498_p1[28:13]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_209_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln44_reg_621 <= add_ln44_fu_276_p2;
        and_ln43_reg_616 <= and_ln43_fu_270_p2;
        icmp_ln44_reg_605 <= icmp_ln44_fu_236_p2;
        select_ln43_1_reg_610 <= select_ln43_1_fu_250_p3;
        select_ln44_1_reg_632 <= select_ln44_1_fu_296_p3;
        select_ln44_reg_626 <= select_ln44_fu_288_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_reg_601 == 1'd0))) begin
        add_ln46_1_reg_637 <= add_ln46_1_fu_394_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln46_1_reg_637_pp0_iter2_reg <= add_ln46_1_reg_637;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        icmp_ln43_reg_601_pp0_iter2_reg <= icmp_ln43_reg_601_pp0_iter1_reg;
        icmp_ln43_reg_601_pp0_iter3_reg <= icmp_ln43_reg_601_pp0_iter2_reg;
        icmp_ln43_reg_601_pp0_iter4_reg <= icmp_ln43_reg_601_pp0_iter3_reg;
        icmp_ln43_reg_601_pp0_iter5_reg <= icmp_ln43_reg_601_pp0_iter4_reg;
        icmp_ln43_reg_601_pp0_iter6_reg <= icmp_ln43_reg_601_pp0_iter5_reg;
        select_ln43_1_reg_610_pp0_iter2_reg <= select_ln43_1_reg_610_pp0_iter1_reg;
        select_ln44_1_reg_632_pp0_iter2_reg <= select_ln44_1_reg_632_pp0_iter1_reg;
        select_ln44_reg_626_pp0_iter2_reg <= select_ln44_reg_626_pp0_iter1_reg;
        select_ln44_reg_626_pp0_iter3_reg <= select_ln44_reg_626_pp0_iter2_reg;
        trunc_ln1319_1_reg_647 <= trunc_ln1319_1_fu_442_p1;
        trunc_ln1319_reg_642 <= trunc_ln1319_fu_438_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_1_reg_596 <= ap_sig_allocacmp_i_1;
        icmp_ln43_reg_601 <= icmp_ln43_fu_209_p2;
        icmp_ln43_reg_601_pp0_iter1_reg <= icmp_ln43_reg_601;
        select_ln43_1_reg_610_pp0_iter1_reg <= select_ln43_1_reg_610;
        select_ln44_1_reg_632_pp0_iter1_reg <= select_ln44_1_reg_632;
        select_ln44_reg_626_pp0_iter1_reg <= select_ln44_reg_626;
        sub_ln1319_cast_reg_591 <= sub_ln1319_cast_fu_169_p1;
    end
end

always @ (*) begin
    if (((icmp_ln43_fu_209_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln43_reg_601 == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_chan_load = 2'd0;
    end else begin
        ap_sig_allocacmp_chan_load = chan_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten118_load = 6'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten118_load = indvar_flatten118_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten140_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten140_load = indvar_flatten140_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_load = 3'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_sig_allocacmp_lhs_load_1 = {{trunc_ln5_fu_498_p1[28:13]}};
    end else begin
        ap_sig_allocacmp_lhs_load_1 = lhs_fu_84;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        conv_in_buf_V_ce0 = 1'b1;
    end else begin
        conv_in_buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        conv_wt_buf_V_ce0 = 1'b1;
    end else begin
        conv_wt_buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln43_reg_601_pp0_iter6_reg == 1'd1))) begin
        lhs_out_ap_vld = 1'b1;
    end else begin
        lhs_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1319_fu_402_p2 = ($signed(sub_ln1319_cast_reg_591) + $signed(zext_ln46_fu_399_p1));

assign add_ln43_1_fu_230_p2 = (ap_sig_allocacmp_chan_load + 2'd1);

assign add_ln43_fu_215_p2 = (ap_sig_allocacmp_indvar_flatten140_load + 8'd1);

assign add_ln44_1_fu_310_p2 = (ap_sig_allocacmp_indvar_flatten118_load + 6'd1);

assign add_ln44_fu_276_p2 = (select_ln43_fu_242_p3 + 3'd1);

assign add_ln45_fu_304_p2 = (select_ln44_fu_288_p3 + 3'd1);

assign add_ln46_1_fu_394_p2 = (j_3_cast_fu_391_p1 + select_ln40);

assign and_ln43_fu_270_p2 = (xor_ln43_fu_258_p2 & icmp_ln45_fu_264_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv_in_buf_V_address0 = zext_ln46_4_fu_475_p1;

assign conv_wt_buf_V_address0 = zext_ln1319_2_fu_470_p1;

assign empty_fu_352_p2 = (zext_ln44_fu_349_p1 + select_ln40_4);

assign grp_fu_516_p1 = grp_fu_516_p10;

assign grp_fu_516_p10 = select_ln44_2_fu_380_p3;

assign grp_fu_516_p2 = 13'd46;

assign grp_fu_516_p3 = grp_fu_516_p30;

assign grp_fu_516_p30 = add_ln46_1_reg_637_pp0_iter2_reg;

assign grp_fu_527_p2 = {{ap_sig_allocacmp_lhs_load_1}, {13'd0}};

assign icmp_ln43_fu_209_p2 = ((ap_sig_allocacmp_indvar_flatten140_load == 8'd147) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_236_p2 = ((ap_sig_allocacmp_indvar_flatten118_load == 6'd49) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_264_p2 = ((ap_sig_allocacmp_j_load == 3'd7) ? 1'b1 : 1'b0);

assign j_3_cast_fu_391_p1 = select_ln44_reg_626;

assign lhs_out = lhs_fu_84;

assign mul_ln46_fu_360_p0 = mul_ln46_fu_360_p00;

assign mul_ln46_fu_360_p00 = select_ln43_1_reg_610;

assign mul_ln46_fu_360_p1 = 8'd52;

assign newFirst29_fu_426_p2 = ($signed(zext_ln1319_fu_423_p1) - $signed(sext_ln1319_fu_407_p1));

assign newFirst_fu_459_p2 = (zext_ln1319_1_fu_456_p1 - trunc_ln1319_reg_642);

assign newSecond30_fu_432_p2 = ($signed(sext_ln1319_1_fu_419_p1) + $signed(newFirst29_fu_426_p2));

assign newSecond_fu_464_p2 = (p_shl_fu_449_p3 + newFirst_fu_459_p2);

assign or_ln44_fu_282_p2 = (icmp_ln44_fu_236_p2 | and_ln43_fu_270_p2);

assign p_mid1116_fu_375_p2 = (zext_ln44_1_fu_372_p1 + select_ln40_4);

assign p_shl_fu_449_p3 = {{trunc_ln1319_1_reg_647}, {3'd0}};

assign select_ln43_1_fu_250_p3 = ((icmp_ln44_fu_236_p2[0:0] == 1'b1) ? add_ln43_1_fu_230_p2 : ap_sig_allocacmp_chan_load);

assign select_ln43_2_fu_366_p3 = ((icmp_ln44_reg_605[0:0] == 1'b1) ? select_ln40_4 : empty_fu_352_p2);

assign select_ln43_fu_242_p3 = ((icmp_ln44_fu_236_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_i_1);

assign select_ln44_1_fu_296_p3 = ((and_ln43_fu_270_p2[0:0] == 1'b1) ? add_ln44_fu_276_p2 : select_ln43_fu_242_p3);

assign select_ln44_2_fu_380_p3 = ((and_ln43_reg_616[0:0] == 1'b1) ? p_mid1116_fu_375_p2 : select_ln43_2_fu_366_p3);

assign select_ln44_3_fu_316_p3 = ((icmp_ln44_fu_236_p2[0:0] == 1'b1) ? 6'd1 : add_ln44_1_fu_310_p2);

assign select_ln44_fu_288_p3 = ((or_ln44_fu_282_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_j_load);

assign sext_ln1319_1_fu_419_p1 = $signed(tmp_fu_411_p3);

assign sext_ln1319_fu_407_p1 = add_ln1319_fu_402_p2;

assign sub_ln1319_cast_fu_169_p1 = $signed(sub_ln1319);

assign tmp_fu_411_p3 = {{add_ln1319_fu_402_p2}, {3'd0}};

assign trunc_ln1319_1_fu_442_p1 = newSecond30_fu_432_p2[6:0];

assign trunc_ln1319_fu_438_p1 = newSecond30_fu_432_p2[9:0];

assign trunc_ln5_fu_498_p1 = grp_fu_527_p3;

assign xor_ln43_fu_258_p2 = (icmp_ln44_fu_236_p2 ^ 1'd1);

assign zext_ln1319_1_fu_456_p1 = select_ln44_reg_626_pp0_iter3_reg;

assign zext_ln1319_2_fu_470_p1 = newSecond_fu_464_p2;

assign zext_ln1319_fu_423_p1 = select_ln44_1_reg_632_pp0_iter2_reg;

assign zext_ln43_cast_fu_165_p1 = zext_ln43;

assign zext_ln44_1_fu_372_p1 = add_ln44_reg_621;

assign zext_ln44_fu_349_p1 = i_1_reg_596;

assign zext_ln46_4_fu_475_p1 = grp_fu_516_p4;

assign zext_ln46_fu_399_p1 = select_ln43_1_reg_610_pp0_iter2_reg;

endmodule //tiled_conv_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9
