

================================================================
== Vitis HLS Report for 'load_layer_params_from_DRAM_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIG'
================================================================
* Date:           Wed Mar 29 09:30:13 2023

* Version:        2022.1.2 (Build 3605665 on Fri Aug  5 22:52:02 MDT 2022)
* Project:        proj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      591|      591|  5.910 us|  5.910 us|  591|  591|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                           Loop Name                          |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH  |      589|      589|         3|          1|          1|   588|       yes|
        +--------------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.26>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%kw = alloca i32 1"   --->   Operation 6 'alloca' 'kw' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%kh = alloca i32 1"   --->   Operation 7 'alloca' 'kh' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%c = alloca i32 1"   --->   Operation 9 'alloca' 'c' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten11 = alloca i32 1"   --->   Operation 10 'alloca' 'indvar_flatten11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%f = alloca i32 1"   --->   Operation 11 'alloca' 'f' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten33 = alloca i32 1"   --->   Operation 12 'alloca' 'indvar_flatten33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%sext_ln73_read = read i63 @_ssdm_op_Read.ap_auto.i63, i63 %sext_ln73"   --->   Operation 13 'read' 'sext_ln73_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sext_ln73_cast = sext i63 %sext_ln73_read"   --->   Operation 14 'sext' 'sext_ln73_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %wt, void @empty_1, i32 0, i32 0, void @empty_0, i32 0, i32 1, void @empty_7, void @empty_9, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.58ns)   --->   "%store_ln0 = store i10 0, i10 %indvar_flatten33"   --->   Operation 16 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln0 = store i3 0, i3 %f"   --->   Operation 17 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 18 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten11"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 19 [1/1] (1.58ns)   --->   "%store_ln0 = store i2 0, i2 %c"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 20 [1/1] (1.58ns)   --->   "%store_ln0 = store i6 0, i6 %indvar_flatten"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%store_ln0 = store i3 0, i3 %kh"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 22 [1/1] (1.58ns)   --->   "%store_ln0 = store i3 0, i3 %kw"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 23 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%indvar_flatten33_load = load i10 %indvar_flatten33" [utils.cpp:73]   --->   Operation 24 'load' 'indvar_flatten33_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%wt_addr = getelementptr i16 %wt, i64 %sext_ln73_cast" [utils.cpp:73]   --->   Operation 25 'getelementptr' 'wt_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 26 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (1.77ns)   --->   "%icmp_ln73 = icmp_eq  i10 %indvar_flatten33_load, i10 588" [utils.cpp:73]   --->   Operation 27 'icmp' 'icmp_ln73' <Predicate = true> <Delay = 1.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (1.73ns)   --->   "%add_ln73 = add i10 %indvar_flatten33_load, i10 1" [utils.cpp:73]   --->   Operation 28 'add' 'add_ln73' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln73 = br i1 %icmp_ln73, void %for.inc33, void %BIAS.exitStub" [utils.cpp:73]   --->   Operation 29 'br' 'br_ln73' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%indvar_flatten_load_2 = load i6 %indvar_flatten" [utils.cpp:79]   --->   Operation 30 'load' 'indvar_flatten_load_2' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%indvar_flatten11_load_1 = load i8 %indvar_flatten11" [utils.cpp:76]   --->   Operation 31 'load' 'indvar_flatten11_load_1' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (1.55ns)   --->   "%icmp_ln76 = icmp_eq  i8 %indvar_flatten11_load_1, i8 147" [utils.cpp:76]   --->   Operation 32 'icmp' 'icmp_ln76' <Predicate = (!icmp_ln73)> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.97ns)   --->   "%xor_ln73 = xor i1 %icmp_ln76, i1 1" [utils.cpp:73]   --->   Operation 33 'xor' 'xor_ln73' <Predicate = (!icmp_ln73)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (1.42ns)   --->   "%icmp_ln79 = icmp_eq  i6 %indvar_flatten_load_2, i6 49" [utils.cpp:79]   --->   Operation 34 'icmp' 'icmp_ln79' <Predicate = (!icmp_ln73)> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.97ns)   --->   "%and_ln73_1 = and i1 %icmp_ln79, i1 %xor_ln73" [utils.cpp:73]   --->   Operation 35 'and' 'and_ln73_1' <Predicate = (!icmp_ln73)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.97ns)   --->   "%or_ln76 = or i1 %and_ln73_1, i1 %icmp_ln76" [utils.cpp:76]   --->   Operation 36 'or' 'or_ln76' <Predicate = (!icmp_ln73)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i6 %indvar_flatten" [utils.cpp:79]   --->   Operation 37 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%indvar_flatten11_load = load i8 %indvar_flatten11" [utils.cpp:76]   --->   Operation 38 'load' 'indvar_flatten11_load' <Predicate = (!icmp_ln73)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (1.82ns)   --->   "%add_ln79_1 = add i6 %indvar_flatten_load, i6 1" [utils.cpp:79]   --->   Operation 39 'add' 'add_ln79_1' <Predicate = (!icmp_ln73)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.18ns)   --->   "%select_ln79_2 = select i1 %or_ln76, i6 1, i6 %add_ln79_1" [utils.cpp:79]   --->   Operation 40 'select' 'select_ln79_2' <Predicate = (!icmp_ln73)> <Delay = 1.18> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (1.91ns)   --->   "%add_ln76_1 = add i8 %indvar_flatten11_load, i8 1" [utils.cpp:76]   --->   Operation 41 'add' 'add_ln76_1' <Predicate = (!icmp_ln73)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (1.24ns)   --->   "%select_ln76_2 = select i1 %icmp_ln76, i8 1, i8 %add_ln76_1" [utils.cpp:76]   --->   Operation 42 'select' 'select_ln76_2' <Predicate = (!icmp_ln73)> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (1.58ns)   --->   "%store_ln82 = store i10 %add_ln73, i10 %indvar_flatten33" [utils.cpp:82]   --->   Operation 43 'store' 'store_ln82' <Predicate = (!icmp_ln73)> <Delay = 1.58>
ST_1 : Operation 44 [1/1] (1.58ns)   --->   "%store_ln82 = store i8 %select_ln76_2, i8 %indvar_flatten11" [utils.cpp:82]   --->   Operation 44 'store' 'store_ln82' <Predicate = (!icmp_ln73)> <Delay = 1.58>
ST_1 : Operation 45 [1/1] (1.58ns)   --->   "%store_ln82 = store i6 %select_ln79_2, i6 %indvar_flatten" [utils.cpp:82]   --->   Operation 45 'store' 'store_ln82' <Predicate = (!icmp_ln73)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%kw_load = load i3 %kw" [utils.cpp:79]   --->   Operation 46 'load' 'kw_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%kh_load = load i3 %kh" [utils.cpp:76]   --->   Operation 47 'load' 'kh_load' <Predicate = (!or_ln76)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%c_load = load i2 %c" [utils.cpp:73]   --->   Operation 48 'load' 'c_load' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%f_load = load i3 %f" [utils.cpp:73]   --->   Operation 49 'load' 'f_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (1.65ns)   --->   "%add_ln73_1 = add i3 %f_load, i3 1" [utils.cpp:73]   --->   Operation 50 'add' 'add_ln73_1' <Predicate = (icmp_ln76)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.99ns)   --->   "%select_ln73 = select i1 %icmp_ln76, i2 0, i2 %c_load" [utils.cpp:73]   --->   Operation 51 'select' 'select_ln73' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.98ns)   --->   "%select_ln73_1 = select i1 %icmp_ln76, i3 %add_ln73_1, i3 %f_load" [utils.cpp:73]   --->   Operation 52 'select' 'select_ln73_1' <Predicate = true> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln84 = zext i3 %select_ln73_1" [utils.cpp:84]   --->   Operation 53 'zext' 'zext_ln84' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i3.i2, i3 %select_ln73_1, i2 0" [utils.cpp:84]   --->   Operation 54 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln84_1 = zext i5 %tmp" [utils.cpp:84]   --->   Operation 55 'zext' 'zext_ln84_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (1.78ns)   --->   "%sub_ln84 = sub i6 %zext_ln84_1, i6 %zext_ln84" [utils.cpp:84]   --->   Operation 56 'sub' 'sub_ln84' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%sext_ln76 = sext i6 %sub_ln84" [utils.cpp:76]   --->   Operation 57 'sext' 'sext_ln76' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (1.13ns)   --->   "%icmp_ln82 = icmp_eq  i3 %kw_load, i3 7" [utils.cpp:82]   --->   Operation 58 'icmp' 'icmp_ln82' <Predicate = true> <Delay = 1.13> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node and_ln76)   --->   "%and_ln73 = and i1 %icmp_ln82, i1 %xor_ln73" [utils.cpp:73]   --->   Operation 59 'and' 'and_ln73' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (1.56ns)   --->   "%add_ln76 = add i2 %select_ln73, i2 1" [utils.cpp:76]   --->   Operation 60 'add' 'add_ln76' <Predicate = (and_ln73_1)> <Delay = 1.56> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.98ns)   --->   "%select_ln76 = select i1 %or_ln76, i3 0, i3 %kh_load" [utils.cpp:76]   --->   Operation 61 'select' 'select_ln76' <Predicate = true> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.99ns)   --->   "%select_ln76_1 = select i1 %and_ln73_1, i2 %add_ln76, i2 %select_ln73" [utils.cpp:76]   --->   Operation 62 'select' 'select_ln76_1' <Predicate = true> <Delay = 0.99> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln84_2 = zext i2 %select_ln76_1" [utils.cpp:84]   --->   Operation 63 'zext' 'zext_ln84_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (1.82ns)   --->   "%add_ln84 = add i7 %sext_ln76, i7 %zext_ln84_2" [utils.cpp:84]   --->   Operation 64 'add' 'add_ln84' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node and_ln76)   --->   "%xor_ln76 = xor i1 %icmp_ln79, i1 1" [utils.cpp:76]   --->   Operation 65 'xor' 'xor_ln76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node and_ln76)   --->   "%or_ln76_1 = or i1 %icmp_ln76, i1 %xor_ln76" [utils.cpp:76]   --->   Operation 66 'or' 'or_ln76_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln76 = and i1 %and_ln73, i1 %or_ln76_1" [utils.cpp:76]   --->   Operation 67 'and' 'and_ln76' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (1.65ns)   --->   "%add_ln79 = add i3 %select_ln76, i3 1" [utils.cpp:79]   --->   Operation 68 'add' 'add_ln79' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node select_ln79)   --->   "%or_ln79 = or i1 %and_ln76, i1 %and_ln73_1" [utils.cpp:79]   --->   Operation 69 'or' 'or_ln79' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node select_ln79)   --->   "%or_ln79_1 = or i1 %or_ln79, i1 %icmp_ln76" [utils.cpp:79]   --->   Operation 70 'or' 'or_ln79_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.98ns) (out node of the LUT)   --->   "%select_ln79 = select i1 %or_ln79_1, i3 0, i3 %kw_load" [utils.cpp:79]   --->   Operation 71 'select' 'select_ln79' <Predicate = true> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.98ns)   --->   "%select_ln79_1 = select i1 %and_ln76, i3 %add_ln79, i3 %select_ln76" [utils.cpp:79]   --->   Operation 72 'select' 'select_ln79_1' <Predicate = true> <Delay = 0.98> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (7.30ns)   --->   "%wt_addr_read = read i16 @_ssdm_op_Read.m_axi.p1i16, i16 %wt_addr" [utils.cpp:84]   --->   Operation 73 'read' 'wt_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 74 [1/1] (0.95ns)   --->   "%switch_ln84 = switch i3 %select_ln79_1, void %arrayidx266.0.0.041.case.6, i3 0, void %arrayidx266.0.0.041.case.0, i3 1, void %arrayidx266.0.0.041.case.1, i3 2, void %arrayidx266.0.0.041.case.2, i3 3, void %arrayidx266.0.0.041.case.3, i3 4, void %arrayidx266.0.0.041.case.4, i3 5, void %arrayidx266.0.0.041.case.5" [utils.cpp:84]   --->   Operation 74 'switch' 'switch_ln84' <Predicate = true> <Delay = 0.95>
ST_2 : Operation 75 [1/1] (1.65ns)   --->   "%add_ln82 = add i3 %select_ln79, i3 1" [utils.cpp:82]   --->   Operation 75 'add' 'add_ln82' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (1.58ns)   --->   "%store_ln82 = store i3 %select_ln73_1, i3 %f" [utils.cpp:82]   --->   Operation 76 'store' 'store_ln82' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 77 [1/1] (1.58ns)   --->   "%store_ln82 = store i2 %select_ln76_1, i2 %c" [utils.cpp:82]   --->   Operation 77 'store' 'store_ln82' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 78 [1/1] (1.58ns)   --->   "%store_ln82 = store i3 %select_ln79_1, i3 %kh" [utils.cpp:82]   --->   Operation 78 'store' 'store_ln82' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 79 [1/1] (1.58ns)   --->   "%store_ln82 = store i3 %add_ln82, i3 %kw" [utils.cpp:82]   --->   Operation 79 'store' 'store_ln82' <Predicate = true> <Delay = 1.58>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln82 = br void %for.inc" [utils.cpp:82]   --->   Operation 80 'br' 'br_ln82' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 115 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 115 'ret' 'ret_ln0' <Predicate = (icmp_ln73)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.83>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_str"   --->   Operation 81 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 588, i64 588, i64 588"   --->   Operation 82 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 83 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @WEIGHT_KERNEL_DEPTH_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_str"   --->   Operation 84 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%shl_ln84 = shl i7 %add_ln84, i7 3" [utils.cpp:84]   --->   Operation 85 'shl' 'shl_ln84' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln84_1 = sub i7 %shl_ln84, i7 %add_ln84" [utils.cpp:84]   --->   Operation 86 'sub' 'sub_ln84_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 87 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_str"   --->   Operation 88 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 89 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln84_3 = zext i3 %select_ln79" [utils.cpp:84]   --->   Operation 90 'zext' 'zext_ln84_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (3.58ns) (root node of TernaryAdder)   --->   "%add_ln84_1 = add i7 %sub_ln84_1, i7 %zext_ln84_3" [utils.cpp:84]   --->   Operation 91 'add' 'add_ln84_1' <Predicate = true> <Delay = 3.58> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln84_4 = zext i7 %add_ln84_1" [utils.cpp:84]   --->   Operation 92 'zext' 'zext_ln84_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%weight_buf_0_addr = getelementptr i16 %weight_buf_0, i64 0, i64 %zext_ln84_4" [utils.cpp:84]   --->   Operation 93 'getelementptr' 'weight_buf_0_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%weight_buf_1_addr = getelementptr i16 %weight_buf_1, i64 0, i64 %zext_ln84_4" [utils.cpp:84]   --->   Operation 94 'getelementptr' 'weight_buf_1_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%weight_buf_2_addr = getelementptr i16 %weight_buf_2, i64 0, i64 %zext_ln84_4" [utils.cpp:84]   --->   Operation 95 'getelementptr' 'weight_buf_2_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%weight_buf_3_addr = getelementptr i16 %weight_buf_3, i64 0, i64 %zext_ln84_4" [utils.cpp:84]   --->   Operation 96 'getelementptr' 'weight_buf_3_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%weight_buf_4_addr = getelementptr i16 %weight_buf_4, i64 0, i64 %zext_ln84_4" [utils.cpp:84]   --->   Operation 97 'getelementptr' 'weight_buf_4_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%weight_buf_5_addr = getelementptr i16 %weight_buf_5, i64 0, i64 %zext_ln84_4" [utils.cpp:84]   --->   Operation 98 'getelementptr' 'weight_buf_5_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%weight_buf_6_addr = getelementptr i16 %weight_buf_6, i64 0, i64 %zext_ln84_4" [utils.cpp:84]   --->   Operation 99 'getelementptr' 'weight_buf_6_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%specloopname_ln82 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [utils.cpp:82]   --->   Operation 100 'specloopname' 'specloopname_ln82' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (3.25ns)   --->   "%store_ln84 = store i16 %wt_addr_read, i7 %weight_buf_5_addr" [utils.cpp:84]   --->   Operation 101 'store' 'store_ln84' <Predicate = (select_ln79_1 == 5)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 84> <RAM>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%br_ln84 = br void %arrayidx266.0.0.041.exit" [utils.cpp:84]   --->   Operation 102 'br' 'br_ln84' <Predicate = (select_ln79_1 == 5)> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (3.25ns)   --->   "%store_ln84 = store i16 %wt_addr_read, i7 %weight_buf_4_addr" [utils.cpp:84]   --->   Operation 103 'store' 'store_ln84' <Predicate = (select_ln79_1 == 4)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 84> <RAM>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%br_ln84 = br void %arrayidx266.0.0.041.exit" [utils.cpp:84]   --->   Operation 104 'br' 'br_ln84' <Predicate = (select_ln79_1 == 4)> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (3.25ns)   --->   "%store_ln84 = store i16 %wt_addr_read, i7 %weight_buf_3_addr" [utils.cpp:84]   --->   Operation 105 'store' 'store_ln84' <Predicate = (select_ln79_1 == 3)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 84> <RAM>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%br_ln84 = br void %arrayidx266.0.0.041.exit" [utils.cpp:84]   --->   Operation 106 'br' 'br_ln84' <Predicate = (select_ln79_1 == 3)> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (3.25ns)   --->   "%store_ln84 = store i16 %wt_addr_read, i7 %weight_buf_2_addr" [utils.cpp:84]   --->   Operation 107 'store' 'store_ln84' <Predicate = (select_ln79_1 == 2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 84> <RAM>
ST_3 : Operation 108 [1/1] (0.00ns)   --->   "%br_ln84 = br void %arrayidx266.0.0.041.exit" [utils.cpp:84]   --->   Operation 108 'br' 'br_ln84' <Predicate = (select_ln79_1 == 2)> <Delay = 0.00>
ST_3 : Operation 109 [1/1] (3.25ns)   --->   "%store_ln84 = store i16 %wt_addr_read, i7 %weight_buf_1_addr" [utils.cpp:84]   --->   Operation 109 'store' 'store_ln84' <Predicate = (select_ln79_1 == 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 84> <RAM>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%br_ln84 = br void %arrayidx266.0.0.041.exit" [utils.cpp:84]   --->   Operation 110 'br' 'br_ln84' <Predicate = (select_ln79_1 == 1)> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (3.25ns)   --->   "%store_ln84 = store i16 %wt_addr_read, i7 %weight_buf_0_addr" [utils.cpp:84]   --->   Operation 111 'store' 'store_ln84' <Predicate = (select_ln79_1 == 0)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 84> <RAM>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "%br_ln84 = br void %arrayidx266.0.0.041.exit" [utils.cpp:84]   --->   Operation 112 'br' 'br_ln84' <Predicate = (select_ln79_1 == 0)> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (3.25ns)   --->   "%store_ln84 = store i16 %wt_addr_read, i7 %weight_buf_6_addr" [utils.cpp:84]   --->   Operation 113 'store' 'store_ln84' <Predicate = (select_ln79_1 == 7) | (select_ln79_1 == 6)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 84> <RAM>
ST_3 : Operation 114 [1/1] (0.00ns)   --->   "%br_ln84 = br void %arrayidx266.0.0.041.exit" [utils.cpp:84]   --->   Operation 114 'br' 'br_ln84' <Predicate = (select_ln79_1 == 7) | (select_ln79_1 == 6)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 7.26ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten11') [14]  (0 ns)
	'load' operation ('indvar_flatten11_load_1', utils.cpp:76) on local variable 'indvar_flatten11' [40]  (0 ns)
	'icmp' operation ('icmp_ln76', utils.cpp:76) [45]  (1.55 ns)
	'xor' operation ('xor_ln73', utils.cpp:73) [54]  (0.978 ns)
	'and' operation ('and_ln73_1', utils.cpp:73) [58]  (0.978 ns)
	'or' operation ('or_ln76', utils.cpp:76) [61]  (0.978 ns)
	'select' operation ('select_ln79_2', utils.cpp:79) [118]  (1.19 ns)
	'store' operation ('store_ln82', utils.cpp:82) of variable 'select_ln79_2', utils.cpp:79 on local variable 'indvar_flatten' [125]  (1.59 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	bus read operation ('wt_addr_read', utils.cpp:84) on port 'wt' (utils.cpp:84) [90]  (7.3 ns)

 <State 3>: 6.83ns
The critical path consists of the following:
	'shl' operation ('shl_ln84', utils.cpp:84) [66]  (0 ns)
	'sub' operation ('sub_ln84_1', utils.cpp:84) [67]  (0 ns)
	'add' operation ('add_ln84_1', utils.cpp:84) [80]  (3.58 ns)
	'getelementptr' operation ('weight_buf_5_addr', utils.cpp:84) [87]  (0 ns)
	'store' operation ('store_ln84', utils.cpp:84) of variable 'wt_addr_read', utils.cpp:84 on array 'weight_buf_5' [93]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
