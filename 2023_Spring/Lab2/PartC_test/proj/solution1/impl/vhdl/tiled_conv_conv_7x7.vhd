-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
-- Version: 2020.2.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tiled_conv_conv_7x7 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Y_buf_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    Y_buf_ce0 : OUT STD_LOGIC;
    Y_buf_we0 : OUT STD_LOGIC;
    Y_buf_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    Y_buf1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    Y_buf1_ce0 : OUT STD_LOGIC;
    Y_buf1_we0 : OUT STD_LOGIC;
    Y_buf1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    Y_buf2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    Y_buf2_ce0 : OUT STD_LOGIC;
    Y_buf2_we0 : OUT STD_LOGIC;
    Y_buf2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    Y_buf3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    Y_buf3_ce0 : OUT STD_LOGIC;
    Y_buf3_we0 : OUT STD_LOGIC;
    Y_buf3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    X_buf_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_buf_ce0 : OUT STD_LOGIC;
    X_buf_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_buf_ce1 : OUT STD_LOGIC;
    X_buf_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_buf4_ce0 : OUT STD_LOGIC;
    X_buf4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_buf4_ce1 : OUT STD_LOGIC;
    X_buf4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_buf5_ce0 : OUT STD_LOGIC;
    X_buf5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    X_buf5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    X_buf5_ce1 : OUT STD_LOGIC;
    X_buf5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf_ce0 : OUT STD_LOGIC;
    W_buf_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf_ce1 : OUT STD_LOGIC;
    W_buf_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf6_ce0 : OUT STD_LOGIC;
    W_buf6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf6_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf6_ce1 : OUT STD_LOGIC;
    W_buf6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf7_ce0 : OUT STD_LOGIC;
    W_buf7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf7_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf7_ce1 : OUT STD_LOGIC;
    W_buf7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf8_ce0 : OUT STD_LOGIC;
    W_buf8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf8_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf8_ce1 : OUT STD_LOGIC;
    W_buf8_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf9_ce0 : OUT STD_LOGIC;
    W_buf9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf9_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf9_ce1 : OUT STD_LOGIC;
    W_buf9_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf10_ce0 : OUT STD_LOGIC;
    W_buf10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf10_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf10_ce1 : OUT STD_LOGIC;
    W_buf10_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf11_ce0 : OUT STD_LOGIC;
    W_buf11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    W_buf11_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    W_buf11_ce1 : OUT STD_LOGIC;
    W_buf11_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of tiled_conv_conv_7x7 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv11_730 : STD_LOGIC_VECTOR (10 downto 0) := "11100110000";
    constant ap_const_lv8_50 : STD_LOGIC_VECTOR (7 downto 0) := "01010000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv12_2E : STD_LOGIC_VECTOR (11 downto 0) := "000000101110";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_960 : STD_LOGIC_VECTOR (4 downto 0);
    signal chan_reg_971 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_983 : STD_LOGIC_VECTOR (2 downto 0);
    signal accu_V_reg_994 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1006_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_1066 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state6_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal icmp_ln46_reg_2159 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_1025_p9 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_1070 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1044_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_1074 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state7_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state5_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln46_reg_2159_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1055_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_1078 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_1082 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln32_2_fu_1086_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln32_2_reg_2006 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_fu_1092_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_reg_2011 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvars_iv_next31_fu_1098_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvars_iv_next31_reg_2016 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_56_fu_1104_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_56_reg_2021 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_57_fu_1110_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_57_reg_2026 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_58_fu_1116_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_58_reg_2031 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_59_fu_1122_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_59_reg_2036 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln35_fu_1134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln35_reg_2044 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_fu_1128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln32_fu_1140_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln32_reg_2060 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln32_2_fu_1167_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln32_2_reg_2066 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal select_ln32_9_fu_1253_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln32_9_reg_2071 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_fu_1276_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln35_reg_2077 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln35_1_fu_1284_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_1_reg_2083 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln35_fu_1292_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln35_reg_2088 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln35_2_fu_1296_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln35_2_reg_2093 : STD_LOGIC_VECTOR (4 downto 0);
    signal Y_buf_addr_reg_2098 : STD_LOGIC_VECTOR (8 downto 0);
    signal Y_buf1_addr_reg_2103 : STD_LOGIC_VECTOR (8 downto 0);
    signal Y_buf2_addr_reg_2108 : STD_LOGIC_VECTOR (8 downto 0);
    signal Y_buf3_addr_reg_2113 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln35_3_cast_fu_1335_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln35_3_cast_reg_2118 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln35_4_cast_fu_1353_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln35_4_cast_reg_2123 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln35_5_cast_fu_1371_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln35_5_cast_reg_2128 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln35_6_cast_fu_1389_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln35_6_cast_reg_2133 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln35_7_cast_fu_1407_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln35_7_cast_reg_2138 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln35_1_fu_1425_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln35_1_reg_2143 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln38_fu_1451_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln38_reg_2148 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_2_fu_1455_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln46_2_reg_2154 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln46_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_2159_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln46_fu_1488_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln46_reg_2163 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln49_fu_1494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_2168 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln46_fu_1500_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln46_reg_2173 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln46_reg_2173_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln46_1_fu_1529_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln46_1_reg_2181 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1116_fu_1575_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1116_reg_2262 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln46_2_fu_1667_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln46_2_reg_2443 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_reg_2480 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln49_fu_1697_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln49_reg_2485 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln1116_6_fu_1740_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1116_6_reg_2535 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1115_fu_1944_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1115_reg_2560 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1115_1_fu_1950_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1115_1_reg_2565 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln4_reg_2585 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_1_reg_2590 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1115_2_fu_1956_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1115_2_reg_2595 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1115_3_fu_1962_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1115_3_reg_2600 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln708_3_reg_2605 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1115_4_fu_1968_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1115_4_reg_2610 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1115_5_fu_1974_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1115_5_reg_2615 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln703_2_fu_1838_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_2_reg_2620 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_4_reg_2625 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_5_reg_2630 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1115_6_fu_1980_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal mul_ln1115_6_reg_2635 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln703_5_fu_1887_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_5_reg_2640 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_7_fu_1897_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal add_ln38_fu_1926_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal select_ln35_9_fu_1937_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal indvar_flatten112_reg_878 : STD_LOGIC_VECTOR (10 downto 0);
    signal oh_reg_889 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_reg_901 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten71_reg_913 : STD_LOGIC_VECTOR (7 downto 0);
    signal ow_reg_925 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_reg_936 : STD_LOGIC_VECTOR (5 downto 0);
    signal kernel_reg_948 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_964_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_chan_phi_fu_975_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_i_phi_fu_987_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln78_2_fu_1313_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1118_4_fu_1537_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln1118_5_fu_1552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1118_6_fu_1586_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln1118_7_fu_1602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_1_fu_1617_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_2_fu_1628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1118_8_fu_1640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln1118_9_fu_1656_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_3_fu_1679_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_4_fu_1690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1118_10_fu_1707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_5_fu_1722_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_6_fu_1733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_7_fu_1760_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln703_fu_1903_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln703_fu_1916_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1025_p8 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1044_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1055_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln32_1_fu_1154_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_1182_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_1174_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln78_fu_1190_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln38_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln32_fu_1236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln32_fu_1148_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln32_1_fu_1160_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln32_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln35_fu_1271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next31_dup_fu_1265_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln35_fu_1260_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln78_fu_1194_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln78_1_fu_1303_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln78_1_fu_1307_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid1_fu_1321_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln32_3_fu_1200_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_3_fu_1327_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvars_iv_next31_mid1_fu_1339_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln32_4_fu_1206_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_4_fu_1345_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid163_fu_1357_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln32_5_fu_1212_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_5_fu_1363_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid165_fu_1375_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln32_6_fu_1218_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_6_fu_1381_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid167_fu_1393_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln32_7_fu_1224_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_7_fu_1399_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid169_fu_1411_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln32_8_fu_1230_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln35_8_fu_1417_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_fu_1433_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1118_1_fu_1441_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1118_fu_1429_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln1118_fu_1445_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1118_2_fu_1461_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1118_fu_1465_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1118_fu_1470_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1118_3_fu_1508_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1118_1_fu_1512_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln1118_1_fu_1517_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln1118_2_fu_1523_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln1118_1_fu_1476_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_3_fu_1547_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_cast_fu_1563_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_61_fu_1566_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1116_fu_1575_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln1116_fu_1575_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_4_fu_1581_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_5_fu_1597_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1116_fu_1613_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1116_1_fu_1624_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln46_6_fu_1635_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_7_fu_1651_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1116_2_fu_1675_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1116_3_fu_1686_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln46_8_fu_1702_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1116_4_fu_1718_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1116_5_fu_1729_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_2_fu_1799_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1_fu_1833_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_6_fu_1869_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_4_fu_1882_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_3_fu_1878_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_6_fu_1893_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_1906_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_1906_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln35_1_fu_1931_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln1116_fu_1575_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component tiled_conv_mux_73_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        din5 : IN STD_LOGIC_VECTOR (15 downto 0);
        din6 : IN STD_LOGIC_VECTOR (15 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_mux_32_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_mul_6ns_7ns_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component tiled_conv_mux_42_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_mul_mul_16s_16s_29_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;



begin
    mux_73_16_1_1_U18 : component tiled_conv_mux_73_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => W_buf_q1,
        din1 => W_buf6_q1,
        din2 => W_buf7_q1,
        din3 => W_buf8_q1,
        din4 => W_buf9_q1,
        din5 => W_buf10_q1,
        din6 => W_buf11_q1,
        din7 => select_ln46_reg_2173,
        dout => grp_fu_1006_p9);

    mux_73_16_1_1_U19 : component tiled_conv_mux_73_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        din0 => W_buf_q0,
        din1 => W_buf6_q0,
        din2 => W_buf7_q0,
        din3 => W_buf8_q0,
        din4 => W_buf9_q0,
        din5 => W_buf10_q0,
        din6 => W_buf11_q0,
        din7 => grp_fu_1025_p8,
        dout => grp_fu_1025_p9);

    mux_32_16_1_1_U20 : component tiled_conv_mux_32_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => X_buf_q0,
        din1 => X_buf4_q0,
        din2 => X_buf5_q0,
        din3 => grp_fu_1044_p4,
        dout => grp_fu_1044_p5);

    mux_32_16_1_1_U21 : component tiled_conv_mux_32_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => X_buf_q1,
        din1 => X_buf4_q1,
        din2 => X_buf5_q1,
        din3 => grp_fu_1055_p4,
        dout => grp_fu_1055_p5);

    mul_6ns_7ns_12_1_1_U22 : component tiled_conv_mul_6ns_7ns_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 7,
        dout_WIDTH => 12)
    port map (
        din0 => mul_ln1116_fu_1575_p0,
        din1 => mul_ln1116_fu_1575_p1,
        dout => mul_ln1116_fu_1575_p2);

    mux_42_16_1_1_U23 : component tiled_conv_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => p_read,
        din1 => p_read1,
        din2 => p_read2,
        din3 => p_read3,
        din4 => tmp_2_fu_1906_p5,
        dout => tmp_2_fu_1906_p6);

    mul_mul_16s_16s_29_1_1_U24 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_1066,
        din1 => reg_1074,
        dout => mul_ln1115_fu_1944_p2);

    mul_mul_16s_16s_29_1_1_U25 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_1070,
        din1 => reg_1078,
        dout => mul_ln1115_1_fu_1950_p2);

    mul_mul_16s_16s_29_1_1_U26 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_1082,
        din1 => reg_1074,
        dout => mul_ln1115_2_fu_1956_p2);

    mul_mul_16s_16s_29_1_1_U27 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => tmp_s_reg_2480,
        din1 => reg_1078,
        dout => mul_ln1115_3_fu_1962_p2);

    mul_mul_16s_16s_29_1_1_U28 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_1070,
        din1 => reg_1078,
        dout => mul_ln1115_4_fu_1968_p2);

    mul_mul_16s_16s_29_1_1_U29 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_1066,
        din1 => reg_1074,
        dout => mul_ln1115_5_fu_1974_p2);

    mul_mul_16s_16s_29_1_1_U30 : component tiled_conv_mul_mul_16s_16s_29_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => reg_1082,
        din1 => reg_1074,
        dout => mul_ln1115_6_fu_1980_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    accu_V_reg_994_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln46_reg_2159_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                accu_V_reg_994 <= add_ln703_7_fu_1897_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                accu_V_reg_994 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    chan_reg_971_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                chan_reg_971 <= select_ln46_2_reg_2443;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                chan_reg_971 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    h_reg_901_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                h_reg_901 <= select_ln32_9_reg_2071;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                h_reg_901 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    i_reg_983_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_983 <= add_ln49_reg_2485;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_reg_983 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten112_reg_878_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                indvar_flatten112_reg_878 <= add_ln32_2_reg_2006;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten112_reg_878 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten71_reg_913_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                indvar_flatten71_reg_913 <= select_ln35_9_fu_1937_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten71_reg_913 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_960_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_960 <= add_ln46_2_reg_2154;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                indvar_flatten_reg_960 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    kernel_reg_948_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                kernel_reg_948 <= add_ln38_fu_1926_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                kernel_reg_948 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    oh_reg_889_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                oh_reg_889 <= select_ln32_2_reg_2066;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                oh_reg_889 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    ow_reg_925_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                ow_reg_925 <= select_ln35_2_reg_2093;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                ow_reg_925 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    w_reg_936_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                w_reg_936 <= select_ln35_1_reg_2083;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                w_reg_936 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                Y_buf1_addr_reg_2103 <= zext_ln78_2_fu_1313_p1(9 - 1 downto 0);
                Y_buf2_addr_reg_2108 <= zext_ln78_2_fu_1313_p1(9 - 1 downto 0);
                Y_buf3_addr_reg_2113 <= zext_ln78_2_fu_1313_p1(9 - 1 downto 0);
                Y_buf_addr_reg_2098 <= zext_ln78_2_fu_1313_p1(9 - 1 downto 0);
                select_ln32_2_reg_2066 <= select_ln32_2_fu_1167_p3;
                select_ln32_9_reg_2071 <= select_ln32_9_fu_1253_p3;
                select_ln35_1_reg_2083 <= select_ln35_1_fu_1284_p3;
                select_ln35_2_reg_2093 <= select_ln35_2_fu_1296_p3;
                    select_ln35_3_cast_reg_2118(5 downto 1) <= select_ln35_3_cast_fu_1335_p1(5 downto 1);
                    select_ln35_4_cast_reg_2123(5 downto 0) <= select_ln35_4_cast_fu_1353_p1(5 downto 0);
                    select_ln35_5_cast_reg_2128(5 downto 0) <= select_ln35_5_cast_fu_1371_p1(5 downto 0);
                    select_ln35_6_cast_reg_2133(5 downto 0) <= select_ln35_6_cast_fu_1389_p1(5 downto 0);
                    select_ln35_7_cast_reg_2138(5 downto 0) <= select_ln35_7_cast_fu_1407_p1(5 downto 0);
                select_ln35_reg_2077 <= select_ln35_fu_1276_p3;
                sext_ln38_reg_2148 <= sext_ln38_fu_1451_p1;
                    zext_ln35_1_reg_2143(5 downto 0) <= zext_ln35_1_fu_1425_p1(5 downto 0);
                    zext_ln35_reg_2088(5 downto 0) <= zext_ln35_fu_1292_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln1116_6_reg_2535 <= add_ln1116_6_fu_1740_p2;
                mul_ln1115_1_reg_2565 <= mul_ln1115_1_fu_1950_p2;
                mul_ln1115_reg_2560 <= mul_ln1115_fu_1944_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln32_2_reg_2006 <= add_ln32_2_fu_1086_p2;
                empty_56_reg_2021 <= empty_56_fu_1104_p2;
                empty_57_reg_2026 <= empty_57_fu_1110_p2;
                empty_58_reg_2031 <= empty_58_fu_1116_p2;
                empty_59_reg_2036 <= empty_59_fu_1122_p2;
                    empty_reg_2011(5 downto 1) <= empty_fu_1092_p2(5 downto 1);
                indvars_iv_next31_reg_2016 <= indvars_iv_next31_fu_1098_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln46_2_reg_2154 <= add_ln46_2_fu_1455_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_fu_1482_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln46_reg_2163 <= add_ln46_fu_1488_p2;
                icmp_ln49_reg_2168 <= icmp_ln49_fu_1494_p2;
                select_ln46_1_reg_2181 <= select_ln46_1_fu_1529_p3;
                select_ln46_reg_2173 <= select_ln46_fu_1500_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln49_reg_2485 <= add_ln49_fu_1697_p2;
                select_ln46_2_reg_2443 <= select_ln46_2_fu_1667_p3;
                tmp_s_reg_2480 <= grp_fu_1006_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_reg_2159_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln703_2_reg_2620 <= add_ln703_2_fu_1838_p2;
                mul_ln1115_4_reg_2610 <= mul_ln1115_4_fu_1968_p2;
                mul_ln1115_5_reg_2615 <= mul_ln1115_5_fu_1974_p2;
                trunc_ln708_3_reg_2605 <= mul_ln1115_3_reg_2600(28 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_reg_2159_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_5_reg_2640 <= add_ln703_5_fu_1887_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_1128_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln35_reg_2044 <= icmp_ln35_fu_1134_p2;
                select_ln32_reg_2060 <= select_ln32_fu_1140_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln46_reg_2159 <= icmp_ln46_fu_1482_p2;
                icmp_ln46_reg_2159_pp0_iter1_reg <= icmp_ln46_reg_2159;
                icmp_ln46_reg_2159_pp0_iter2_reg <= icmp_ln46_reg_2159_pp0_iter1_reg;
                select_ln46_reg_2173_pp0_iter1_reg <= select_ln46_reg_2173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_reg_2159_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul_ln1115_2_reg_2595 <= mul_ln1115_2_fu_1956_p2;
                mul_ln1115_3_reg_2600 <= mul_ln1115_3_fu_1962_p2;
                trunc_ln4_reg_2585 <= mul_ln1115_reg_2560(28 downto 13);
                trunc_ln708_1_reg_2590 <= mul_ln1115_1_reg_2565(28 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_reg_2159_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul_ln1115_6_reg_2635 <= mul_ln1115_6_fu_1980_p2;
                trunc_ln708_4_reg_2625 <= mul_ln1115_4_reg_2610(28 downto 13);
                trunc_ln708_5_reg_2630 <= mul_ln1115_5_reg_2615(28 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul_ln1116_reg_2262 <= mul_ln1116_fu_1575_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_1066 <= grp_fu_1006_p9;
                reg_1070 <= grp_fu_1025_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln46_reg_2159_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((icmp_ln46_reg_2159_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_1074 <= grp_fu_1044_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln46_reg_2159_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_1078 <= grp_fu_1055_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln46_reg_2159_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_1082 <= grp_fu_1025_p9;
            end if;
        end if;
    end process;
    empty_reg_2011(0) <= '1';
    zext_ln35_reg_2088(11 downto 6) <= "000000";
    select_ln35_3_cast_reg_2118(0) <= '1';
    select_ln35_3_cast_reg_2118(11 downto 6) <= "000000";
    select_ln35_4_cast_reg_2123(11 downto 6) <= "000000";
    select_ln35_5_cast_reg_2128(11 downto 6) <= "000000";
    select_ln35_6_cast_reg_2133(11 downto 6) <= "000000";
    select_ln35_7_cast_reg_2138(11 downto 6) <= "000000";
    zext_ln35_1_reg_2143(11 downto 6) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_state2, icmp_ln32_fu_1128_p2, icmp_ln46_fu_1482_p2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln32_fu_1128_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln46_fu_1482_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln46_fu_1482_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    W_buf10_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln1118_5_fu_1552_p1, zext_ln1118_6_fu_1586_p1, ap_block_pp0_stage2, zext_ln1118_8_fu_1640_p1, ap_block_pp0_stage3, zext_ln1118_10_fu_1707_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            W_buf10_address0 <= zext_ln1118_10_fu_1707_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf10_address0 <= zext_ln1118_8_fu_1640_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf10_address0 <= zext_ln1118_6_fu_1586_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf10_address0 <= zext_ln1118_5_fu_1552_p1(7 - 1 downto 0);
        else 
            W_buf10_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_buf10_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, zext_ln1118_4_fu_1537_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln1118_7_fu_1602_p1, ap_block_pp0_stage3, zext_ln1118_9_fu_1656_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                W_buf10_address1 <= zext_ln1118_9_fu_1656_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                W_buf10_address1 <= zext_ln1118_7_fu_1602_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                W_buf10_address1 <= zext_ln1118_4_fu_1537_p1(7 - 1 downto 0);
            else 
                W_buf10_address1 <= "XXXXXXX";
            end if;
        else 
            W_buf10_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_buf10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf10_ce0 <= ap_const_logic_1;
        else 
            W_buf10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf10_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf10_ce1 <= ap_const_logic_1;
        else 
            W_buf10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf11_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln1118_5_fu_1552_p1, zext_ln1118_6_fu_1586_p1, ap_block_pp0_stage2, zext_ln1118_8_fu_1640_p1, ap_block_pp0_stage3, zext_ln1118_10_fu_1707_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            W_buf11_address0 <= zext_ln1118_10_fu_1707_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf11_address0 <= zext_ln1118_8_fu_1640_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf11_address0 <= zext_ln1118_6_fu_1586_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf11_address0 <= zext_ln1118_5_fu_1552_p1(7 - 1 downto 0);
        else 
            W_buf11_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_buf11_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, zext_ln1118_4_fu_1537_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln1118_7_fu_1602_p1, ap_block_pp0_stage3, zext_ln1118_9_fu_1656_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                W_buf11_address1 <= zext_ln1118_9_fu_1656_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                W_buf11_address1 <= zext_ln1118_7_fu_1602_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                W_buf11_address1 <= zext_ln1118_4_fu_1537_p1(7 - 1 downto 0);
            else 
                W_buf11_address1 <= "XXXXXXX";
            end if;
        else 
            W_buf11_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_buf11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf11_ce0 <= ap_const_logic_1;
        else 
            W_buf11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf11_ce1 <= ap_const_logic_1;
        else 
            W_buf11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf6_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln1118_5_fu_1552_p1, zext_ln1118_6_fu_1586_p1, ap_block_pp0_stage2, zext_ln1118_8_fu_1640_p1, ap_block_pp0_stage3, zext_ln1118_10_fu_1707_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            W_buf6_address0 <= zext_ln1118_10_fu_1707_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf6_address0 <= zext_ln1118_8_fu_1640_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf6_address0 <= zext_ln1118_6_fu_1586_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf6_address0 <= zext_ln1118_5_fu_1552_p1(7 - 1 downto 0);
        else 
            W_buf6_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_buf6_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, zext_ln1118_4_fu_1537_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln1118_7_fu_1602_p1, ap_block_pp0_stage3, zext_ln1118_9_fu_1656_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                W_buf6_address1 <= zext_ln1118_9_fu_1656_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                W_buf6_address1 <= zext_ln1118_7_fu_1602_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                W_buf6_address1 <= zext_ln1118_4_fu_1537_p1(7 - 1 downto 0);
            else 
                W_buf6_address1 <= "XXXXXXX";
            end if;
        else 
            W_buf6_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_buf6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf6_ce0 <= ap_const_logic_1;
        else 
            W_buf6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf6_ce1 <= ap_const_logic_1;
        else 
            W_buf6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf7_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln1118_5_fu_1552_p1, zext_ln1118_6_fu_1586_p1, ap_block_pp0_stage2, zext_ln1118_8_fu_1640_p1, ap_block_pp0_stage3, zext_ln1118_10_fu_1707_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            W_buf7_address0 <= zext_ln1118_10_fu_1707_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf7_address0 <= zext_ln1118_8_fu_1640_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf7_address0 <= zext_ln1118_6_fu_1586_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf7_address0 <= zext_ln1118_5_fu_1552_p1(7 - 1 downto 0);
        else 
            W_buf7_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_buf7_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, zext_ln1118_4_fu_1537_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln1118_7_fu_1602_p1, ap_block_pp0_stage3, zext_ln1118_9_fu_1656_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                W_buf7_address1 <= zext_ln1118_9_fu_1656_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                W_buf7_address1 <= zext_ln1118_7_fu_1602_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                W_buf7_address1 <= zext_ln1118_4_fu_1537_p1(7 - 1 downto 0);
            else 
                W_buf7_address1 <= "XXXXXXX";
            end if;
        else 
            W_buf7_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_buf7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf7_ce0 <= ap_const_logic_1;
        else 
            W_buf7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf7_ce1 <= ap_const_logic_1;
        else 
            W_buf7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf8_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln1118_5_fu_1552_p1, zext_ln1118_6_fu_1586_p1, ap_block_pp0_stage2, zext_ln1118_8_fu_1640_p1, ap_block_pp0_stage3, zext_ln1118_10_fu_1707_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            W_buf8_address0 <= zext_ln1118_10_fu_1707_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf8_address0 <= zext_ln1118_8_fu_1640_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf8_address0 <= zext_ln1118_6_fu_1586_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf8_address0 <= zext_ln1118_5_fu_1552_p1(7 - 1 downto 0);
        else 
            W_buf8_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_buf8_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, zext_ln1118_4_fu_1537_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln1118_7_fu_1602_p1, ap_block_pp0_stage3, zext_ln1118_9_fu_1656_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                W_buf8_address1 <= zext_ln1118_9_fu_1656_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                W_buf8_address1 <= zext_ln1118_7_fu_1602_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                W_buf8_address1 <= zext_ln1118_4_fu_1537_p1(7 - 1 downto 0);
            else 
                W_buf8_address1 <= "XXXXXXX";
            end if;
        else 
            W_buf8_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_buf8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf8_ce0 <= ap_const_logic_1;
        else 
            W_buf8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf8_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf8_ce1 <= ap_const_logic_1;
        else 
            W_buf8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf9_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln1118_5_fu_1552_p1, zext_ln1118_6_fu_1586_p1, ap_block_pp0_stage2, zext_ln1118_8_fu_1640_p1, ap_block_pp0_stage3, zext_ln1118_10_fu_1707_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            W_buf9_address0 <= zext_ln1118_10_fu_1707_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf9_address0 <= zext_ln1118_8_fu_1640_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf9_address0 <= zext_ln1118_6_fu_1586_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf9_address0 <= zext_ln1118_5_fu_1552_p1(7 - 1 downto 0);
        else 
            W_buf9_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_buf9_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, zext_ln1118_4_fu_1537_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln1118_7_fu_1602_p1, ap_block_pp0_stage3, zext_ln1118_9_fu_1656_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                W_buf9_address1 <= zext_ln1118_9_fu_1656_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                W_buf9_address1 <= zext_ln1118_7_fu_1602_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                W_buf9_address1 <= zext_ln1118_4_fu_1537_p1(7 - 1 downto 0);
            else 
                W_buf9_address1 <= "XXXXXXX";
            end if;
        else 
            W_buf9_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_buf9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf9_ce0 <= ap_const_logic_1;
        else 
            W_buf9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf9_ce1 <= ap_const_logic_1;
        else 
            W_buf9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln1118_5_fu_1552_p1, zext_ln1118_6_fu_1586_p1, ap_block_pp0_stage2, zext_ln1118_8_fu_1640_p1, ap_block_pp0_stage3, zext_ln1118_10_fu_1707_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            W_buf_address0 <= zext_ln1118_10_fu_1707_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf_address0 <= zext_ln1118_8_fu_1640_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf_address0 <= zext_ln1118_6_fu_1586_p1(7 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            W_buf_address0 <= zext_ln1118_5_fu_1552_p1(7 - 1 downto 0);
        else 
            W_buf_address0 <= "XXXXXXX";
        end if; 
    end process;


    W_buf_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, zext_ln1118_4_fu_1537_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln1118_7_fu_1602_p1, ap_block_pp0_stage3, zext_ln1118_9_fu_1656_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                W_buf_address1 <= zext_ln1118_9_fu_1656_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                W_buf_address1 <= zext_ln1118_7_fu_1602_p1(7 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                W_buf_address1 <= zext_ln1118_4_fu_1537_p1(7 - 1 downto 0);
            else 
                W_buf_address1 <= "XXXXXXX";
            end if;
        else 
            W_buf_address1 <= "XXXXXXX";
        end if; 
    end process;


    W_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf_ce0 <= ap_const_logic_1;
        else 
            W_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    W_buf_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            W_buf_ce1 <= ap_const_logic_1;
        else 
            W_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_buf4_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln1116_1_fu_1617_p1, ap_block_pp0_stage3, zext_ln1116_3_fu_1679_p1, zext_ln1116_6_fu_1733_p1, zext_ln1116_7_fu_1760_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            X_buf4_address0 <= zext_ln1116_7_fu_1760_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            X_buf4_address0 <= zext_ln1116_6_fu_1733_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf4_address0 <= zext_ln1116_3_fu_1679_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf4_address0 <= zext_ln1116_1_fu_1617_p1(12 - 1 downto 0);
        else 
            X_buf4_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_buf4_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage2, zext_ln1116_2_fu_1628_p1, ap_block_pp0_stage3, zext_ln1116_4_fu_1690_p1, zext_ln1116_5_fu_1722_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            X_buf4_address1 <= zext_ln1116_5_fu_1722_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf4_address1 <= zext_ln1116_4_fu_1690_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf4_address1 <= zext_ln1116_2_fu_1628_p1(12 - 1 downto 0);
        else 
            X_buf4_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_buf4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            X_buf4_ce0 <= ap_const_logic_1;
        else 
            X_buf4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_buf4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            X_buf4_ce1 <= ap_const_logic_1;
        else 
            X_buf4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_buf5_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln1116_1_fu_1617_p1, ap_block_pp0_stage3, zext_ln1116_3_fu_1679_p1, zext_ln1116_6_fu_1733_p1, zext_ln1116_7_fu_1760_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            X_buf5_address0 <= zext_ln1116_7_fu_1760_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            X_buf5_address0 <= zext_ln1116_6_fu_1733_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf5_address0 <= zext_ln1116_3_fu_1679_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf5_address0 <= zext_ln1116_1_fu_1617_p1(12 - 1 downto 0);
        else 
            X_buf5_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_buf5_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage2, zext_ln1116_2_fu_1628_p1, ap_block_pp0_stage3, zext_ln1116_4_fu_1690_p1, zext_ln1116_5_fu_1722_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            X_buf5_address1 <= zext_ln1116_5_fu_1722_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf5_address1 <= zext_ln1116_4_fu_1690_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf5_address1 <= zext_ln1116_2_fu_1628_p1(12 - 1 downto 0);
        else 
            X_buf5_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_buf5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            X_buf5_ce0 <= ap_const_logic_1;
        else 
            X_buf5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_buf5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            X_buf5_ce1 <= ap_const_logic_1;
        else 
            X_buf5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    X_buf_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln1116_1_fu_1617_p1, ap_block_pp0_stage3, zext_ln1116_3_fu_1679_p1, zext_ln1116_6_fu_1733_p1, zext_ln1116_7_fu_1760_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            X_buf_address0 <= zext_ln1116_7_fu_1760_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            X_buf_address0 <= zext_ln1116_6_fu_1733_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf_address0 <= zext_ln1116_3_fu_1679_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf_address0 <= zext_ln1116_1_fu_1617_p1(12 - 1 downto 0);
        else 
            X_buf_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_buf_address1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0, ap_block_pp0_stage2, zext_ln1116_2_fu_1628_p1, ap_block_pp0_stage3, zext_ln1116_4_fu_1690_p1, zext_ln1116_5_fu_1722_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            X_buf_address1 <= zext_ln1116_5_fu_1722_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf_address1 <= zext_ln1116_4_fu_1690_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            X_buf_address1 <= zext_ln1116_2_fu_1628_p1(12 - 1 downto 0);
        else 
            X_buf_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    X_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            X_buf_ce0 <= ap_const_logic_1;
        else 
            X_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    X_buf_ce1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            X_buf_ce1 <= ap_const_logic_1;
        else 
            X_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Y_buf1_address0 <= Y_buf1_addr_reg_2103;

    Y_buf1_ce0_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Y_buf1_ce0 <= ap_const_logic_1;
        else 
            Y_buf1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Y_buf1_d0 <= add_ln703_fu_1916_p2;

    Y_buf1_we0_assign_proc : process(ap_CS_fsm_state14, trunc_ln703_fu_1903_p1)
    begin
        if (((trunc_ln703_fu_1903_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            Y_buf1_we0 <= ap_const_logic_1;
        else 
            Y_buf1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    Y_buf2_address0 <= Y_buf2_addr_reg_2108;

    Y_buf2_ce0_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Y_buf2_ce0 <= ap_const_logic_1;
        else 
            Y_buf2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Y_buf2_d0 <= add_ln703_fu_1916_p2;

    Y_buf2_we0_assign_proc : process(ap_CS_fsm_state14, trunc_ln703_fu_1903_p1)
    begin
        if (((trunc_ln703_fu_1903_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            Y_buf2_we0 <= ap_const_logic_1;
        else 
            Y_buf2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    Y_buf3_address0 <= Y_buf3_addr_reg_2113;

    Y_buf3_ce0_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Y_buf3_ce0 <= ap_const_logic_1;
        else 
            Y_buf3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Y_buf3_d0 <= add_ln703_fu_1916_p2;

    Y_buf3_we0_assign_proc : process(ap_CS_fsm_state14, trunc_ln703_fu_1903_p1)
    begin
        if (((trunc_ln703_fu_1903_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            Y_buf3_we0 <= ap_const_logic_1;
        else 
            Y_buf3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    Y_buf_address0 <= Y_buf_addr_reg_2098;

    Y_buf_ce0_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            Y_buf_ce0 <= ap_const_logic_1;
        else 
            Y_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Y_buf_d0 <= add_ln703_fu_1916_p2;

    Y_buf_we0_assign_proc : process(ap_CS_fsm_state14, trunc_ln703_fu_1903_p1)
    begin
        if (((trunc_ln703_fu_1903_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            Y_buf_we0 <= ap_const_logic_1;
        else 
            Y_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1116_1_fu_1624_p2 <= std_logic_vector(unsigned(mul_ln1116_reg_2262) + unsigned(select_ln35_3_cast_reg_2118));
    add_ln1116_2_fu_1675_p2 <= std_logic_vector(unsigned(mul_ln1116_reg_2262) + unsigned(select_ln35_4_cast_reg_2123));
    add_ln1116_3_fu_1686_p2 <= std_logic_vector(unsigned(mul_ln1116_reg_2262) + unsigned(select_ln35_5_cast_reg_2128));
    add_ln1116_4_fu_1718_p2 <= std_logic_vector(unsigned(mul_ln1116_reg_2262) + unsigned(select_ln35_6_cast_reg_2133));
    add_ln1116_5_fu_1729_p2 <= std_logic_vector(unsigned(mul_ln1116_reg_2262) + unsigned(select_ln35_7_cast_reg_2138));
    add_ln1116_6_fu_1740_p2 <= std_logic_vector(unsigned(mul_ln1116_reg_2262) + unsigned(zext_ln35_1_reg_2143));
    add_ln1116_fu_1613_p2 <= std_logic_vector(unsigned(mul_ln1116_reg_2262) + unsigned(zext_ln35_reg_2088));
    add_ln1118_1_fu_1512_p2 <= std_logic_vector(signed(sext_ln38_reg_2148) + signed(zext_ln1118_3_fu_1508_p1));
    add_ln1118_fu_1465_p2 <= std_logic_vector(signed(sext_ln38_reg_2148) + signed(zext_ln1118_2_fu_1461_p1));
    add_ln32_1_fu_1154_p2 <= std_logic_vector(unsigned(oh_reg_889) + unsigned(ap_const_lv5_1));
    add_ln32_2_fu_1086_p2 <= std_logic_vector(unsigned(indvar_flatten112_reg_878) + unsigned(ap_const_lv11_1));
    add_ln32_fu_1148_p2 <= std_logic_vector(unsigned(h_reg_901) + unsigned(ap_const_lv6_2));
    add_ln35_1_fu_1931_p2 <= std_logic_vector(unsigned(indvar_flatten71_reg_913) + unsigned(ap_const_lv8_1));
    add_ln35_fu_1260_p2 <= std_logic_vector(unsigned(select_ln32_reg_2060) + unsigned(ap_const_lv5_1));
    add_ln38_fu_1926_p2 <= std_logic_vector(unsigned(select_ln35_reg_2077) + unsigned(ap_const_lv3_1));
    add_ln46_2_fu_1455_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_964_p4) + unsigned(ap_const_lv5_1));
    add_ln46_3_fu_1547_p2 <= std_logic_vector(unsigned(select_ln46_1_reg_2181) + unsigned(ap_const_lv7_1));
    add_ln46_4_fu_1581_p2 <= std_logic_vector(unsigned(select_ln46_1_reg_2181) + unsigned(ap_const_lv7_2));
    add_ln46_5_fu_1597_p2 <= std_logic_vector(unsigned(select_ln46_1_reg_2181) + unsigned(ap_const_lv7_3));
    add_ln46_6_fu_1635_p2 <= std_logic_vector(unsigned(select_ln46_1_reg_2181) + unsigned(ap_const_lv7_4));
    add_ln46_7_fu_1651_p2 <= std_logic_vector(unsigned(select_ln46_1_reg_2181) + unsigned(ap_const_lv7_5));
    add_ln46_8_fu_1702_p2 <= std_logic_vector(unsigned(select_ln46_1_reg_2181) + unsigned(ap_const_lv7_6));
    add_ln46_fu_1488_p2 <= std_logic_vector(unsigned(ap_phi_mux_chan_phi_fu_975_p4) + unsigned(ap_const_lv2_1));
    add_ln49_fu_1697_p2 <= std_logic_vector(unsigned(select_ln46_reg_2173) + unsigned(ap_const_lv3_1));
    add_ln703_1_fu_1833_p2 <= std_logic_vector(unsigned(trunc_ln708_1_reg_2590) + unsigned(trunc_ln708_2_fu_1799_p4));
    add_ln703_2_fu_1838_p2 <= std_logic_vector(unsigned(add_ln703_1_fu_1833_p2) + unsigned(trunc_ln4_reg_2585));
    add_ln703_3_fu_1878_p2 <= std_logic_vector(unsigned(trunc_ln708_3_reg_2605) + unsigned(trunc_ln708_4_reg_2625));
    add_ln703_4_fu_1882_p2 <= std_logic_vector(unsigned(trunc_ln708_5_reg_2630) + unsigned(trunc_ln708_6_fu_1869_p4));
    add_ln703_5_fu_1887_p2 <= std_logic_vector(unsigned(add_ln703_4_fu_1882_p2) + unsigned(add_ln703_3_fu_1878_p2));
    add_ln703_6_fu_1893_p2 <= std_logic_vector(unsigned(add_ln703_5_reg_2640) + unsigned(add_ln703_2_reg_2620));
    add_ln703_7_fu_1897_p2 <= std_logic_vector(unsigned(accu_V_reg_994) + unsigned(add_ln703_6_fu_1893_p2));
    add_ln703_fu_1916_p2 <= std_logic_vector(unsigned(tmp_2_fu_1906_p6) + unsigned(accu_V_reg_994));
    add_ln78_1_fu_1307_p2 <= std_logic_vector(unsigned(add_ln78_fu_1194_p2) + unsigned(zext_ln78_1_fu_1303_p1));
    add_ln78_fu_1194_p2 <= std_logic_vector(unsigned(tmp_fu_1174_p3) + unsigned(zext_ln78_fu_1190_p1));
    and_ln32_fu_1247_p2 <= (xor_ln32_fu_1236_p2 and icmp_ln38_fu_1241_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln46_fu_1482_p2)
    begin
        if ((icmp_ln46_fu_1482_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln32_fu_1128_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((icmp_ln32_fu_1128_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_chan_phi_fu_975_p4_assign_proc : process(chan_reg_971, icmp_ln46_reg_2159, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, select_ln46_2_reg_2443, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_chan_phi_fu_975_p4 <= select_ln46_2_reg_2443;
        else 
            ap_phi_mux_chan_phi_fu_975_p4 <= chan_reg_971;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_987_p4_assign_proc : process(i_reg_983, icmp_ln46_reg_2159, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln49_reg_2485, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_987_p4 <= add_ln49_reg_2485;
        else 
            ap_phi_mux_i_phi_fu_987_p4 <= i_reg_983;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_964_p4_assign_proc : process(indvar_flatten_reg_960, icmp_ln46_reg_2159, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln46_2_reg_2154, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln46_reg_2159 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_964_p4 <= add_ln46_2_reg_2154;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_964_p4 <= indvar_flatten_reg_960;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln32_fu_1128_p2)
    begin
        if (((icmp_ln32_fu_1128_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_56_fu_1104_p2 <= std_logic_vector(unsigned(w_reg_936) + unsigned(ap_const_lv6_3));
    empty_57_fu_1110_p2 <= std_logic_vector(unsigned(w_reg_936) + unsigned(ap_const_lv6_4));
    empty_58_fu_1116_p2 <= std_logic_vector(unsigned(w_reg_936) + unsigned(ap_const_lv6_5));
    empty_59_fu_1122_p2 <= std_logic_vector(unsigned(w_reg_936) + unsigned(ap_const_lv6_6));
    empty_61_fu_1566_p2 <= std_logic_vector(unsigned(i_cast_fu_1563_p1) + unsigned(select_ln32_9_reg_2071));
    empty_fu_1092_p2 <= (w_reg_936 or ap_const_lv6_1);

    grp_fu_1025_p8_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, select_ln46_reg_2173, select_ln46_reg_2173_pp0_iter1_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_1025_p8 <= select_ln46_reg_2173_pp0_iter1_reg;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            grp_fu_1025_p8 <= select_ln46_reg_2173;
        else 
            grp_fu_1025_p8 <= "XXX";
        end if; 
    end process;


    grp_fu_1044_p4_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, select_ln46_2_fu_1667_p3, select_ln46_2_reg_2443, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_fu_1044_p4 <= select_ln46_2_reg_2443;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_1044_p4 <= select_ln46_2_fu_1667_p3;
        else 
            grp_fu_1044_p4 <= "XX";
        end if; 
    end process;


    grp_fu_1055_p4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, select_ln46_2_fu_1667_p3, select_ln46_2_reg_2443, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            grp_fu_1055_p4 <= select_ln46_2_reg_2443;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_1055_p4 <= select_ln46_2_fu_1667_p3;
        else 
            grp_fu_1055_p4 <= "XX";
        end if; 
    end process;

    i_cast_fu_1563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln46_reg_2173),6));
    icmp_ln32_fu_1128_p2 <= "1" when (indvar_flatten112_reg_878 = ap_const_lv11_730) else "0";
    icmp_ln35_fu_1134_p2 <= "1" when (indvar_flatten71_reg_913 = ap_const_lv8_50) else "0";
    icmp_ln38_fu_1241_p2 <= "1" when (kernel_reg_948 = ap_const_lv3_4) else "0";
    icmp_ln46_fu_1482_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_964_p4 = ap_const_lv5_15) else "0";
    icmp_ln49_fu_1494_p2 <= "1" when (ap_phi_mux_i_phi_fu_987_p4 = ap_const_lv3_7) else "0";
    indvars_iv_next31_dup_fu_1265_p2 <= std_logic_vector(unsigned(select_ln32_1_fu_1160_p3) + unsigned(ap_const_lv6_2));
    indvars_iv_next31_fu_1098_p2 <= std_logic_vector(unsigned(w_reg_936) + unsigned(ap_const_lv6_2));
    indvars_iv_next31_mid1_fu_1339_p2 <= std_logic_vector(unsigned(select_ln32_1_fu_1160_p3) + unsigned(ap_const_lv6_4));
    mul_ln1116_fu_1575_p0 <= mul_ln1116_fu_1575_p00(6 - 1 downto 0);
    mul_ln1116_fu_1575_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_61_fu_1566_p2),12));
    mul_ln1116_fu_1575_p1 <= ap_const_lv12_2E(7 - 1 downto 0);
    or_ln35_fu_1271_p2 <= (icmp_ln35_reg_2044 or and_ln32_fu_1247_p2);
    p_mid163_fu_1357_p2 <= std_logic_vector(unsigned(select_ln32_1_fu_1160_p3) + unsigned(ap_const_lv6_5));
    p_mid165_fu_1375_p2 <= std_logic_vector(unsigned(select_ln32_1_fu_1160_p3) + unsigned(ap_const_lv6_6));
    p_mid167_fu_1393_p2 <= std_logic_vector(unsigned(select_ln32_1_fu_1160_p3) + unsigned(ap_const_lv6_7));
    p_mid169_fu_1411_p2 <= std_logic_vector(unsigned(select_ln32_1_fu_1160_p3) + unsigned(ap_const_lv6_8));
    p_mid1_fu_1321_p2 <= (indvars_iv_next31_dup_fu_1265_p2 or ap_const_lv6_1);
    select_ln32_1_fu_1160_p3 <= 
        ap_const_lv6_0 when (icmp_ln35_reg_2044(0) = '1') else 
        w_reg_936;
    select_ln32_2_fu_1167_p3 <= 
        add_ln32_1_fu_1154_p2 when (icmp_ln35_reg_2044(0) = '1') else 
        oh_reg_889;
    select_ln32_3_fu_1200_p3 <= 
        ap_const_lv6_1 when (icmp_ln35_reg_2044(0) = '1') else 
        empty_reg_2011;
    select_ln32_4_fu_1206_p3 <= 
        ap_const_lv6_2 when (icmp_ln35_reg_2044(0) = '1') else 
        indvars_iv_next31_reg_2016;
    select_ln32_5_fu_1212_p3 <= 
        ap_const_lv6_3 when (icmp_ln35_reg_2044(0) = '1') else 
        empty_56_reg_2021;
    select_ln32_6_fu_1218_p3 <= 
        ap_const_lv6_4 when (icmp_ln35_reg_2044(0) = '1') else 
        empty_57_reg_2026;
    select_ln32_7_fu_1224_p3 <= 
        ap_const_lv6_5 when (icmp_ln35_reg_2044(0) = '1') else 
        empty_58_reg_2031;
    select_ln32_8_fu_1230_p3 <= 
        ap_const_lv6_6 when (icmp_ln35_reg_2044(0) = '1') else 
        empty_59_reg_2036;
    select_ln32_9_fu_1253_p3 <= 
        add_ln32_fu_1148_p2 when (icmp_ln35_reg_2044(0) = '1') else 
        h_reg_901;
    select_ln32_fu_1140_p3 <= 
        ap_const_lv5_0 when (icmp_ln35_fu_1134_p2(0) = '1') else 
        ow_reg_925;
    select_ln35_1_fu_1284_p3 <= 
        indvars_iv_next31_dup_fu_1265_p2 when (and_ln32_fu_1247_p2(0) = '1') else 
        select_ln32_1_fu_1160_p3;
    select_ln35_2_fu_1296_p3 <= 
        add_ln35_fu_1260_p2 when (and_ln32_fu_1247_p2(0) = '1') else 
        select_ln32_reg_2060;
    select_ln35_3_cast_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_3_fu_1327_p3),12));
    select_ln35_3_fu_1327_p3 <= 
        p_mid1_fu_1321_p2 when (and_ln32_fu_1247_p2(0) = '1') else 
        select_ln32_3_fu_1200_p3;
    select_ln35_4_cast_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_4_fu_1345_p3),12));
    select_ln35_4_fu_1345_p3 <= 
        indvars_iv_next31_mid1_fu_1339_p2 when (and_ln32_fu_1247_p2(0) = '1') else 
        select_ln32_4_fu_1206_p3;
    select_ln35_5_cast_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_5_fu_1363_p3),12));
    select_ln35_5_fu_1363_p3 <= 
        p_mid163_fu_1357_p2 when (and_ln32_fu_1247_p2(0) = '1') else 
        select_ln32_5_fu_1212_p3;
    select_ln35_6_cast_fu_1389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_6_fu_1381_p3),12));
    select_ln35_6_fu_1381_p3 <= 
        p_mid165_fu_1375_p2 when (and_ln32_fu_1247_p2(0) = '1') else 
        select_ln32_6_fu_1218_p3;
    select_ln35_7_cast_fu_1407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_7_fu_1399_p3),12));
    select_ln35_7_fu_1399_p3 <= 
        p_mid167_fu_1393_p2 when (and_ln32_fu_1247_p2(0) = '1') else 
        select_ln32_7_fu_1224_p3;
    select_ln35_8_fu_1417_p3 <= 
        p_mid169_fu_1411_p2 when (and_ln32_fu_1247_p2(0) = '1') else 
        select_ln32_8_fu_1230_p3;
    select_ln35_9_fu_1937_p3 <= 
        ap_const_lv8_1 when (icmp_ln35_reg_2044(0) = '1') else 
        add_ln35_1_fu_1931_p2;
    select_ln35_fu_1276_p3 <= 
        ap_const_lv3_0 when (or_ln35_fu_1271_p2(0) = '1') else 
        kernel_reg_948;
    select_ln46_1_fu_1529_p3 <= 
        sub_ln1118_2_fu_1523_p2 when (icmp_ln49_fu_1494_p2(0) = '1') else 
        sub_ln1118_1_fu_1476_p2;
    select_ln46_2_fu_1667_p3 <= 
        add_ln46_reg_2163 when (icmp_ln49_reg_2168(0) = '1') else 
        chan_reg_971;
    select_ln46_fu_1500_p3 <= 
        ap_const_lv3_0 when (icmp_ln49_fu_1494_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_987_p4;
        sext_ln38_fu_1451_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1118_fu_1445_p2),7));

    shl_ln1118_1_fu_1517_p2 <= std_logic_vector(shift_left(unsigned(add_ln1118_1_fu_1512_p2),to_integer(unsigned('0' & ap_const_lv7_3(7-1 downto 0)))));
    shl_ln1118_fu_1470_p2 <= std_logic_vector(shift_left(unsigned(add_ln1118_fu_1465_p2),to_integer(unsigned('0' & ap_const_lv7_3(7-1 downto 0)))));
    sub_ln1118_1_fu_1476_p2 <= std_logic_vector(unsigned(shl_ln1118_fu_1470_p2) - unsigned(add_ln1118_fu_1465_p2));
    sub_ln1118_2_fu_1523_p2 <= std_logic_vector(unsigned(shl_ln1118_1_fu_1517_p2) - unsigned(add_ln1118_1_fu_1512_p2));
    sub_ln1118_fu_1445_p2 <= std_logic_vector(unsigned(zext_ln1118_1_fu_1441_p1) - unsigned(zext_ln1118_fu_1429_p1));
    tmp_11_fu_1182_p3 <= (select_ln32_2_fu_1167_p3 & ap_const_lv2_0);
    tmp_12_fu_1433_p3 <= (select_ln35_fu_1276_p3 & ap_const_lv2_0);
    tmp_2_fu_1906_p5 <= select_ln35_reg_2077(2 - 1 downto 0);
    tmp_fu_1174_p3 <= (select_ln32_2_fu_1167_p3 & ap_const_lv4_0);
    trunc_ln703_fu_1903_p1 <= select_ln35_reg_2077(2 - 1 downto 0);
    trunc_ln708_2_fu_1799_p4 <= mul_ln1115_2_reg_2595(28 downto 13);
    trunc_ln708_6_fu_1869_p4 <= mul_ln1115_6_reg_2635(28 downto 13);
    xor_ln32_fu_1236_p2 <= (icmp_ln35_reg_2044 xor ap_const_lv1_1);
    zext_ln1116_1_fu_1617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_fu_1613_p2),64));
    zext_ln1116_2_fu_1628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_1_fu_1624_p2),64));
    zext_ln1116_3_fu_1679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_2_fu_1675_p2),64));
    zext_ln1116_4_fu_1690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_3_fu_1686_p2),64));
    zext_ln1116_5_fu_1722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_4_fu_1718_p2),64));
    zext_ln1116_6_fu_1733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_5_fu_1729_p2),64));
    zext_ln1116_7_fu_1760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_6_reg_2535),64));
    zext_ln1118_10_fu_1707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_8_fu_1702_p2),64));
    zext_ln1118_1_fu_1441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1433_p3),6));
    zext_ln1118_2_fu_1461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_chan_phi_fu_975_p4),7));
    zext_ln1118_3_fu_1508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_fu_1488_p2),7));
    zext_ln1118_4_fu_1537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln46_1_reg_2181),64));
    zext_ln1118_5_fu_1552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_3_fu_1547_p2),64));
    zext_ln1118_6_fu_1586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_4_fu_1581_p2),64));
    zext_ln1118_7_fu_1602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_5_fu_1597_p2),64));
    zext_ln1118_8_fu_1640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_6_fu_1635_p2),64));
    zext_ln1118_9_fu_1656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_7_fu_1651_p2),64));
    zext_ln1118_fu_1429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_fu_1276_p3),6));
    zext_ln35_1_fu_1425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_8_fu_1417_p3),12));
    zext_ln35_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_1_fu_1284_p3),12));
    zext_ln78_1_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_2_fu_1296_p3),9));
    zext_ln78_2_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln78_1_fu_1307_p2),64));
    zext_ln78_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_1182_p3),9));
end behav;
