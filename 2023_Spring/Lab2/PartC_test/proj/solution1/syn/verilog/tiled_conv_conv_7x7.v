// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
// Version: 2020.2.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tiled_conv_conv_7x7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Y_buf_address0,
        Y_buf_ce0,
        Y_buf_we0,
        Y_buf_d0,
        Y_buf1_address0,
        Y_buf1_ce0,
        Y_buf1_we0,
        Y_buf1_d0,
        Y_buf2_address0,
        Y_buf2_ce0,
        Y_buf2_we0,
        Y_buf2_d0,
        Y_buf3_address0,
        Y_buf3_ce0,
        Y_buf3_we0,
        Y_buf3_d0,
        X_buf_address0,
        X_buf_ce0,
        X_buf_q0,
        X_buf_address1,
        X_buf_ce1,
        X_buf_q1,
        X_buf4_address0,
        X_buf4_ce0,
        X_buf4_q0,
        X_buf4_address1,
        X_buf4_ce1,
        X_buf4_q1,
        X_buf5_address0,
        X_buf5_ce0,
        X_buf5_q0,
        X_buf5_address1,
        X_buf5_ce1,
        X_buf5_q1,
        W_buf_address0,
        W_buf_ce0,
        W_buf_q0,
        W_buf_address1,
        W_buf_ce1,
        W_buf_q1,
        W_buf6_address0,
        W_buf6_ce0,
        W_buf6_q0,
        W_buf6_address1,
        W_buf6_ce1,
        W_buf6_q1,
        W_buf7_address0,
        W_buf7_ce0,
        W_buf7_q0,
        W_buf7_address1,
        W_buf7_ce1,
        W_buf7_q1,
        W_buf8_address0,
        W_buf8_ce0,
        W_buf8_q0,
        W_buf8_address1,
        W_buf8_ce1,
        W_buf8_q1,
        W_buf9_address0,
        W_buf9_ce0,
        W_buf9_q0,
        W_buf9_address1,
        W_buf9_ce1,
        W_buf9_q1,
        W_buf10_address0,
        W_buf10_ce0,
        W_buf10_q0,
        W_buf10_address1,
        W_buf10_ce1,
        W_buf10_q1,
        W_buf11_address0,
        W_buf11_ce0,
        W_buf11_q0,
        W_buf11_address1,
        W_buf11_ce1,
        W_buf11_q1,
        p_read,
        p_read1,
        p_read2,
        p_read3
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_pp0_stage0 = 8'd8;
parameter    ap_ST_fsm_pp0_stage1 = 8'd16;
parameter    ap_ST_fsm_pp0_stage2 = 8'd32;
parameter    ap_ST_fsm_pp0_stage3 = 8'd64;
parameter    ap_ST_fsm_state14 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] Y_buf_address0;
output   Y_buf_ce0;
output   Y_buf_we0;
output  [15:0] Y_buf_d0;
output  [8:0] Y_buf1_address0;
output   Y_buf1_ce0;
output   Y_buf1_we0;
output  [15:0] Y_buf1_d0;
output  [8:0] Y_buf2_address0;
output   Y_buf2_ce0;
output   Y_buf2_we0;
output  [15:0] Y_buf2_d0;
output  [8:0] Y_buf3_address0;
output   Y_buf3_ce0;
output   Y_buf3_we0;
output  [15:0] Y_buf3_d0;
output  [11:0] X_buf_address0;
output   X_buf_ce0;
input  [15:0] X_buf_q0;
output  [11:0] X_buf_address1;
output   X_buf_ce1;
input  [15:0] X_buf_q1;
output  [11:0] X_buf4_address0;
output   X_buf4_ce0;
input  [15:0] X_buf4_q0;
output  [11:0] X_buf4_address1;
output   X_buf4_ce1;
input  [15:0] X_buf4_q1;
output  [11:0] X_buf5_address0;
output   X_buf5_ce0;
input  [15:0] X_buf5_q0;
output  [11:0] X_buf5_address1;
output   X_buf5_ce1;
input  [15:0] X_buf5_q1;
output  [6:0] W_buf_address0;
output   W_buf_ce0;
input  [15:0] W_buf_q0;
output  [6:0] W_buf_address1;
output   W_buf_ce1;
input  [15:0] W_buf_q1;
output  [6:0] W_buf6_address0;
output   W_buf6_ce0;
input  [15:0] W_buf6_q0;
output  [6:0] W_buf6_address1;
output   W_buf6_ce1;
input  [15:0] W_buf6_q1;
output  [6:0] W_buf7_address0;
output   W_buf7_ce0;
input  [15:0] W_buf7_q0;
output  [6:0] W_buf7_address1;
output   W_buf7_ce1;
input  [15:0] W_buf7_q1;
output  [6:0] W_buf8_address0;
output   W_buf8_ce0;
input  [15:0] W_buf8_q0;
output  [6:0] W_buf8_address1;
output   W_buf8_ce1;
input  [15:0] W_buf8_q1;
output  [6:0] W_buf9_address0;
output   W_buf9_ce0;
input  [15:0] W_buf9_q0;
output  [6:0] W_buf9_address1;
output   W_buf9_ce1;
input  [15:0] W_buf9_q1;
output  [6:0] W_buf10_address0;
output   W_buf10_ce0;
input  [15:0] W_buf10_q0;
output  [6:0] W_buf10_address1;
output   W_buf10_ce1;
input  [15:0] W_buf10_q1;
output  [6:0] W_buf11_address0;
output   W_buf11_ce0;
input  [15:0] W_buf11_q0;
output  [6:0] W_buf11_address1;
output   W_buf11_ce1;
input  [15:0] W_buf11_q1;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Y_buf_ce0;
reg Y_buf_we0;
reg Y_buf1_ce0;
reg Y_buf1_we0;
reg Y_buf2_ce0;
reg Y_buf2_we0;
reg Y_buf3_ce0;
reg Y_buf3_we0;
reg[11:0] X_buf_address0;
reg X_buf_ce0;
reg[11:0] X_buf_address1;
reg X_buf_ce1;
reg[11:0] X_buf4_address0;
reg X_buf4_ce0;
reg[11:0] X_buf4_address1;
reg X_buf4_ce1;
reg[11:0] X_buf5_address0;
reg X_buf5_ce0;
reg[11:0] X_buf5_address1;
reg X_buf5_ce1;
reg[6:0] W_buf_address0;
reg W_buf_ce0;
reg[6:0] W_buf_address1;
reg W_buf_ce1;
reg[6:0] W_buf6_address0;
reg W_buf6_ce0;
reg[6:0] W_buf6_address1;
reg W_buf6_ce1;
reg[6:0] W_buf7_address0;
reg W_buf7_ce0;
reg[6:0] W_buf7_address1;
reg W_buf7_ce1;
reg[6:0] W_buf8_address0;
reg W_buf8_ce0;
reg[6:0] W_buf8_address1;
reg W_buf8_ce1;
reg[6:0] W_buf9_address0;
reg W_buf9_ce0;
reg[6:0] W_buf9_address1;
reg W_buf9_ce1;
reg[6:0] W_buf10_address0;
reg W_buf10_ce0;
reg[6:0] W_buf10_address1;
reg W_buf10_ce1;
reg[6:0] W_buf11_address0;
reg W_buf11_ce0;
reg[6:0] W_buf11_address1;
reg W_buf11_ce1;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_960;
reg   [1:0] chan_reg_971;
reg   [2:0] i_reg_983;
reg   [15:0] accu_V_reg_994;
wire   [15:0] grp_fu_1006_p9;
reg  signed [15:0] reg_1066;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_state10_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln46_reg_2159;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [15:0] grp_fu_1025_p9;
reg  signed [15:0] reg_1070;
wire   [15:0] grp_fu_1044_p5;
reg  signed [15:0] reg_1074;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_state11_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln46_reg_2159_pp0_iter1_reg;
wire   [15:0] grp_fu_1055_p5;
reg  signed [15:0] reg_1078;
reg  signed [15:0] reg_1082;
wire   [10:0] add_ln32_2_fu_1086_p2;
reg   [10:0] add_ln32_2_reg_2006;
wire    ap_CS_fsm_state2;
wire   [5:0] empty_fu_1092_p2;
reg   [5:0] empty_reg_2011;
wire   [5:0] indvars_iv_next31_fu_1098_p2;
reg   [5:0] indvars_iv_next31_reg_2016;
wire   [5:0] empty_42_fu_1104_p2;
reg   [5:0] empty_42_reg_2021;
wire   [5:0] empty_43_fu_1110_p2;
reg   [5:0] empty_43_reg_2026;
wire   [5:0] empty_44_fu_1116_p2;
reg   [5:0] empty_44_reg_2031;
wire   [5:0] empty_45_fu_1122_p2;
reg   [5:0] empty_45_reg_2036;
wire   [0:0] icmp_ln35_fu_1134_p2;
reg   [0:0] icmp_ln35_reg_2044;
wire   [0:0] icmp_ln32_fu_1128_p2;
wire   [4:0] select_ln32_fu_1140_p3;
reg   [4:0] select_ln32_reg_2060;
wire   [4:0] select_ln32_2_fu_1167_p3;
reg   [4:0] select_ln32_2_reg_2066;
wire    ap_CS_fsm_state3;
wire   [5:0] select_ln32_9_fu_1253_p3;
reg   [5:0] select_ln32_9_reg_2071;
wire   [2:0] select_ln35_fu_1276_p3;
reg   [2:0] select_ln35_reg_2077;
wire   [5:0] select_ln35_1_fu_1284_p3;
reg   [5:0] select_ln35_1_reg_2083;
wire   [11:0] zext_ln35_fu_1292_p1;
reg   [11:0] zext_ln35_reg_2088;
wire   [4:0] select_ln35_2_fu_1296_p3;
reg   [4:0] select_ln35_2_reg_2093;
reg   [8:0] Y_buf_addr_reg_2098;
reg   [8:0] Y_buf1_addr_reg_2103;
reg   [8:0] Y_buf2_addr_reg_2108;
reg   [8:0] Y_buf3_addr_reg_2113;
wire   [11:0] select_ln35_3_cast_fu_1335_p1;
reg   [11:0] select_ln35_3_cast_reg_2118;
wire   [11:0] select_ln35_4_cast_fu_1353_p1;
reg   [11:0] select_ln35_4_cast_reg_2123;
wire   [11:0] select_ln35_5_cast_fu_1371_p1;
reg   [11:0] select_ln35_5_cast_reg_2128;
wire   [11:0] select_ln35_6_cast_fu_1389_p1;
reg   [11:0] select_ln35_6_cast_reg_2133;
wire   [11:0] select_ln35_7_cast_fu_1407_p1;
reg   [11:0] select_ln35_7_cast_reg_2138;
wire   [11:0] zext_ln35_1_fu_1425_p1;
reg   [11:0] zext_ln35_1_reg_2143;
wire  signed [6:0] sext_ln38_fu_1451_p1;
reg  signed [6:0] sext_ln38_reg_2148;
wire   [4:0] add_ln46_3_fu_1455_p2;
reg   [4:0] add_ln46_3_reg_2154;
wire   [0:0] icmp_ln46_fu_1482_p2;
reg   [0:0] icmp_ln46_reg_2159_pp0_iter2_reg;
wire   [1:0] add_ln46_fu_1488_p2;
reg   [1:0] add_ln46_reg_2163;
wire   [0:0] icmp_ln49_fu_1494_p2;
reg   [0:0] icmp_ln49_reg_2168;
wire   [2:0] select_ln46_fu_1500_p3;
reg   [2:0] select_ln46_reg_2173;
reg   [2:0] select_ln46_reg_2173_pp0_iter1_reg;
wire   [6:0] select_ln46_1_fu_1529_p3;
reg   [6:0] select_ln46_1_reg_2181;
wire   [11:0] mul_ln1116_fu_1575_p2;
reg   [11:0] mul_ln1116_reg_2262;
wire   [1:0] select_ln46_2_fu_1667_p3;
reg   [1:0] select_ln46_2_reg_2443;
reg  signed [15:0] tmp_s_reg_2480;
wire   [2:0] add_ln49_fu_1697_p2;
reg   [2:0] add_ln49_reg_2485;
wire   [11:0] add_ln1116_6_fu_1740_p2;
reg   [11:0] add_ln1116_6_reg_2535;
wire  signed [28:0] mul_ln1115_fu_1944_p2;
reg  signed [28:0] mul_ln1115_reg_2560;
wire  signed [28:0] mul_ln1115_1_fu_1950_p2;
reg  signed [28:0] mul_ln1115_1_reg_2565;
reg   [15:0] trunc_ln4_reg_2585;
reg   [15:0] trunc_ln708_1_reg_2590;
wire  signed [28:0] mul_ln1115_2_fu_1956_p2;
reg  signed [28:0] mul_ln1115_2_reg_2595;
wire  signed [28:0] mul_ln1115_3_fu_1962_p2;
reg  signed [28:0] mul_ln1115_3_reg_2600;
reg   [15:0] trunc_ln708_3_reg_2605;
wire  signed [28:0] mul_ln1115_4_fu_1968_p2;
reg  signed [28:0] mul_ln1115_4_reg_2610;
wire  signed [28:0] mul_ln1115_5_fu_1974_p2;
reg  signed [28:0] mul_ln1115_5_reg_2615;
wire   [15:0] add_ln703_2_fu_1838_p2;
reg   [15:0] add_ln703_2_reg_2620;
reg   [15:0] trunc_ln708_4_reg_2625;
reg   [15:0] trunc_ln708_5_reg_2630;
wire  signed [28:0] mul_ln1115_6_fu_1980_p2;
reg  signed [28:0] mul_ln1115_6_reg_2635;
wire   [15:0] add_ln703_5_fu_1887_p2;
reg   [15:0] add_ln703_5_reg_2640;
wire   [15:0] add_ln703_7_fu_1897_p2;
reg    ap_enable_reg_pp0_iter2;
wire   [2:0] add_ln38_fu_1926_p2;
wire    ap_CS_fsm_state14;
wire   [7:0] select_ln35_9_fu_1937_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage1_subdone;
reg   [10:0] indvar_flatten112_reg_878;
reg   [4:0] oh_reg_889;
reg   [5:0] h_reg_901;
reg   [7:0] indvar_flatten71_reg_913;
reg   [4:0] ow_reg_925;
reg   [5:0] w_reg_936;
reg   [2:0] kernel_reg_948;
reg   [4:0] ap_phi_mux_indvar_flatten_phi_fu_964_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_chan_phi_fu_975_p4;
reg   [2:0] ap_phi_mux_i_phi_fu_987_p4;
wire   [63:0] zext_ln78_2_fu_1313_p1;
wire   [63:0] zext_ln1118_4_fu_1537_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1118_5_fu_1552_p1;
wire   [63:0] zext_ln1118_6_fu_1586_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln1118_7_fu_1602_p1;
wire   [63:0] zext_ln1116_1_fu_1617_p1;
wire   [63:0] zext_ln1116_2_fu_1628_p1;
wire   [63:0] zext_ln1118_8_fu_1640_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln1118_9_fu_1656_p1;
wire   [63:0] zext_ln1116_3_fu_1679_p1;
wire   [63:0] zext_ln1116_4_fu_1690_p1;
wire   [63:0] zext_ln1118_10_fu_1707_p1;
wire   [63:0] zext_ln1116_5_fu_1722_p1;
wire   [63:0] zext_ln1116_6_fu_1733_p1;
wire   [63:0] zext_ln1116_7_fu_1760_p1;
wire   [1:0] trunc_ln703_fu_1903_p1;
wire   [15:0] add_ln703_fu_1916_p2;
reg   [2:0] grp_fu_1025_p8;
reg   [1:0] grp_fu_1044_p4;
reg   [1:0] grp_fu_1055_p4;
wire   [4:0] add_ln32_1_fu_1154_p2;
wire   [6:0] tmp_9_fu_1182_p3;
wire   [8:0] tmp_fu_1174_p3;
wire   [8:0] zext_ln78_fu_1190_p1;
wire   [0:0] icmp_ln38_fu_1241_p2;
wire   [0:0] xor_ln32_fu_1236_p2;
wire   [5:0] add_ln32_fu_1148_p2;
wire   [5:0] select_ln32_1_fu_1160_p3;
wire   [0:0] and_ln32_fu_1247_p2;
wire   [0:0] or_ln35_fu_1271_p2;
wire   [5:0] indvars_iv_next31_dup_fu_1265_p2;
wire   [4:0] add_ln35_fu_1260_p2;
wire   [8:0] add_ln78_fu_1194_p2;
wire   [8:0] zext_ln78_1_fu_1303_p1;
wire   [8:0] add_ln78_1_fu_1307_p2;
wire   [5:0] p_mid1_fu_1321_p2;
wire   [5:0] select_ln32_3_fu_1200_p3;
wire   [5:0] select_ln35_3_fu_1327_p3;
wire   [5:0] indvars_iv_next31_mid1_fu_1339_p2;
wire   [5:0] select_ln32_4_fu_1206_p3;
wire   [5:0] select_ln35_4_fu_1345_p3;
wire   [5:0] p_mid163_fu_1357_p2;
wire   [5:0] select_ln32_5_fu_1212_p3;
wire   [5:0] select_ln35_5_fu_1363_p3;
wire   [5:0] p_mid165_fu_1375_p2;
wire   [5:0] select_ln32_6_fu_1218_p3;
wire   [5:0] select_ln35_6_fu_1381_p3;
wire   [5:0] p_mid167_fu_1393_p2;
wire   [5:0] select_ln32_7_fu_1224_p3;
wire   [5:0] select_ln35_7_fu_1399_p3;
wire   [5:0] p_mid169_fu_1411_p2;
wire   [5:0] select_ln32_8_fu_1230_p3;
wire   [5:0] select_ln35_8_fu_1417_p3;
wire   [4:0] tmp_7_fu_1433_p3;
wire   [5:0] zext_ln1118_1_fu_1441_p1;
wire   [5:0] zext_ln1118_fu_1429_p1;
wire   [5:0] sub_ln1118_fu_1445_p2;
wire   [6:0] zext_ln1118_2_fu_1461_p1;
wire   [6:0] add_ln1118_fu_1465_p2;
wire   [6:0] shl_ln1118_fu_1470_p2;
wire   [6:0] zext_ln1118_3_fu_1508_p1;
wire   [6:0] add_ln1118_1_fu_1512_p2;
wire   [6:0] shl_ln1118_1_fu_1517_p2;
wire   [6:0] sub_ln1118_2_fu_1523_p2;
wire   [6:0] sub_ln1118_1_fu_1476_p2;
wire   [6:0] add_ln46_4_fu_1547_p2;
wire   [5:0] i_cast_fu_1563_p1;
wire   [5:0] empty_47_fu_1566_p2;
wire   [5:0] mul_ln1116_fu_1575_p0;
wire   [6:0] mul_ln1116_fu_1575_p1;
wire   [6:0] add_ln46_5_fu_1581_p2;
wire   [6:0] add_ln46_6_fu_1597_p2;
wire   [11:0] add_ln1116_fu_1613_p2;
wire   [11:0] add_ln1116_1_fu_1624_p2;
wire   [6:0] add_ln46_7_fu_1635_p2;
wire   [6:0] add_ln46_8_fu_1651_p2;
wire   [11:0] add_ln1116_2_fu_1675_p2;
wire   [11:0] add_ln1116_3_fu_1686_p2;
wire   [6:0] add_ln46_9_fu_1702_p2;
wire   [11:0] add_ln1116_4_fu_1718_p2;
wire   [11:0] add_ln1116_5_fu_1729_p2;
wire   [15:0] trunc_ln708_2_fu_1799_p4;
wire   [15:0] add_ln703_1_fu_1833_p2;
wire   [15:0] trunc_ln708_6_fu_1869_p4;
wire   [15:0] add_ln703_4_fu_1882_p2;
wire   [15:0] add_ln703_3_fu_1878_p2;
wire   [15:0] add_ln703_6_fu_1893_p2;
wire   [1:0] tmp_2_fu_1906_p5;
wire   [15:0] tmp_2_fu_1906_p6;
wire   [7:0] add_ln35_1_fu_1931_p2;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [11:0] mul_ln1116_fu_1575_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

tiled_conv_mux_73_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_73_16_1_1_U18(
    .din0(W_buf_q1),
    .din1(W_buf6_q1),
    .din2(W_buf7_q1),
    .din3(W_buf8_q1),
    .din4(W_buf9_q1),
    .din5(W_buf10_q1),
    .din6(W_buf11_q1),
    .din7(select_ln46_reg_2173),
    .dout(grp_fu_1006_p9)
);

tiled_conv_mux_73_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
mux_73_16_1_1_U19(
    .din0(W_buf_q0),
    .din1(W_buf6_q0),
    .din2(W_buf7_q0),
    .din3(W_buf8_q0),
    .din4(W_buf9_q0),
    .din5(W_buf10_q0),
    .din6(W_buf11_q0),
    .din7(grp_fu_1025_p8),
    .dout(grp_fu_1025_p9)
);

tiled_conv_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U20(
    .din0(X_buf_q0),
    .din1(X_buf4_q0),
    .din2(X_buf5_q0),
    .din3(grp_fu_1044_p4),
    .dout(grp_fu_1044_p5)
);

tiled_conv_mux_32_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_32_16_1_1_U21(
    .din0(X_buf_q1),
    .din1(X_buf4_q1),
    .din2(X_buf5_q1),
    .din3(grp_fu_1055_p4),
    .dout(grp_fu_1055_p5)
);

tiled_conv_mul_6ns_7ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 12 ))
mul_6ns_7ns_12_1_1_U22(
    .din0(mul_ln1116_fu_1575_p0),
    .din1(mul_ln1116_fu_1575_p1),
    .dout(mul_ln1116_fu_1575_p2)
);

tiled_conv_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U23(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(tmp_2_fu_1906_p5),
    .dout(tmp_2_fu_1906_p6)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U24(
    .din0(reg_1066),
    .din1(reg_1074),
    .dout(mul_ln1115_fu_1944_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U25(
    .din0(reg_1070),
    .din1(reg_1078),
    .dout(mul_ln1115_1_fu_1950_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U26(
    .din0(reg_1082),
    .din1(reg_1074),
    .dout(mul_ln1115_2_fu_1956_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U27(
    .din0(tmp_s_reg_2480),
    .din1(reg_1078),
    .dout(mul_ln1115_3_fu_1962_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U28(
    .din0(reg_1070),
    .din1(reg_1078),
    .dout(mul_ln1115_4_fu_1968_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U29(
    .din0(reg_1066),
    .din1(reg_1074),
    .dout(mul_ln1115_5_fu_1974_p2)
);

tiled_conv_mul_mul_16s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_mul_16s_16s_29_1_1_U30(
    .din0(reg_1082),
    .din1(reg_1074),
    .dout(mul_ln1115_6_fu_1980_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln46_reg_2159_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        accu_V_reg_994 <= add_ln703_7_fu_1897_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        accu_V_reg_994 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        chan_reg_971 <= select_ln46_2_reg_2443;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        chan_reg_971 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        h_reg_901 <= select_ln32_9_reg_2071;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        h_reg_901 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_983 <= add_ln49_reg_2485;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_983 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        indvar_flatten112_reg_878 <= add_ln32_2_reg_2006;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten112_reg_878 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        indvar_flatten71_reg_913 <= select_ln35_9_fu_1937_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten71_reg_913 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_960 <= add_ln46_3_reg_2154;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten_reg_960 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        kernel_reg_948 <= add_ln38_fu_1926_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        kernel_reg_948 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        oh_reg_889 <= select_ln32_2_reg_2066;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        oh_reg_889 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ow_reg_925 <= select_ln35_2_reg_2093;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ow_reg_925 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        w_reg_936 <= select_ln35_1_reg_2083;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_reg_936 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Y_buf1_addr_reg_2103 <= zext_ln78_2_fu_1313_p1;
        Y_buf2_addr_reg_2108 <= zext_ln78_2_fu_1313_p1;
        Y_buf3_addr_reg_2113 <= zext_ln78_2_fu_1313_p1;
        Y_buf_addr_reg_2098 <= zext_ln78_2_fu_1313_p1;
        select_ln32_2_reg_2066 <= select_ln32_2_fu_1167_p3;
        select_ln32_9_reg_2071 <= select_ln32_9_fu_1253_p3;
        select_ln35_1_reg_2083 <= select_ln35_1_fu_1284_p3;
        select_ln35_2_reg_2093 <= select_ln35_2_fu_1296_p3;
        select_ln35_3_cast_reg_2118[5 : 1] <= select_ln35_3_cast_fu_1335_p1[5 : 1];
        select_ln35_4_cast_reg_2123[5 : 0] <= select_ln35_4_cast_fu_1353_p1[5 : 0];
        select_ln35_5_cast_reg_2128[5 : 0] <= select_ln35_5_cast_fu_1371_p1[5 : 0];
        select_ln35_6_cast_reg_2133[5 : 0] <= select_ln35_6_cast_fu_1389_p1[5 : 0];
        select_ln35_7_cast_reg_2138[5 : 0] <= select_ln35_7_cast_fu_1407_p1[5 : 0];
        select_ln35_reg_2077 <= select_ln35_fu_1276_p3;
        sext_ln38_reg_2148 <= sext_ln38_fu_1451_p1;
        zext_ln35_1_reg_2143[5 : 0] <= zext_ln35_1_fu_1425_p1[5 : 0];
        zext_ln35_reg_2088[5 : 0] <= zext_ln35_fu_1292_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1116_6_reg_2535 <= add_ln1116_6_fu_1740_p2;
        mul_ln1115_1_reg_2565 <= mul_ln1115_1_fu_1950_p2;
        mul_ln1115_reg_2560 <= mul_ln1115_fu_1944_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln32_2_reg_2006 <= add_ln32_2_fu_1086_p2;
        empty_42_reg_2021 <= empty_42_fu_1104_p2;
        empty_43_reg_2026 <= empty_43_fu_1110_p2;
        empty_44_reg_2031 <= empty_44_fu_1116_p2;
        empty_45_reg_2036 <= empty_45_fu_1122_p2;
        empty_reg_2011[5 : 1] <= empty_fu_1092_p2[5 : 1];
        indvars_iv_next31_reg_2016 <= indvars_iv_next31_fu_1098_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln46_3_reg_2154 <= add_ln46_3_fu_1455_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_fu_1482_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln46_reg_2163 <= add_ln46_fu_1488_p2;
        icmp_ln49_reg_2168 <= icmp_ln49_fu_1494_p2;
        select_ln46_1_reg_2181 <= select_ln46_1_fu_1529_p3;
        select_ln46_reg_2173 <= select_ln46_fu_1500_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln49_reg_2485 <= add_ln49_fu_1697_p2;
        select_ln46_2_reg_2443 <= select_ln46_2_fu_1667_p3;
        tmp_s_reg_2480 <= grp_fu_1006_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_reg_2159_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln703_2_reg_2620 <= add_ln703_2_fu_1838_p2;
        mul_ln1115_4_reg_2610 <= mul_ln1115_4_fu_1968_p2;
        mul_ln1115_5_reg_2615 <= mul_ln1115_5_fu_1974_p2;
        trunc_ln708_3_reg_2605 <= {{mul_ln1115_3_reg_2600[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_reg_2159_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_5_reg_2640 <= add_ln703_5_fu_1887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1128_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln35_reg_2044 <= icmp_ln35_fu_1134_p2;
        select_ln32_reg_2060 <= select_ln32_fu_1140_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln46_reg_2159 <= icmp_ln46_fu_1482_p2;
        icmp_ln46_reg_2159_pp0_iter1_reg <= icmp_ln46_reg_2159;
        icmp_ln46_reg_2159_pp0_iter2_reg <= icmp_ln46_reg_2159_pp0_iter1_reg;
        select_ln46_reg_2173_pp0_iter1_reg <= select_ln46_reg_2173;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_reg_2159_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_ln1115_2_reg_2595 <= mul_ln1115_2_fu_1956_p2;
        mul_ln1115_3_reg_2600 <= mul_ln1115_3_fu_1962_p2;
        trunc_ln4_reg_2585 <= {{mul_ln1115_reg_2560[28:13]}};
        trunc_ln708_1_reg_2590 <= {{mul_ln1115_1_reg_2565[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_reg_2159_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_ln1115_6_reg_2635 <= mul_ln1115_6_fu_1980_p2;
        trunc_ln708_4_reg_2625 <= {{mul_ln1115_4_reg_2610[28:13]}};
        trunc_ln708_5_reg_2630 <= {{mul_ln1115_5_reg_2615[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_ln1116_reg_2262 <= mul_ln1116_fu_1575_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_1066 <= grp_fu_1006_p9;
        reg_1070 <= grp_fu_1025_p9;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln46_reg_2159_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln46_reg_2159_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_1074 <= grp_fu_1044_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln46_reg_2159_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_1078 <= grp_fu_1055_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln46_reg_2159_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_1082 <= grp_fu_1025_p9;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        W_buf10_address0 = zext_ln1118_10_fu_1707_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf10_address0 = zext_ln1118_8_fu_1640_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf10_address0 = zext_ln1118_6_fu_1586_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf10_address0 = zext_ln1118_5_fu_1552_p1;
    end else begin
        W_buf10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            W_buf10_address1 = zext_ln1118_9_fu_1656_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            W_buf10_address1 = zext_ln1118_7_fu_1602_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            W_buf10_address1 = zext_ln1118_4_fu_1537_p1;
        end else begin
            W_buf10_address1 = 'bx;
        end
    end else begin
        W_buf10_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf10_ce0 = 1'b1;
    end else begin
        W_buf10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf10_ce1 = 1'b1;
    end else begin
        W_buf10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        W_buf11_address0 = zext_ln1118_10_fu_1707_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf11_address0 = zext_ln1118_8_fu_1640_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf11_address0 = zext_ln1118_6_fu_1586_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf11_address0 = zext_ln1118_5_fu_1552_p1;
    end else begin
        W_buf11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            W_buf11_address1 = zext_ln1118_9_fu_1656_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            W_buf11_address1 = zext_ln1118_7_fu_1602_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            W_buf11_address1 = zext_ln1118_4_fu_1537_p1;
        end else begin
            W_buf11_address1 = 'bx;
        end
    end else begin
        W_buf11_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf11_ce0 = 1'b1;
    end else begin
        W_buf11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf11_ce1 = 1'b1;
    end else begin
        W_buf11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        W_buf6_address0 = zext_ln1118_10_fu_1707_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf6_address0 = zext_ln1118_8_fu_1640_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf6_address0 = zext_ln1118_6_fu_1586_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf6_address0 = zext_ln1118_5_fu_1552_p1;
    end else begin
        W_buf6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            W_buf6_address1 = zext_ln1118_9_fu_1656_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            W_buf6_address1 = zext_ln1118_7_fu_1602_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            W_buf6_address1 = zext_ln1118_4_fu_1537_p1;
        end else begin
            W_buf6_address1 = 'bx;
        end
    end else begin
        W_buf6_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf6_ce0 = 1'b1;
    end else begin
        W_buf6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf6_ce1 = 1'b1;
    end else begin
        W_buf6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        W_buf7_address0 = zext_ln1118_10_fu_1707_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf7_address0 = zext_ln1118_8_fu_1640_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf7_address0 = zext_ln1118_6_fu_1586_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf7_address0 = zext_ln1118_5_fu_1552_p1;
    end else begin
        W_buf7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            W_buf7_address1 = zext_ln1118_9_fu_1656_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            W_buf7_address1 = zext_ln1118_7_fu_1602_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            W_buf7_address1 = zext_ln1118_4_fu_1537_p1;
        end else begin
            W_buf7_address1 = 'bx;
        end
    end else begin
        W_buf7_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf7_ce0 = 1'b1;
    end else begin
        W_buf7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf7_ce1 = 1'b1;
    end else begin
        W_buf7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        W_buf8_address0 = zext_ln1118_10_fu_1707_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf8_address0 = zext_ln1118_8_fu_1640_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf8_address0 = zext_ln1118_6_fu_1586_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf8_address0 = zext_ln1118_5_fu_1552_p1;
    end else begin
        W_buf8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            W_buf8_address1 = zext_ln1118_9_fu_1656_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            W_buf8_address1 = zext_ln1118_7_fu_1602_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            W_buf8_address1 = zext_ln1118_4_fu_1537_p1;
        end else begin
            W_buf8_address1 = 'bx;
        end
    end else begin
        W_buf8_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf8_ce0 = 1'b1;
    end else begin
        W_buf8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf8_ce1 = 1'b1;
    end else begin
        W_buf8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        W_buf9_address0 = zext_ln1118_10_fu_1707_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf9_address0 = zext_ln1118_8_fu_1640_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf9_address0 = zext_ln1118_6_fu_1586_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf9_address0 = zext_ln1118_5_fu_1552_p1;
    end else begin
        W_buf9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            W_buf9_address1 = zext_ln1118_9_fu_1656_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            W_buf9_address1 = zext_ln1118_7_fu_1602_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            W_buf9_address1 = zext_ln1118_4_fu_1537_p1;
        end else begin
            W_buf9_address1 = 'bx;
        end
    end else begin
        W_buf9_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf9_ce0 = 1'b1;
    end else begin
        W_buf9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf9_ce1 = 1'b1;
    end else begin
        W_buf9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        W_buf_address0 = zext_ln1118_10_fu_1707_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf_address0 = zext_ln1118_8_fu_1640_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf_address0 = zext_ln1118_6_fu_1586_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        W_buf_address0 = zext_ln1118_5_fu_1552_p1;
    end else begin
        W_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            W_buf_address1 = zext_ln1118_9_fu_1656_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            W_buf_address1 = zext_ln1118_7_fu_1602_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            W_buf_address1 = zext_ln1118_4_fu_1537_p1;
        end else begin
            W_buf_address1 = 'bx;
        end
    end else begin
        W_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf_ce0 = 1'b1;
    end else begin
        W_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        W_buf_ce1 = 1'b1;
    end else begin
        W_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        X_buf4_address0 = zext_ln1116_7_fu_1760_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        X_buf4_address0 = zext_ln1116_6_fu_1733_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf4_address0 = zext_ln1116_3_fu_1679_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf4_address0 = zext_ln1116_1_fu_1617_p1;
    end else begin
        X_buf4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        X_buf4_address1 = zext_ln1116_5_fu_1722_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf4_address1 = zext_ln1116_4_fu_1690_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf4_address1 = zext_ln1116_2_fu_1628_p1;
    end else begin
        X_buf4_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        X_buf4_ce0 = 1'b1;
    end else begin
        X_buf4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        X_buf4_ce1 = 1'b1;
    end else begin
        X_buf4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        X_buf5_address0 = zext_ln1116_7_fu_1760_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        X_buf5_address0 = zext_ln1116_6_fu_1733_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf5_address0 = zext_ln1116_3_fu_1679_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf5_address0 = zext_ln1116_1_fu_1617_p1;
    end else begin
        X_buf5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        X_buf5_address1 = zext_ln1116_5_fu_1722_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf5_address1 = zext_ln1116_4_fu_1690_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf5_address1 = zext_ln1116_2_fu_1628_p1;
    end else begin
        X_buf5_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        X_buf5_ce0 = 1'b1;
    end else begin
        X_buf5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        X_buf5_ce1 = 1'b1;
    end else begin
        X_buf5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        X_buf_address0 = zext_ln1116_7_fu_1760_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        X_buf_address0 = zext_ln1116_6_fu_1733_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf_address0 = zext_ln1116_3_fu_1679_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf_address0 = zext_ln1116_1_fu_1617_p1;
    end else begin
        X_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        X_buf_address1 = zext_ln1116_5_fu_1722_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf_address1 = zext_ln1116_4_fu_1690_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        X_buf_address1 = zext_ln1116_2_fu_1628_p1;
    end else begin
        X_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        X_buf_ce0 = 1'b1;
    end else begin
        X_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        X_buf_ce1 = 1'b1;
    end else begin
        X_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        Y_buf1_ce0 = 1'b1;
    end else begin
        Y_buf1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln703_fu_1903_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        Y_buf1_we0 = 1'b1;
    end else begin
        Y_buf1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        Y_buf2_ce0 = 1'b1;
    end else begin
        Y_buf2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln703_fu_1903_p1 == 2'd2) & (1'b1 == ap_CS_fsm_state14))) begin
        Y_buf2_we0 = 1'b1;
    end else begin
        Y_buf2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        Y_buf3_ce0 = 1'b1;
    end else begin
        Y_buf3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln703_fu_1903_p1 == 2'd3) & (1'b1 == ap_CS_fsm_state14))) begin
        Y_buf3_we0 = 1'b1;
    end else begin
        Y_buf3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        Y_buf_ce0 = 1'b1;
    end else begin
        Y_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln703_fu_1903_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        Y_buf_we0 = 1'b1;
    end else begin
        Y_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln46_fu_1482_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((icmp_ln32_fu_1128_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_chan_phi_fu_975_p4 = select_ln46_2_reg_2443;
    end else begin
        ap_phi_mux_chan_phi_fu_975_p4 = chan_reg_971;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_987_p4 = add_ln49_reg_2485;
    end else begin
        ap_phi_mux_i_phi_fu_987_p4 = i_reg_983;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln46_reg_2159 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_964_p4 = add_ln46_3_reg_2154;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_964_p4 = indvar_flatten_reg_960;
    end
end

always @ (*) begin
    if (((icmp_ln32_fu_1128_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_1025_p8 = select_ln46_reg_2173_pp0_iter1_reg;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_1025_p8 = select_ln46_reg_2173;
    end else begin
        grp_fu_1025_p8 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_1044_p4 = select_ln46_2_reg_2443;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_1044_p4 = select_ln46_2_fu_1667_p3;
    end else begin
        grp_fu_1044_p4 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_1055_p4 = select_ln46_2_reg_2443;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_1055_p4 = select_ln46_2_fu_1667_p3;
    end else begin
        grp_fu_1055_p4 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln32_fu_1128_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln46_fu_1482_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln46_fu_1482_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Y_buf1_address0 = Y_buf1_addr_reg_2103;

assign Y_buf1_d0 = add_ln703_fu_1916_p2;

assign Y_buf2_address0 = Y_buf2_addr_reg_2108;

assign Y_buf2_d0 = add_ln703_fu_1916_p2;

assign Y_buf3_address0 = Y_buf3_addr_reg_2113;

assign Y_buf3_d0 = add_ln703_fu_1916_p2;

assign Y_buf_address0 = Y_buf_addr_reg_2098;

assign Y_buf_d0 = add_ln703_fu_1916_p2;

assign add_ln1116_1_fu_1624_p2 = (mul_ln1116_reg_2262 + select_ln35_3_cast_reg_2118);

assign add_ln1116_2_fu_1675_p2 = (mul_ln1116_reg_2262 + select_ln35_4_cast_reg_2123);

assign add_ln1116_3_fu_1686_p2 = (mul_ln1116_reg_2262 + select_ln35_5_cast_reg_2128);

assign add_ln1116_4_fu_1718_p2 = (mul_ln1116_reg_2262 + select_ln35_6_cast_reg_2133);

assign add_ln1116_5_fu_1729_p2 = (mul_ln1116_reg_2262 + select_ln35_7_cast_reg_2138);

assign add_ln1116_6_fu_1740_p2 = (mul_ln1116_reg_2262 + zext_ln35_1_reg_2143);

assign add_ln1116_fu_1613_p2 = (mul_ln1116_reg_2262 + zext_ln35_reg_2088);

assign add_ln1118_1_fu_1512_p2 = ($signed(sext_ln38_reg_2148) + $signed(zext_ln1118_3_fu_1508_p1));

assign add_ln1118_fu_1465_p2 = ($signed(sext_ln38_reg_2148) + $signed(zext_ln1118_2_fu_1461_p1));

assign add_ln32_1_fu_1154_p2 = (oh_reg_889 + 5'd1);

assign add_ln32_2_fu_1086_p2 = (indvar_flatten112_reg_878 + 11'd1);

assign add_ln32_fu_1148_p2 = (h_reg_901 + 6'd2);

assign add_ln35_1_fu_1931_p2 = (indvar_flatten71_reg_913 + 8'd1);

assign add_ln35_fu_1260_p2 = (select_ln32_reg_2060 + 5'd1);

assign add_ln38_fu_1926_p2 = (select_ln35_reg_2077 + 3'd1);

assign add_ln46_3_fu_1455_p2 = (ap_phi_mux_indvar_flatten_phi_fu_964_p4 + 5'd1);

assign add_ln46_4_fu_1547_p2 = (select_ln46_1_reg_2181 + 7'd1);

assign add_ln46_5_fu_1581_p2 = (select_ln46_1_reg_2181 + 7'd2);

assign add_ln46_6_fu_1597_p2 = (select_ln46_1_reg_2181 + 7'd3);

assign add_ln46_7_fu_1635_p2 = (select_ln46_1_reg_2181 + 7'd4);

assign add_ln46_8_fu_1651_p2 = (select_ln46_1_reg_2181 + 7'd5);

assign add_ln46_9_fu_1702_p2 = (select_ln46_1_reg_2181 + 7'd6);

assign add_ln46_fu_1488_p2 = (ap_phi_mux_chan_phi_fu_975_p4 + 2'd1);

assign add_ln49_fu_1697_p2 = (select_ln46_reg_2173 + 3'd1);

assign add_ln703_1_fu_1833_p2 = (trunc_ln708_1_reg_2590 + trunc_ln708_2_fu_1799_p4);

assign add_ln703_2_fu_1838_p2 = (add_ln703_1_fu_1833_p2 + trunc_ln4_reg_2585);

assign add_ln703_3_fu_1878_p2 = (trunc_ln708_3_reg_2605 + trunc_ln708_4_reg_2625);

assign add_ln703_4_fu_1882_p2 = (trunc_ln708_5_reg_2630 + trunc_ln708_6_fu_1869_p4);

assign add_ln703_5_fu_1887_p2 = (add_ln703_4_fu_1882_p2 + add_ln703_3_fu_1878_p2);

assign add_ln703_6_fu_1893_p2 = (add_ln703_5_reg_2640 + add_ln703_2_reg_2620);

assign add_ln703_7_fu_1897_p2 = (accu_V_reg_994 + add_ln703_6_fu_1893_p2);

assign add_ln703_fu_1916_p2 = (tmp_2_fu_1906_p6 + accu_V_reg_994);

assign add_ln78_1_fu_1307_p2 = (add_ln78_fu_1194_p2 + zext_ln78_1_fu_1303_p1);

assign add_ln78_fu_1194_p2 = (tmp_fu_1174_p3 + zext_ln78_fu_1190_p1);

assign and_ln32_fu_1247_p2 = (xor_ln32_fu_1236_p2 & icmp_ln38_fu_1241_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign empty_42_fu_1104_p2 = (w_reg_936 + 6'd3);

assign empty_43_fu_1110_p2 = (w_reg_936 + 6'd4);

assign empty_44_fu_1116_p2 = (w_reg_936 + 6'd5);

assign empty_45_fu_1122_p2 = (w_reg_936 + 6'd6);

assign empty_47_fu_1566_p2 = (i_cast_fu_1563_p1 + select_ln32_9_reg_2071);

assign empty_fu_1092_p2 = (w_reg_936 | 6'd1);

assign i_cast_fu_1563_p1 = select_ln46_reg_2173;

assign icmp_ln32_fu_1128_p2 = ((indvar_flatten112_reg_878 == 11'd1840) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_1134_p2 = ((indvar_flatten71_reg_913 == 8'd80) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_1241_p2 = ((kernel_reg_948 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1482_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_964_p4 == 5'd21) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_1494_p2 = ((ap_phi_mux_i_phi_fu_987_p4 == 3'd7) ? 1'b1 : 1'b0);

assign indvars_iv_next31_dup_fu_1265_p2 = (select_ln32_1_fu_1160_p3 + 6'd2);

assign indvars_iv_next31_fu_1098_p2 = (w_reg_936 + 6'd2);

assign indvars_iv_next31_mid1_fu_1339_p2 = (select_ln32_1_fu_1160_p3 + 6'd4);

assign mul_ln1116_fu_1575_p0 = mul_ln1116_fu_1575_p00;

assign mul_ln1116_fu_1575_p00 = empty_47_fu_1566_p2;

assign mul_ln1116_fu_1575_p1 = 12'd46;

assign or_ln35_fu_1271_p2 = (icmp_ln35_reg_2044 | and_ln32_fu_1247_p2);

assign p_mid163_fu_1357_p2 = (select_ln32_1_fu_1160_p3 + 6'd5);

assign p_mid165_fu_1375_p2 = (select_ln32_1_fu_1160_p3 + 6'd6);

assign p_mid167_fu_1393_p2 = (select_ln32_1_fu_1160_p3 + 6'd7);

assign p_mid169_fu_1411_p2 = (select_ln32_1_fu_1160_p3 + 6'd8);

assign p_mid1_fu_1321_p2 = (indvars_iv_next31_dup_fu_1265_p2 | 6'd1);

assign select_ln32_1_fu_1160_p3 = ((icmp_ln35_reg_2044[0:0] == 1'b1) ? 6'd0 : w_reg_936);

assign select_ln32_2_fu_1167_p3 = ((icmp_ln35_reg_2044[0:0] == 1'b1) ? add_ln32_1_fu_1154_p2 : oh_reg_889);

assign select_ln32_3_fu_1200_p3 = ((icmp_ln35_reg_2044[0:0] == 1'b1) ? 6'd1 : empty_reg_2011);

assign select_ln32_4_fu_1206_p3 = ((icmp_ln35_reg_2044[0:0] == 1'b1) ? 6'd2 : indvars_iv_next31_reg_2016);

assign select_ln32_5_fu_1212_p3 = ((icmp_ln35_reg_2044[0:0] == 1'b1) ? 6'd3 : empty_42_reg_2021);

assign select_ln32_6_fu_1218_p3 = ((icmp_ln35_reg_2044[0:0] == 1'b1) ? 6'd4 : empty_43_reg_2026);

assign select_ln32_7_fu_1224_p3 = ((icmp_ln35_reg_2044[0:0] == 1'b1) ? 6'd5 : empty_44_reg_2031);

assign select_ln32_8_fu_1230_p3 = ((icmp_ln35_reg_2044[0:0] == 1'b1) ? 6'd6 : empty_45_reg_2036);

assign select_ln32_9_fu_1253_p3 = ((icmp_ln35_reg_2044[0:0] == 1'b1) ? add_ln32_fu_1148_p2 : h_reg_901);

assign select_ln32_fu_1140_p3 = ((icmp_ln35_fu_1134_p2[0:0] == 1'b1) ? 5'd0 : ow_reg_925);

assign select_ln35_1_fu_1284_p3 = ((and_ln32_fu_1247_p2[0:0] == 1'b1) ? indvars_iv_next31_dup_fu_1265_p2 : select_ln32_1_fu_1160_p3);

assign select_ln35_2_fu_1296_p3 = ((and_ln32_fu_1247_p2[0:0] == 1'b1) ? add_ln35_fu_1260_p2 : select_ln32_reg_2060);

assign select_ln35_3_cast_fu_1335_p1 = select_ln35_3_fu_1327_p3;

assign select_ln35_3_fu_1327_p3 = ((and_ln32_fu_1247_p2[0:0] == 1'b1) ? p_mid1_fu_1321_p2 : select_ln32_3_fu_1200_p3);

assign select_ln35_4_cast_fu_1353_p1 = select_ln35_4_fu_1345_p3;

assign select_ln35_4_fu_1345_p3 = ((and_ln32_fu_1247_p2[0:0] == 1'b1) ? indvars_iv_next31_mid1_fu_1339_p2 : select_ln32_4_fu_1206_p3);

assign select_ln35_5_cast_fu_1371_p1 = select_ln35_5_fu_1363_p3;

assign select_ln35_5_fu_1363_p3 = ((and_ln32_fu_1247_p2[0:0] == 1'b1) ? p_mid163_fu_1357_p2 : select_ln32_5_fu_1212_p3);

assign select_ln35_6_cast_fu_1389_p1 = select_ln35_6_fu_1381_p3;

assign select_ln35_6_fu_1381_p3 = ((and_ln32_fu_1247_p2[0:0] == 1'b1) ? p_mid165_fu_1375_p2 : select_ln32_6_fu_1218_p3);

assign select_ln35_7_cast_fu_1407_p1 = select_ln35_7_fu_1399_p3;

assign select_ln35_7_fu_1399_p3 = ((and_ln32_fu_1247_p2[0:0] == 1'b1) ? p_mid167_fu_1393_p2 : select_ln32_7_fu_1224_p3);

assign select_ln35_8_fu_1417_p3 = ((and_ln32_fu_1247_p2[0:0] == 1'b1) ? p_mid169_fu_1411_p2 : select_ln32_8_fu_1230_p3);

assign select_ln35_9_fu_1937_p3 = ((icmp_ln35_reg_2044[0:0] == 1'b1) ? 8'd1 : add_ln35_1_fu_1931_p2);

assign select_ln35_fu_1276_p3 = ((or_ln35_fu_1271_p2[0:0] == 1'b1) ? 3'd0 : kernel_reg_948);

assign select_ln46_1_fu_1529_p3 = ((icmp_ln49_fu_1494_p2[0:0] == 1'b1) ? sub_ln1118_2_fu_1523_p2 : sub_ln1118_1_fu_1476_p2);

assign select_ln46_2_fu_1667_p3 = ((icmp_ln49_reg_2168[0:0] == 1'b1) ? add_ln46_reg_2163 : chan_reg_971);

assign select_ln46_fu_1500_p3 = ((icmp_ln49_fu_1494_p2[0:0] == 1'b1) ? 3'd0 : ap_phi_mux_i_phi_fu_987_p4);

assign sext_ln38_fu_1451_p1 = $signed(sub_ln1118_fu_1445_p2);

assign shl_ln1118_1_fu_1517_p2 = add_ln1118_1_fu_1512_p2 << 7'd3;

assign shl_ln1118_fu_1470_p2 = add_ln1118_fu_1465_p2 << 7'd3;

assign sub_ln1118_1_fu_1476_p2 = (shl_ln1118_fu_1470_p2 - add_ln1118_fu_1465_p2);

assign sub_ln1118_2_fu_1523_p2 = (shl_ln1118_1_fu_1517_p2 - add_ln1118_1_fu_1512_p2);

assign sub_ln1118_fu_1445_p2 = (zext_ln1118_1_fu_1441_p1 - zext_ln1118_fu_1429_p1);

assign tmp_2_fu_1906_p5 = select_ln35_reg_2077[1:0];

assign tmp_7_fu_1433_p3 = {{select_ln35_fu_1276_p3}, {2'd0}};

assign tmp_9_fu_1182_p3 = {{select_ln32_2_fu_1167_p3}, {2'd0}};

assign tmp_fu_1174_p3 = {{select_ln32_2_fu_1167_p3}, {4'd0}};

assign trunc_ln703_fu_1903_p1 = select_ln35_reg_2077[1:0];

assign trunc_ln708_2_fu_1799_p4 = {{mul_ln1115_2_reg_2595[28:13]}};

assign trunc_ln708_6_fu_1869_p4 = {{mul_ln1115_6_reg_2635[28:13]}};

assign xor_ln32_fu_1236_p2 = (icmp_ln35_reg_2044 ^ 1'd1);

assign zext_ln1116_1_fu_1617_p1 = add_ln1116_fu_1613_p2;

assign zext_ln1116_2_fu_1628_p1 = add_ln1116_1_fu_1624_p2;

assign zext_ln1116_3_fu_1679_p1 = add_ln1116_2_fu_1675_p2;

assign zext_ln1116_4_fu_1690_p1 = add_ln1116_3_fu_1686_p2;

assign zext_ln1116_5_fu_1722_p1 = add_ln1116_4_fu_1718_p2;

assign zext_ln1116_6_fu_1733_p1 = add_ln1116_5_fu_1729_p2;

assign zext_ln1116_7_fu_1760_p1 = add_ln1116_6_reg_2535;

assign zext_ln1118_10_fu_1707_p1 = add_ln46_9_fu_1702_p2;

assign zext_ln1118_1_fu_1441_p1 = tmp_7_fu_1433_p3;

assign zext_ln1118_2_fu_1461_p1 = ap_phi_mux_chan_phi_fu_975_p4;

assign zext_ln1118_3_fu_1508_p1 = add_ln46_fu_1488_p2;

assign zext_ln1118_4_fu_1537_p1 = select_ln46_1_reg_2181;

assign zext_ln1118_5_fu_1552_p1 = add_ln46_4_fu_1547_p2;

assign zext_ln1118_6_fu_1586_p1 = add_ln46_5_fu_1581_p2;

assign zext_ln1118_7_fu_1602_p1 = add_ln46_6_fu_1597_p2;

assign zext_ln1118_8_fu_1640_p1 = add_ln46_7_fu_1635_p2;

assign zext_ln1118_9_fu_1656_p1 = add_ln46_8_fu_1651_p2;

assign zext_ln1118_fu_1429_p1 = select_ln35_fu_1276_p3;

assign zext_ln35_1_fu_1425_p1 = select_ln35_8_fu_1417_p3;

assign zext_ln35_fu_1292_p1 = select_ln35_1_fu_1284_p3;

assign zext_ln78_1_fu_1303_p1 = select_ln35_2_fu_1296_p3;

assign zext_ln78_2_fu_1313_p1 = add_ln78_1_fu_1307_p2;

assign zext_ln78_fu_1190_p1 = tmp_9_fu_1182_p3;

always @ (posedge ap_clk) begin
    empty_reg_2011[0] <= 1'b1;
    zext_ln35_reg_2088[11:6] <= 6'b000000;
    select_ln35_3_cast_reg_2118[0] <= 1'b1;
    select_ln35_3_cast_reg_2118[11:6] <= 6'b000000;
    select_ln35_4_cast_reg_2123[11:6] <= 6'b000000;
    select_ln35_5_cast_reg_2128[11:6] <= 6'b000000;
    select_ln35_6_cast_reg_2133[11:6] <= 6'b000000;
    select_ln35_7_cast_reg_2138[11:6] <= 6'b000000;
    zext_ln35_1_reg_2143[11:6] <= 6'b000000;
end

endmodule //tiled_conv_conv_7x7
