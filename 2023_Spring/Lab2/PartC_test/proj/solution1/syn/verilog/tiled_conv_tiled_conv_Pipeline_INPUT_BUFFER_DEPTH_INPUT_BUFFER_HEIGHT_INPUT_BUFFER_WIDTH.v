// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tiled_conv_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_fm_AWVALID,
        m_axi_fm_AWREADY,
        m_axi_fm_AWADDR,
        m_axi_fm_AWID,
        m_axi_fm_AWLEN,
        m_axi_fm_AWSIZE,
        m_axi_fm_AWBURST,
        m_axi_fm_AWLOCK,
        m_axi_fm_AWCACHE,
        m_axi_fm_AWPROT,
        m_axi_fm_AWQOS,
        m_axi_fm_AWREGION,
        m_axi_fm_AWUSER,
        m_axi_fm_WVALID,
        m_axi_fm_WREADY,
        m_axi_fm_WDATA,
        m_axi_fm_WSTRB,
        m_axi_fm_WLAST,
        m_axi_fm_WID,
        m_axi_fm_WUSER,
        m_axi_fm_ARVALID,
        m_axi_fm_ARREADY,
        m_axi_fm_ARADDR,
        m_axi_fm_ARID,
        m_axi_fm_ARLEN,
        m_axi_fm_ARSIZE,
        m_axi_fm_ARBURST,
        m_axi_fm_ARLOCK,
        m_axi_fm_ARCACHE,
        m_axi_fm_ARPROT,
        m_axi_fm_ARQOS,
        m_axi_fm_ARREGION,
        m_axi_fm_ARUSER,
        m_axi_fm_RVALID,
        m_axi_fm_RREADY,
        m_axi_fm_RDATA,
        m_axi_fm_RLAST,
        m_axi_fm_RID,
        m_axi_fm_RFIFONUM,
        m_axi_fm_RUSER,
        m_axi_fm_RRESP,
        m_axi_fm_BVALID,
        m_axi_fm_BREADY,
        m_axi_fm_BRESP,
        m_axi_fm_BID,
        m_axi_fm_BUSER,
        add_ln39,
        input_feature_map,
        p_mid129,
        conv_in_buf_V_address0,
        conv_in_buf_V_ce0,
        conv_in_buf_V_we0,
        conv_in_buf_V_d0,
        conv_in_buf_V_address1,
        conv_in_buf_V_ce1,
        conv_in_buf_V_we1,
        conv_in_buf_V_d1,
        conv_in_buf_V_1_address0,
        conv_in_buf_V_1_ce0,
        conv_in_buf_V_1_we0,
        conv_in_buf_V_1_d0,
        conv_in_buf_V_1_address1,
        conv_in_buf_V_1_ce1,
        conv_in_buf_V_1_we1,
        conv_in_buf_V_1_d1,
        conv_in_buf_V_2_address0,
        conv_in_buf_V_2_ce0,
        conv_in_buf_V_2_we0,
        conv_in_buf_V_2_d0,
        conv_in_buf_V_2_address1,
        conv_in_buf_V_2_ce1,
        conv_in_buf_V_2_we1,
        conv_in_buf_V_2_d1,
        select_ln24_2
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_fm_AWVALID;
input   m_axi_fm_AWREADY;
output  [63:0] m_axi_fm_AWADDR;
output  [0:0] m_axi_fm_AWID;
output  [31:0] m_axi_fm_AWLEN;
output  [2:0] m_axi_fm_AWSIZE;
output  [1:0] m_axi_fm_AWBURST;
output  [1:0] m_axi_fm_AWLOCK;
output  [3:0] m_axi_fm_AWCACHE;
output  [2:0] m_axi_fm_AWPROT;
output  [3:0] m_axi_fm_AWQOS;
output  [3:0] m_axi_fm_AWREGION;
output  [0:0] m_axi_fm_AWUSER;
output   m_axi_fm_WVALID;
input   m_axi_fm_WREADY;
output  [15:0] m_axi_fm_WDATA;
output  [1:0] m_axi_fm_WSTRB;
output   m_axi_fm_WLAST;
output  [0:0] m_axi_fm_WID;
output  [0:0] m_axi_fm_WUSER;
output   m_axi_fm_ARVALID;
input   m_axi_fm_ARREADY;
output  [63:0] m_axi_fm_ARADDR;
output  [0:0] m_axi_fm_ARID;
output  [31:0] m_axi_fm_ARLEN;
output  [2:0] m_axi_fm_ARSIZE;
output  [1:0] m_axi_fm_ARBURST;
output  [1:0] m_axi_fm_ARLOCK;
output  [3:0] m_axi_fm_ARCACHE;
output  [2:0] m_axi_fm_ARPROT;
output  [3:0] m_axi_fm_ARQOS;
output  [3:0] m_axi_fm_ARREGION;
output  [0:0] m_axi_fm_ARUSER;
input   m_axi_fm_RVALID;
output   m_axi_fm_RREADY;
input  [15:0] m_axi_fm_RDATA;
input   m_axi_fm_RLAST;
input  [0:0] m_axi_fm_RID;
input  [9:0] m_axi_fm_RFIFONUM;
input  [0:0] m_axi_fm_RUSER;
input  [1:0] m_axi_fm_RRESP;
input   m_axi_fm_BVALID;
output   m_axi_fm_BREADY;
input  [1:0] m_axi_fm_BRESP;
input  [0:0] m_axi_fm_BID;
input  [0:0] m_axi_fm_BUSER;
input  [10:0] add_ln39;
input  [63:0] input_feature_map;
input  [0:0] p_mid129;
output  [11:0] conv_in_buf_V_address0;
output   conv_in_buf_V_ce0;
output   conv_in_buf_V_we0;
output  [15:0] conv_in_buf_V_d0;
output  [11:0] conv_in_buf_V_address1;
output   conv_in_buf_V_ce1;
output   conv_in_buf_V_we1;
output  [15:0] conv_in_buf_V_d1;
output  [11:0] conv_in_buf_V_1_address0;
output   conv_in_buf_V_1_ce0;
output   conv_in_buf_V_1_we0;
output  [15:0] conv_in_buf_V_1_d0;
output  [11:0] conv_in_buf_V_1_address1;
output   conv_in_buf_V_1_ce1;
output   conv_in_buf_V_1_we1;
output  [15:0] conv_in_buf_V_1_d1;
output  [11:0] conv_in_buf_V_2_address0;
output   conv_in_buf_V_2_ce0;
output   conv_in_buf_V_2_we0;
output  [15:0] conv_in_buf_V_2_d0;
output  [11:0] conv_in_buf_V_2_address1;
output   conv_in_buf_V_2_ce1;
output   conv_in_buf_V_2_we1;
output  [15:0] conv_in_buf_V_2_d1;
input  [10:0] select_ln24_2;

reg ap_idle;
reg m_axi_fm_ARVALID;
reg m_axi_fm_RREADY;
reg conv_in_buf_V_ce0;
reg conv_in_buf_V_we0;
reg conv_in_buf_V_ce1;
reg conv_in_buf_V_we1;
reg conv_in_buf_V_1_ce0;
reg conv_in_buf_V_1_we0;
reg conv_in_buf_V_1_ce1;
reg conv_in_buf_V_1_we1;
reg conv_in_buf_V_2_ce0;
reg conv_in_buf_V_2_we0;
reg conv_in_buf_V_2_ce1;
reg conv_in_buf_V_2_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg   [0:0] or_ln46_reg_731;
reg   [0:0] or_ln46_reg_731_pp0_iter3_reg;
reg    ap_block_state5_io;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
reg   [0:0] or_ln46_reg_731_pp0_iter10_reg;
reg    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln34_fu_258_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fm_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    fm_blk_n_R;
reg    ap_block_pp0_stage0_11001;
wire   [11:0] select_ln24_2_cast_fu_226_p1;
reg   [11:0] select_ln24_2_cast_reg_650;
reg   [0:0] icmp_ln34_reg_655;
wire   [0:0] icmp_ln37_fu_273_p2;
reg   [0:0] icmp_ln37_reg_659;
reg   [0:0] icmp_ln37_reg_659_pp0_iter1_reg;
wire   [0:0] empty_fu_318_p2;
reg   [0:0] empty_reg_669;
wire   [1:0] select_ln34_1_fu_343_p3;
reg   [1:0] select_ln34_1_reg_674;
reg   [1:0] select_ln34_1_reg_674_pp0_iter2_reg;
reg   [1:0] select_ln34_1_reg_674_pp0_iter3_reg;
reg   [1:0] select_ln34_1_reg_674_pp0_iter4_reg;
reg   [1:0] select_ln34_1_reg_674_pp0_iter5_reg;
reg   [1:0] select_ln34_1_reg_674_pp0_iter6_reg;
reg   [1:0] select_ln34_1_reg_674_pp0_iter7_reg;
reg   [1:0] select_ln34_1_reg_674_pp0_iter8_reg;
reg   [1:0] select_ln34_1_reg_674_pp0_iter9_reg;
reg   [1:0] select_ln34_1_reg_674_pp0_iter10_reg;
reg   [1:0] select_ln34_1_reg_674_pp0_iter11_reg;
wire   [0:0] and_ln34_fu_367_p2;
reg   [0:0] and_ln34_reg_679;
wire   [5:0] select_ln37_fu_384_p3;
reg   [5:0] select_ln37_reg_684;
wire   [5:0] select_ln37_1_fu_392_p3;
reg   [5:0] select_ln37_1_reg_689;
wire   [0:0] p_mid16_fu_409_p2;
reg   [0:0] p_mid16_reg_694;
wire   [10:0] select_ln37_3_fu_415_p3;
reg   [10:0] select_ln37_3_reg_699;
wire   [11:0] add_ln46_fu_437_p2;
reg   [11:0] add_ln46_reg_705;
wire   [22:0] mul_ln34_fu_466_p2;
reg   [22:0] mul_ln34_reg_711;
reg   [11:0] conv_in_buf_V_addr_reg_716;
reg   [11:0] conv_in_buf_V_addr_reg_716_pp0_iter3_reg;
reg   [11:0] conv_in_buf_V_addr_reg_716_pp0_iter4_reg;
reg   [11:0] conv_in_buf_V_addr_reg_716_pp0_iter5_reg;
reg   [11:0] conv_in_buf_V_addr_reg_716_pp0_iter6_reg;
reg   [11:0] conv_in_buf_V_addr_reg_716_pp0_iter7_reg;
reg   [11:0] conv_in_buf_V_addr_reg_716_pp0_iter8_reg;
reg   [11:0] conv_in_buf_V_addr_reg_716_pp0_iter9_reg;
reg   [11:0] conv_in_buf_V_addr_reg_716_pp0_iter10_reg;
reg   [11:0] conv_in_buf_V_addr_reg_716_pp0_iter11_reg;
reg   [11:0] conv_in_buf_V_1_addr_reg_721;
reg   [11:0] conv_in_buf_V_1_addr_reg_721_pp0_iter3_reg;
reg   [11:0] conv_in_buf_V_1_addr_reg_721_pp0_iter4_reg;
reg   [11:0] conv_in_buf_V_1_addr_reg_721_pp0_iter5_reg;
reg   [11:0] conv_in_buf_V_1_addr_reg_721_pp0_iter6_reg;
reg   [11:0] conv_in_buf_V_1_addr_reg_721_pp0_iter7_reg;
reg   [11:0] conv_in_buf_V_1_addr_reg_721_pp0_iter8_reg;
reg   [11:0] conv_in_buf_V_1_addr_reg_721_pp0_iter9_reg;
reg   [11:0] conv_in_buf_V_1_addr_reg_721_pp0_iter10_reg;
reg   [11:0] conv_in_buf_V_1_addr_reg_721_pp0_iter11_reg;
reg   [11:0] conv_in_buf_V_2_addr_reg_726;
reg   [11:0] conv_in_buf_V_2_addr_reg_726_pp0_iter3_reg;
reg   [11:0] conv_in_buf_V_2_addr_reg_726_pp0_iter4_reg;
reg   [11:0] conv_in_buf_V_2_addr_reg_726_pp0_iter5_reg;
reg   [11:0] conv_in_buf_V_2_addr_reg_726_pp0_iter6_reg;
reg   [11:0] conv_in_buf_V_2_addr_reg_726_pp0_iter7_reg;
reg   [11:0] conv_in_buf_V_2_addr_reg_726_pp0_iter8_reg;
reg   [11:0] conv_in_buf_V_2_addr_reg_726_pp0_iter9_reg;
reg   [11:0] conv_in_buf_V_2_addr_reg_726_pp0_iter10_reg;
reg   [11:0] conv_in_buf_V_2_addr_reg_726_pp0_iter11_reg;
wire   [0:0] or_ln46_fu_522_p2;
reg   [0:0] or_ln46_reg_731_pp0_iter4_reg;
reg   [0:0] or_ln46_reg_731_pp0_iter5_reg;
reg   [0:0] or_ln46_reg_731_pp0_iter6_reg;
reg   [0:0] or_ln46_reg_731_pp0_iter7_reg;
reg   [0:0] or_ln46_reg_731_pp0_iter8_reg;
reg   [0:0] or_ln46_reg_731_pp0_iter9_reg;
reg   [0:0] or_ln46_reg_731_pp0_iter11_reg;
wire   [22:0] add_ln49_1_fu_545_p2;
reg   [22:0] add_ln49_1_reg_735;
reg   [63:0] fm_addr_reg_740;
reg   [15:0] fm_addr_read_reg_746;
reg    ap_condition_exit_pp0_iter1_stage0;
wire   [63:0] zext_ln47_2_fu_511_p1;
wire  signed [63:0] sext_ln49_fu_578_p1;
reg   [5:0] j_fu_116;
wire   [5:0] add_ln42_fu_442_p2;
wire    ap_loop_init;
reg   [5:0] i_fu_120;
reg   [11:0] indvar_flatten_fu_124;
wire   [11:0] select_ln37_4_fu_288_p3;
reg   [11:0] ap_sig_allocacmp_indvar_flatten_load_1;
reg   [11:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [1:0] c_fu_128;
reg   [12:0] indvar_flatten41_fu_132;
wire   [12:0] add_ln34_2_fu_264_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten41_load;
wire   [11:0] add_ln37_1_fu_282_p2;
wire   [10:0] zext_ln37_fu_309_p1;
wire   [10:0] add_ln39_1_fu_313_p2;
wire   [1:0] add_ln34_fu_330_p2;
wire   [0:0] icmp_ln42_fu_361_p2;
wire   [0:0] xor_ln34_fu_356_p2;
wire   [5:0] select_ln34_fu_336_p3;
wire   [0:0] or_ln37_fu_379_p2;
wire   [5:0] add_ln37_fu_373_p2;
wire   [10:0] zext_ln37_1_fu_400_p1;
wire   [10:0] add_ln39_2_fu_404_p2;
wire   [10:0] select_ln34_3_fu_350_p3;
wire   [6:0] zext_ln44_fu_423_p1;
wire   [6:0] add_ln46_1_fu_427_p2;
wire  signed [11:0] sext_ln46_fu_433_p1;
wire   [1:0] mul_ln34_fu_466_p0;
wire   [21:0] mul_ln34_fu_466_p1;
wire   [0:0] select_ln34_2_fu_472_p3;
wire   [21:0] sext_ln49_1_mid2_v_fu_486_p3;
wire   [19:0] sext_ln42_mid2_v_fu_497_p3;
wire   [11:0] grp_fu_588_p3;
wire   [0:0] icmp_ln46_fu_517_p2;
wire   [0:0] select_ln37_2_fu_480_p3;
wire   [12:0] tmp_s_fu_528_p3;
wire  signed [22:0] sext_ln37_fu_493_p1;
wire   [22:0] zext_ln49_fu_535_p1;
wire   [22:0] add_ln49_fu_539_p2;
wire  signed [22:0] sext_ln42_mid2_v_cast_fu_504_p1;
wire   [63:0] zext_ln34_1_fu_551_p1;
wire  signed [63:0] sext_ln49_1_fu_559_p1;
wire   [63:0] add_ln34_1_fu_554_p2;
wire   [63:0] add_ln49_2_fu_562_p2;
wire   [62:0] trunc_ln_fu_568_p4;
wire   [5:0] grp_fu_588_p0;
wire   [5:0] grp_fu_588_p1;
wire   [5:0] grp_fu_588_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [11:0] grp_fu_588_p00;
wire   [11:0] grp_fu_588_p20;
wire   [22:0] mul_ln34_fu_466_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_done_reg = 1'b0;
end

tiled_conv_mul_2ns_22ns_23_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
mul_2ns_22ns_23_1_1_U1(
    .din0(mul_ln34_fu_466_p0),
    .din1(mul_ln34_fu_466_p1),
    .dout(mul_ln34_fu_466_p2)
);

tiled_conv_mac_muladd_6ns_6ns_6ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mac_muladd_6ns_6ns_6ns_12_1_1_U2(
    .din0(grp_fu_588_p0),
    .din1(grp_fu_588_p1),
    .din2(grp_fu_588_p2),
    .dout(grp_fu_588_p3)
);

tiled_conv_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter11_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            c_fu_128 <= 2'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln34_reg_655 == 1'd0))) begin
            c_fu_128 <= select_ln34_1_fu_343_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_120 <= 6'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln34_reg_655 == 1'd0))) begin
            i_fu_120 <= select_ln37_1_fu_392_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln34_fu_258_p2 == 1'd0))) begin
            indvar_flatten41_fu_132 <= add_ln34_2_fu_264_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten41_fu_132 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln34_fu_258_p2 == 1'd0))) begin
            indvar_flatten_fu_124 <= select_ln37_4_fu_288_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_124 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_116 <= 6'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln34_reg_655 == 1'd0))) begin
            j_fu_116 <= add_ln42_fu_442_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_655 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln46_reg_705 <= add_ln46_fu_437_p2;
        and_ln34_reg_679 <= and_ln34_fu_367_p2;
        p_mid16_reg_694 <= p_mid16_fu_409_p2;
        select_ln34_1_reg_674 <= select_ln34_1_fu_343_p3;
        select_ln37_1_reg_689 <= select_ln37_1_fu_392_p3;
        select_ln37_3_reg_699 <= select_ln37_3_fu_415_p3;
        select_ln37_reg_684 <= select_ln37_fu_384_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln46_fu_522_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln49_1_reg_735[22 : 1] <= add_ln49_1_fu_545_p2[22 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        conv_in_buf_V_1_addr_reg_721 <= zext_ln47_2_fu_511_p1;
        conv_in_buf_V_1_addr_reg_721_pp0_iter10_reg <= conv_in_buf_V_1_addr_reg_721_pp0_iter9_reg;
        conv_in_buf_V_1_addr_reg_721_pp0_iter11_reg <= conv_in_buf_V_1_addr_reg_721_pp0_iter10_reg;
        conv_in_buf_V_1_addr_reg_721_pp0_iter3_reg <= conv_in_buf_V_1_addr_reg_721;
        conv_in_buf_V_1_addr_reg_721_pp0_iter4_reg <= conv_in_buf_V_1_addr_reg_721_pp0_iter3_reg;
        conv_in_buf_V_1_addr_reg_721_pp0_iter5_reg <= conv_in_buf_V_1_addr_reg_721_pp0_iter4_reg;
        conv_in_buf_V_1_addr_reg_721_pp0_iter6_reg <= conv_in_buf_V_1_addr_reg_721_pp0_iter5_reg;
        conv_in_buf_V_1_addr_reg_721_pp0_iter7_reg <= conv_in_buf_V_1_addr_reg_721_pp0_iter6_reg;
        conv_in_buf_V_1_addr_reg_721_pp0_iter8_reg <= conv_in_buf_V_1_addr_reg_721_pp0_iter7_reg;
        conv_in_buf_V_1_addr_reg_721_pp0_iter9_reg <= conv_in_buf_V_1_addr_reg_721_pp0_iter8_reg;
        conv_in_buf_V_2_addr_reg_726 <= zext_ln47_2_fu_511_p1;
        conv_in_buf_V_2_addr_reg_726_pp0_iter10_reg <= conv_in_buf_V_2_addr_reg_726_pp0_iter9_reg;
        conv_in_buf_V_2_addr_reg_726_pp0_iter11_reg <= conv_in_buf_V_2_addr_reg_726_pp0_iter10_reg;
        conv_in_buf_V_2_addr_reg_726_pp0_iter3_reg <= conv_in_buf_V_2_addr_reg_726;
        conv_in_buf_V_2_addr_reg_726_pp0_iter4_reg <= conv_in_buf_V_2_addr_reg_726_pp0_iter3_reg;
        conv_in_buf_V_2_addr_reg_726_pp0_iter5_reg <= conv_in_buf_V_2_addr_reg_726_pp0_iter4_reg;
        conv_in_buf_V_2_addr_reg_726_pp0_iter6_reg <= conv_in_buf_V_2_addr_reg_726_pp0_iter5_reg;
        conv_in_buf_V_2_addr_reg_726_pp0_iter7_reg <= conv_in_buf_V_2_addr_reg_726_pp0_iter6_reg;
        conv_in_buf_V_2_addr_reg_726_pp0_iter8_reg <= conv_in_buf_V_2_addr_reg_726_pp0_iter7_reg;
        conv_in_buf_V_2_addr_reg_726_pp0_iter9_reg <= conv_in_buf_V_2_addr_reg_726_pp0_iter8_reg;
        conv_in_buf_V_addr_reg_716 <= zext_ln47_2_fu_511_p1;
        conv_in_buf_V_addr_reg_716_pp0_iter10_reg <= conv_in_buf_V_addr_reg_716_pp0_iter9_reg;
        conv_in_buf_V_addr_reg_716_pp0_iter11_reg <= conv_in_buf_V_addr_reg_716_pp0_iter10_reg;
        conv_in_buf_V_addr_reg_716_pp0_iter3_reg <= conv_in_buf_V_addr_reg_716;
        conv_in_buf_V_addr_reg_716_pp0_iter4_reg <= conv_in_buf_V_addr_reg_716_pp0_iter3_reg;
        conv_in_buf_V_addr_reg_716_pp0_iter5_reg <= conv_in_buf_V_addr_reg_716_pp0_iter4_reg;
        conv_in_buf_V_addr_reg_716_pp0_iter6_reg <= conv_in_buf_V_addr_reg_716_pp0_iter5_reg;
        conv_in_buf_V_addr_reg_716_pp0_iter7_reg <= conv_in_buf_V_addr_reg_716_pp0_iter6_reg;
        conv_in_buf_V_addr_reg_716_pp0_iter8_reg <= conv_in_buf_V_addr_reg_716_pp0_iter7_reg;
        conv_in_buf_V_addr_reg_716_pp0_iter9_reg <= conv_in_buf_V_addr_reg_716_pp0_iter8_reg;
        mul_ln34_reg_711 <= mul_ln34_fu_466_p2;
        or_ln46_reg_731 <= or_ln46_fu_522_p2;
        or_ln46_reg_731_pp0_iter10_reg <= or_ln46_reg_731_pp0_iter9_reg;
        or_ln46_reg_731_pp0_iter11_reg <= or_ln46_reg_731_pp0_iter10_reg;
        or_ln46_reg_731_pp0_iter3_reg <= or_ln46_reg_731;
        or_ln46_reg_731_pp0_iter4_reg <= or_ln46_reg_731_pp0_iter3_reg;
        or_ln46_reg_731_pp0_iter5_reg <= or_ln46_reg_731_pp0_iter4_reg;
        or_ln46_reg_731_pp0_iter6_reg <= or_ln46_reg_731_pp0_iter5_reg;
        or_ln46_reg_731_pp0_iter7_reg <= or_ln46_reg_731_pp0_iter6_reg;
        or_ln46_reg_731_pp0_iter8_reg <= or_ln46_reg_731_pp0_iter7_reg;
        or_ln46_reg_731_pp0_iter9_reg <= or_ln46_reg_731_pp0_iter8_reg;
        select_ln34_1_reg_674_pp0_iter10_reg <= select_ln34_1_reg_674_pp0_iter9_reg;
        select_ln34_1_reg_674_pp0_iter11_reg <= select_ln34_1_reg_674_pp0_iter10_reg;
        select_ln34_1_reg_674_pp0_iter2_reg <= select_ln34_1_reg_674;
        select_ln34_1_reg_674_pp0_iter3_reg <= select_ln34_1_reg_674_pp0_iter2_reg;
        select_ln34_1_reg_674_pp0_iter4_reg <= select_ln34_1_reg_674_pp0_iter3_reg;
        select_ln34_1_reg_674_pp0_iter5_reg <= select_ln34_1_reg_674_pp0_iter4_reg;
        select_ln34_1_reg_674_pp0_iter6_reg <= select_ln34_1_reg_674_pp0_iter5_reg;
        select_ln34_1_reg_674_pp0_iter7_reg <= select_ln34_1_reg_674_pp0_iter6_reg;
        select_ln34_1_reg_674_pp0_iter8_reg <= select_ln34_1_reg_674_pp0_iter7_reg;
        select_ln34_1_reg_674_pp0_iter9_reg <= select_ln34_1_reg_674_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln34_reg_655 <= icmp_ln34_fu_258_p2;
        icmp_ln37_reg_659_pp0_iter1_reg <= icmp_ln37_reg_659;
        select_ln24_2_cast_reg_650[10 : 0] <= select_ln24_2_cast_fu_226_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_reg_659 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_reg_669 <= empty_fu_318_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln46_reg_731_pp0_iter10_reg == 1'd0))) begin
        fm_addr_read_reg_746 <= m_axi_fm_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln46_reg_731 == 1'd0))) begin
        fm_addr_reg_740 <= sext_ln49_fu_578_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln34_fu_258_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln37_reg_659 <= icmp_ln37_fu_273_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln34_fu_258_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln34_reg_655 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter11_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten41_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten41_load = indvar_flatten41_fu_132;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 12'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_124;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load_1 = indvar_flatten_fu_124;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_1_ce0 = 1'b1;
    end else begin
        conv_in_buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_1_ce1 = 1'b1;
    end else begin
        conv_in_buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (or_ln46_reg_731_pp0_iter11_reg == 1'd0) & (select_ln34_1_reg_674_pp0_iter11_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_1_we0 = 1'b1;
    end else begin
        conv_in_buf_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln46_fu_522_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln34_1_reg_674 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_1_we1 = 1'b1;
    end else begin
        conv_in_buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_2_ce0 = 1'b1;
    end else begin
        conv_in_buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_2_ce1 = 1'b1;
    end else begin
        conv_in_buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln34_1_reg_674_pp0_iter11_reg == 2'd0) & ~(select_ln34_1_reg_674_pp0_iter11_reg == 2'd1) & (ap_enable_reg_pp0_iter12 == 1'b1) & (or_ln46_reg_731_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_2_we0 = 1'b1;
    end else begin
        conv_in_buf_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln34_1_reg_674 == 2'd0) & ~(select_ln34_1_reg_674 == 2'd1) & (or_ln46_fu_522_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_2_we1 = 1'b1;
    end else begin
        conv_in_buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_ce0 = 1'b1;
    end else begin
        conv_in_buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_ce1 = 1'b1;
    end else begin
        conv_in_buf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (or_ln46_reg_731_pp0_iter11_reg == 1'd0) & (select_ln34_1_reg_674_pp0_iter11_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_we0 = 1'b1;
    end else begin
        conv_in_buf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln46_fu_522_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln34_1_reg_674 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_in_buf_V_we1 = 1'b1;
    end else begin
        conv_in_buf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (or_ln46_reg_731_pp0_iter3_reg == 1'd0))) begin
        fm_blk_n_AR = m_axi_fm_ARREADY;
    end else begin
        fm_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (or_ln46_reg_731_pp0_iter10_reg == 1'd0))) begin
        fm_blk_n_R = m_axi_fm_RVALID;
    end else begin
        fm_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_ln46_reg_731_pp0_iter3_reg == 1'd0))) begin
        m_axi_fm_ARVALID = 1'b1;
    end else begin
        m_axi_fm_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (or_ln46_reg_731_pp0_iter10_reg == 1'd0))) begin
        m_axi_fm_RREADY = 1'b1;
    end else begin
        m_axi_fm_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln34_1_fu_554_p2 = (zext_ln34_1_fu_551_p1 + input_feature_map);

assign add_ln34_2_fu_264_p2 = (ap_sig_allocacmp_indvar_flatten41_load + 13'd1);

assign add_ln34_fu_330_p2 = (c_fu_128 + 2'd1);

assign add_ln37_1_fu_282_p2 = (ap_sig_allocacmp_indvar_flatten_load + 12'd1);

assign add_ln37_fu_373_p2 = (select_ln34_fu_336_p3 + 6'd1);

assign add_ln39_1_fu_313_p2 = (add_ln39 + zext_ln37_fu_309_p1);

assign add_ln39_2_fu_404_p2 = (add_ln39 + zext_ln37_1_fu_400_p1);

assign add_ln42_fu_442_p2 = (select_ln37_fu_384_p3 + 6'd1);

assign add_ln46_1_fu_427_p2 = ($signed(zext_ln44_fu_423_p1) + $signed(7'd125));

assign add_ln46_fu_437_p2 = ($signed(sext_ln46_fu_433_p1) + $signed(select_ln24_2_cast_reg_650));

assign add_ln49_1_fu_545_p2 = ($signed(add_ln49_fu_539_p2) + $signed(sext_ln42_mid2_v_cast_fu_504_p1));

assign add_ln49_2_fu_562_p2 = ($signed(sext_ln49_1_fu_559_p1) + $signed(add_ln34_1_fu_554_p2));

assign add_ln49_fu_539_p2 = ($signed(sext_ln37_fu_493_p1) + $signed(zext_ln49_fu_535_p1));

assign and_ln34_fu_367_p2 = (xor_ln34_fu_356_p2 & icmp_ln42_fu_361_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter11 == 1'b1) & (or_ln46_reg_731_pp0_iter10_reg == 1'd0) & (m_axi_fm_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter11 == 1'b1) & (or_ln46_reg_731_pp0_iter10_reg == 1'd0) & (m_axi_fm_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter11 = ((or_ln46_reg_731_pp0_iter10_reg == 1'd0) & (m_axi_fm_RVALID == 1'b0));
end

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((m_axi_fm_ARREADY == 1'b0) & (or_ln46_reg_731_pp0_iter3_reg == 1'd0));
end

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv_in_buf_V_1_address0 = conv_in_buf_V_1_addr_reg_721_pp0_iter11_reg;

assign conv_in_buf_V_1_address1 = zext_ln47_2_fu_511_p1;

assign conv_in_buf_V_1_d0 = fm_addr_read_reg_746;

assign conv_in_buf_V_1_d1 = 16'd0;

assign conv_in_buf_V_2_address0 = conv_in_buf_V_2_addr_reg_726_pp0_iter11_reg;

assign conv_in_buf_V_2_address1 = zext_ln47_2_fu_511_p1;

assign conv_in_buf_V_2_d0 = fm_addr_read_reg_746;

assign conv_in_buf_V_2_d1 = 16'd0;

assign conv_in_buf_V_address0 = conv_in_buf_V_addr_reg_716_pp0_iter11_reg;

assign conv_in_buf_V_address1 = zext_ln47_2_fu_511_p1;

assign conv_in_buf_V_d0 = fm_addr_read_reg_746;

assign conv_in_buf_V_d1 = 16'd0;

assign empty_fu_318_p2 = ((add_ln39_1_fu_313_p2 > 11'd735) ? 1'b1 : 1'b0);

assign grp_fu_588_p0 = grp_fu_588_p00;

assign grp_fu_588_p00 = select_ln37_1_reg_689;

assign grp_fu_588_p1 = 12'd46;

assign grp_fu_588_p2 = grp_fu_588_p20;

assign grp_fu_588_p20 = select_ln37_reg_684;

assign icmp_ln34_fu_258_p2 = ((ap_sig_allocacmp_indvar_flatten41_load == 13'd7176) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_273_p2 = ((ap_sig_allocacmp_indvar_flatten_load_1 == 12'd2392) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_361_p2 = ((j_fu_116 == 6'd46) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_517_p2 = ((add_ln46_reg_705 > 12'd1279) ? 1'b1 : 1'b0);

assign m_axi_fm_ARADDR = fm_addr_reg_740;

assign m_axi_fm_ARBURST = 2'd0;

assign m_axi_fm_ARCACHE = 4'd0;

assign m_axi_fm_ARID = 1'd0;

assign m_axi_fm_ARLEN = 32'd1;

assign m_axi_fm_ARLOCK = 2'd0;

assign m_axi_fm_ARPROT = 3'd0;

assign m_axi_fm_ARQOS = 4'd0;

assign m_axi_fm_ARREGION = 4'd0;

assign m_axi_fm_ARSIZE = 3'd0;

assign m_axi_fm_ARUSER = 1'd0;

assign m_axi_fm_AWADDR = 64'd0;

assign m_axi_fm_AWBURST = 2'd0;

assign m_axi_fm_AWCACHE = 4'd0;

assign m_axi_fm_AWID = 1'd0;

assign m_axi_fm_AWLEN = 32'd0;

assign m_axi_fm_AWLOCK = 2'd0;

assign m_axi_fm_AWPROT = 3'd0;

assign m_axi_fm_AWQOS = 4'd0;

assign m_axi_fm_AWREGION = 4'd0;

assign m_axi_fm_AWSIZE = 3'd0;

assign m_axi_fm_AWUSER = 1'd0;

assign m_axi_fm_AWVALID = 1'b0;

assign m_axi_fm_BREADY = 1'b0;

assign m_axi_fm_WDATA = 16'd0;

assign m_axi_fm_WID = 1'd0;

assign m_axi_fm_WLAST = 1'b0;

assign m_axi_fm_WSTRB = 2'd0;

assign m_axi_fm_WUSER = 1'd0;

assign m_axi_fm_WVALID = 1'b0;

assign mul_ln34_fu_466_p0 = mul_ln34_fu_466_p00;

assign mul_ln34_fu_466_p00 = select_ln34_1_reg_674;

assign mul_ln34_fu_466_p1 = 23'd1884160;

assign or_ln37_fu_379_p2 = (icmp_ln37_reg_659 | and_ln34_fu_367_p2);

assign or_ln46_fu_522_p2 = (select_ln37_2_fu_480_p3 | icmp_ln46_fu_517_p2);

assign p_mid16_fu_409_p2 = ((add_ln39_2_fu_404_p2 > 11'd735) ? 1'b1 : 1'b0);

assign select_ln24_2_cast_fu_226_p1 = select_ln24_2;

assign select_ln34_1_fu_343_p3 = ((icmp_ln37_reg_659[0:0] == 1'b1) ? add_ln34_fu_330_p2 : c_fu_128);

assign select_ln34_2_fu_472_p3 = ((icmp_ln37_reg_659_pp0_iter1_reg[0:0] == 1'b1) ? p_mid129 : empty_reg_669);

assign select_ln34_3_fu_350_p3 = ((icmp_ln37_reg_659[0:0] == 1'b1) ? add_ln39 : add_ln39_1_fu_313_p2);

assign select_ln34_fu_336_p3 = ((icmp_ln37_reg_659[0:0] == 1'b1) ? 6'd0 : i_fu_120);

assign select_ln37_1_fu_392_p3 = ((and_ln34_fu_367_p2[0:0] == 1'b1) ? add_ln37_fu_373_p2 : select_ln34_fu_336_p3);

assign select_ln37_2_fu_480_p3 = ((and_ln34_reg_679[0:0] == 1'b1) ? p_mid16_reg_694 : select_ln34_2_fu_472_p3);

assign select_ln37_3_fu_415_p3 = ((and_ln34_fu_367_p2[0:0] == 1'b1) ? add_ln39_2_fu_404_p2 : select_ln34_3_fu_350_p3);

assign select_ln37_4_fu_288_p3 = ((icmp_ln37_fu_273_p2[0:0] == 1'b1) ? 12'd1 : add_ln37_1_fu_282_p2);

assign select_ln37_fu_384_p3 = ((or_ln37_fu_379_p2[0:0] == 1'b1) ? 6'd0 : j_fu_116);

assign sext_ln37_fu_493_p1 = $signed(sext_ln49_1_mid2_v_fu_486_p3);

assign sext_ln42_mid2_v_cast_fu_504_p1 = $signed(sext_ln42_mid2_v_fu_497_p3);

assign sext_ln42_mid2_v_fu_497_p3 = {{select_ln37_3_reg_699}, {9'd0}};

assign sext_ln46_fu_433_p1 = $signed(add_ln46_1_fu_427_p2);

assign sext_ln49_1_fu_559_p1 = $signed(add_ln49_1_reg_735);

assign sext_ln49_1_mid2_v_fu_486_p3 = {{select_ln37_3_reg_699}, {11'd0}};

assign sext_ln49_fu_578_p1 = $signed(trunc_ln_fu_568_p4);

assign tmp_s_fu_528_p3 = {{add_ln46_reg_705}, {1'd0}};

assign trunc_ln_fu_568_p4 = {{add_ln49_2_fu_562_p2[63:1]}};

assign xor_ln34_fu_356_p2 = (icmp_ln37_reg_659 ^ 1'd1);

assign zext_ln34_1_fu_551_p1 = mul_ln34_reg_711;

assign zext_ln37_1_fu_400_p1 = add_ln37_fu_373_p2;

assign zext_ln37_fu_309_p1 = i_fu_120;

assign zext_ln44_fu_423_p1 = select_ln37_fu_384_p3;

assign zext_ln47_2_fu_511_p1 = grp_fu_588_p3;

assign zext_ln49_fu_535_p1 = tmp_s_fu_528_p3;

always @ (posedge ap_clk) begin
    select_ln24_2_cast_reg_650[11] <= 1'b0;
    add_ln49_1_reg_735[0] <= 1'b0;
end

endmodule //tiled_conv_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH
