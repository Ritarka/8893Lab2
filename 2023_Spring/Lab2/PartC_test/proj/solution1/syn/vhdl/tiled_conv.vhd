-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2.2 (64-bit)
-- Version: 2020.2.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tiled_conv is
generic (
    C_M_AXI_FM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_FM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_FM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_FM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_WT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_WT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_WT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_FM_USER_VALUE : INTEGER := 0;
    C_M_AXI_FM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_FM_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_WT_USER_VALUE : INTEGER := 0;
    C_M_AXI_WT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_WT_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_fm_AWVALID : OUT STD_LOGIC;
    m_axi_fm_AWREADY : IN STD_LOGIC;
    m_axi_fm_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ADDR_WIDTH-1 downto 0);
    m_axi_fm_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fm_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_AWUSER_WIDTH-1 downto 0);
    m_axi_fm_WVALID : OUT STD_LOGIC;
    m_axi_fm_WREADY : IN STD_LOGIC;
    m_axi_fm_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_DATA_WIDTH-1 downto 0);
    m_axi_fm_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_DATA_WIDTH/8-1 downto 0);
    m_axi_fm_WLAST : OUT STD_LOGIC;
    m_axi_fm_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_WUSER_WIDTH-1 downto 0);
    m_axi_fm_ARVALID : OUT STD_LOGIC;
    m_axi_fm_ARREADY : IN STD_LOGIC;
    m_axi_fm_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ADDR_WIDTH-1 downto 0);
    m_axi_fm_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fm_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ARUSER_WIDTH-1 downto 0);
    m_axi_fm_RVALID : IN STD_LOGIC;
    m_axi_fm_RREADY : OUT STD_LOGIC;
    m_axi_fm_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_FM_DATA_WIDTH-1 downto 0);
    m_axi_fm_RLAST : IN STD_LOGIC;
    m_axi_fm_RID : IN STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FM_RUSER_WIDTH-1 downto 0);
    m_axi_fm_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_BVALID : IN STD_LOGIC;
    m_axi_fm_BREADY : OUT STD_LOGIC;
    m_axi_fm_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_BID : IN STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FM_BUSER_WIDTH-1 downto 0);
    m_axi_wt_AWVALID : OUT STD_LOGIC;
    m_axi_wt_AWREADY : IN STD_LOGIC;
    m_axi_wt_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ADDR_WIDTH-1 downto 0);
    m_axi_wt_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_wt_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_AWUSER_WIDTH-1 downto 0);
    m_axi_wt_WVALID : OUT STD_LOGIC;
    m_axi_wt_WREADY : IN STD_LOGIC;
    m_axi_wt_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_DATA_WIDTH-1 downto 0);
    m_axi_wt_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_DATA_WIDTH/8-1 downto 0);
    m_axi_wt_WLAST : OUT STD_LOGIC;
    m_axi_wt_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_WUSER_WIDTH-1 downto 0);
    m_axi_wt_ARVALID : OUT STD_LOGIC;
    m_axi_wt_ARREADY : IN STD_LOGIC;
    m_axi_wt_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ADDR_WIDTH-1 downto 0);
    m_axi_wt_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_wt_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ARUSER_WIDTH-1 downto 0);
    m_axi_wt_RVALID : IN STD_LOGIC;
    m_axi_wt_RREADY : OUT STD_LOGIC;
    m_axi_wt_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_WT_DATA_WIDTH-1 downto 0);
    m_axi_wt_RLAST : IN STD_LOGIC;
    m_axi_wt_RID : IN STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_WT_RUSER_WIDTH-1 downto 0);
    m_axi_wt_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_BVALID : IN STD_LOGIC;
    m_axi_wt_BREADY : OUT STD_LOGIC;
    m_axi_wt_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_BID : IN STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_WT_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of tiled_conv is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "tiled_conv_tiled_conv,hls_ip_2020_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=1451589633,HLS_SYN_TPT=none,HLS_SYN_MEM=34,HLS_SYN_DSP=0,HLS_SYN_FF=6737,HLS_SYN_LUT=10347,HLS_VERSION=2020_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv11_2E : STD_LOGIC_VECTOR (10 downto 0) := "00000101110";
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv11_2DF : STD_LOGIC_VECTOR (10 downto 0) := "01011011111";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_1C08 : STD_LOGIC_VECTOR (12 downto 0) := "1110000001000";
    constant ap_const_lv12_958 : STD_LOGIC_VECTOR (11 downto 0) := "100101011000";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv7_7D : STD_LOGIC_VECTOR (6 downto 0) := "1111101";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv23_1CC000 : STD_LOGIC_VECTOR (22 downto 0) := "00111001100000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv12_4FF : STD_LOGIC_VECTOR (11 downto 0) := "010011111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_730 : STD_LOGIC_VECTOR (10 downto 0) := "11100110000";
    constant ap_const_lv11_14 : STD_LOGIC_VECTOR (10 downto 0) := "00000010100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv10_1CC : STD_LOGIC_VECTOR (9 downto 0) := "0111001100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv12_2E : STD_LOGIC_VECTOR (11 downto 0) := "000000101110";
    constant ap_const_lv25_73000 : STD_LOGIC_VECTOR (24 downto 0) := "0000001110011000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_feature_map : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_bias : STD_LOGIC_VECTOR (63 downto 0);
    signal output_feature_map : STD_LOGIC_VECTOR (63 downto 0);
    signal fm_blk_n_AR : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln34_reg_2717 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_2717_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_reg_2775 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_reg_2775_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fm_blk_n_R : STD_LOGIC;
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal icmp_ln34_reg_2717_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_reg_2775_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fm_blk_n_AW : STD_LOGIC;
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal empty_38_reg_2976 : STD_LOGIC_VECTOR (0 downto 0);
    signal fm_blk_n_W : STD_LOGIC;
    signal ap_enable_reg_pp1_iter16 : STD_LOGIC := '0';
    signal icmp_ln119_1_reg_2848 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fm_blk_n_B : STD_LOGIC;
    signal ap_enable_reg_pp1_iter21 : STD_LOGIC := '0';
    signal empty_40_reg_2985 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_40_reg_2985_pp1_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter15 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal empty_45_reg_3193 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter16 : STD_LOGIC := '0';
    signal icmp_ln119_reg_3065 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter21 : STD_LOGIC := '0';
    signal empty_47_reg_3202 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_47_reg_3202_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fm_AWVALID : STD_LOGIC;
    signal fm_AWREADY : STD_LOGIC;
    signal fm_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal fm_WVALID : STD_LOGIC;
    signal fm_WREADY : STD_LOGIC;
    signal fm_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal fm_ARVALID : STD_LOGIC;
    signal fm_ARREADY : STD_LOGIC;
    signal fm_RVALID : STD_LOGIC;
    signal fm_RREADY : STD_LOGIC;
    signal fm_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal fm_RLAST : STD_LOGIC;
    signal fm_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal fm_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal fm_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal fm_BVALID : STD_LOGIC;
    signal fm_BREADY : STD_LOGIC;
    signal fm_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal fm_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal fm_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal wt_AWREADY : STD_LOGIC;
    signal wt_WREADY : STD_LOGIC;
    signal wt_ARVALID : STD_LOGIC;
    signal wt_ARREADY : STD_LOGIC;
    signal wt_RVALID : STD_LOGIC;
    signal wt_RREADY : STD_LOGIC;
    signal wt_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal wt_RLAST : STD_LOGIC;
    signal wt_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal wt_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal wt_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal wt_BVALID : STD_LOGIC;
    signal wt_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal wt_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal wt_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten41_reg_638 : STD_LOGIC_VECTOR (12 downto 0);
    signal c_reg_649 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten_reg_660 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_reg_671 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_reg_682 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten97_reg_751 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state20_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state24_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state26_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state28_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state30_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_state32_pp1_stage0_iter12 : BOOLEAN;
    signal ap_block_state33_pp1_stage0_iter13 : BOOLEAN;
    signal ap_block_state34_pp1_stage0_iter14 : BOOLEAN;
    signal ap_block_state35_pp1_stage0_iter15 : BOOLEAN;
    signal ap_block_state35_io : BOOLEAN;
    signal ap_block_state36_pp1_stage0_iter16 : BOOLEAN;
    signal ap_block_state36_io : BOOLEAN;
    signal ap_block_state37_pp1_stage0_iter17 : BOOLEAN;
    signal ap_block_state38_pp1_stage0_iter18 : BOOLEAN;
    signal ap_block_state39_pp1_stage0_iter19 : BOOLEAN;
    signal ap_block_state40_pp1_stage0_iter20 : BOOLEAN;
    signal ap_block_state41_pp1_stage0_iter21 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal f_reg_763 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten52_reg_774 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_785 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_2_reg_797 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten153_reg_808 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state46_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state47_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state48_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state49_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state50_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state51_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state52_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_state53_pp2_stage0_iter7 : BOOLEAN;
    signal ap_block_state54_pp2_stage0_iter8 : BOOLEAN;
    signal ap_block_state55_pp2_stage0_iter9 : BOOLEAN;
    signal ap_block_state56_pp2_stage0_iter10 : BOOLEAN;
    signal ap_block_state57_pp2_stage0_iter11 : BOOLEAN;
    signal ap_block_state58_pp2_stage0_iter12 : BOOLEAN;
    signal ap_block_state59_pp2_stage0_iter13 : BOOLEAN;
    signal ap_block_state60_pp2_stage0_iter14 : BOOLEAN;
    signal ap_block_state61_pp2_stage0_iter15 : BOOLEAN;
    signal ap_block_state61_io : BOOLEAN;
    signal ap_block_state62_pp2_stage0_iter16 : BOOLEAN;
    signal ap_block_state62_io : BOOLEAN;
    signal ap_block_state63_pp2_stage0_iter17 : BOOLEAN;
    signal ap_block_state64_pp2_stage0_iter18 : BOOLEAN;
    signal ap_block_state65_pp2_stage0_iter19 : BOOLEAN;
    signal ap_block_state66_pp2_stage0_iter20 : BOOLEAN;
    signal ap_block_state67_pp2_stage0_iter21 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal f_1_reg_820 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten108_reg_831 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_2_reg_842 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_reg_854 : STD_LOGIC_VECTOR (4 downto 0);
    signal output_feature_map_read_reg_2589 : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_bias_read_reg_2597 : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_weights_read_reg_2602 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_feature_map_read_reg_2607 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln62_1_fu_1042_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln62_1_reg_2612 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal empty_29_fu_1076_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_29_reg_2617 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln130_6_fu_1092_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln130_6_reg_2622 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln65_fu_1112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_reg_2630 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln62_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln23_1_fu_1118_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln23_1_reg_2640 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln39_2_mid2_reg_2646 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln23_fu_1152_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_reg_2658 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln24_fu_1198_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln24_reg_2665 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln130_2_fu_1258_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln130_2_reg_2673 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln65_fu_1278_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln65_reg_2678 : STD_LOGIC_VECTOR (18 downto 0);
    signal select_ln65_fu_1282_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln65_reg_2688 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln79_fu_1290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_2693 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid129_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid129_reg_2697 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln34_2_fu_1302_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_predicate_op235_readreq_state7 : BOOLEAN;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter9 : BOOLEAN;
    signal ap_predicate_op246_read_state14 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln39_fu_1312_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln39_reg_2707 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_30_fu_1317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_30_reg_2712 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_fu_1323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_2717_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_2717_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_2717_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_2717_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_2717_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_2717_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_2717_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_reg_2717_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_fu_1335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_2721 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_1_fu_1349_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln34_1_reg_2727 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln34_1_reg_2727_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln34_1_reg_2727_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln34_1_reg_2727_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln34_1_reg_2727_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln34_1_reg_2727_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln34_1_reg_2727_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln34_1_reg_2727_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln34_1_reg_2727_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln34_1_reg_2727_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln34_1_reg_2727_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln34_fu_1369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln34_reg_2733 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln37_fu_1375_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln37_reg_2739 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_fu_1387_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_reg_2744 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_reg_2744_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_reg_2744_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_reg_2744_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_reg_2744_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_reg_2744_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_reg_2744_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_reg_2744_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_reg_2744_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_reg_2744_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_fu_1395_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_reg_2749 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_reg_2749_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_reg_2749_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_reg_2749_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_reg_2749_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_reg_2749_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_reg_2749_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_reg_2749_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_reg_2749_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_1_reg_2749_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln46_1_fu_1407_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln46_1_reg_2755 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln42_fu_1413_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln37_4_fu_1425_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln34_fu_1436_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln34_reg_2770 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln46_fu_1518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_reg_2775_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_reg_2775_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_reg_2775_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_reg_2775_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_reg_2775_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_reg_2775_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_reg_2775_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln49_1_fu_1542_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln49_1_reg_2779 : STD_LOGIC_VECTOR (22 downto 0);
    signal fm_addr_reg_2784 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_2533_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln47_reg_2790 : STD_LOGIC_VECTOR (11 downto 0);
    signal fm_addr_read_reg_2795 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_32_fu_1597_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_32_reg_2800 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal empty_33_fu_1600_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_33_reg_2807 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_bias_buf_pong_V_0_1_load_reg_2811 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_pong_V_1_1_load_reg_2816 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_pong_V_2_1_load_reg_2821 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_pong_V_3_1_load_reg_2826 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_1603_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln_reg_2831 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal zext_ln130_4_fu_1639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln130_4_reg_2837 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln119_3_fu_1643_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln119_3_reg_2842 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln119_1_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_1_reg_2848_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_34_fu_1670_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_34_reg_2852 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln122_1_fu_1681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_1_reg_2857 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_1_reg_2857_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_1_reg_2857_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid163_fu_1691_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid163_reg_2866 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln119_5_fu_1696_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln119_5_reg_2871 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal trunc_ln119_1_fu_1704_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln119_1_reg_2876 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln119_1_reg_2876_pp1_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln119_1_reg_2876_pp1_iter13_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln119_1_reg_2876_pp1_iter14_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln122_7_fu_1714_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln130_fu_2541_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln130_reg_2886 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln130_3_fu_2547_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln130_3_reg_2891 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln119_1_fu_1746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_1_reg_2896 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_1_reg_2896_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln122_fu_1752_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln122_reg_2901 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln122_3_fu_1763_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln122_3_reg_2906 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln122_4_fu_1771_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln122_4_reg_2911 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal add_ln125_fu_1779_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln130_8_fu_1788_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_8_reg_2923 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_10_fu_1827_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_10_reg_2929 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_17_fu_1836_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_17_reg_2934 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_20_fu_1898_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_20_reg_2940 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln1495_3_fu_1907_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1495_3_reg_2945 : STD_LOGIC_VECTOR (8 downto 0);
    signal fm_addr_2_reg_2970 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_38_fu_2000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln128_fu_2031_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln128_reg_2980 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_40_fu_2039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_40_reg_2985_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_40_reg_2985_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_40_reg_2985_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_40_reg_2985_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln114_reg_2989 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal grp_fu_1037_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln115_reg_2993 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_bias_buf_pong_V_0_1_load_1_reg_2998 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal conv_bias_buf_pong_V_1_1_load_1_reg_3003 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_pong_V_2_1_load_1_reg_3008 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_pong_V_3_1_load_1_reg_3013 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal icmp_ln141_reg_3206 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln75_fu_2069_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln75_reg_3038 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln65_1_fu_2080_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln65_1_reg_3043 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln114_1_fu_2087_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln114_1_reg_3048 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal zext_ln130_3_fu_2123_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln130_3_reg_3054 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln119_2_fu_2127_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln119_2_reg_3059 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal icmp_ln119_fu_2133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln119_reg_3065_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_41_fu_2154_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_41_reg_3069 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln122_fu_2165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_reg_3074 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_reg_3074_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_reg_3074_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid1119_fu_2175_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid1119_reg_3083 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln119_1_fu_2180_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln119_1_reg_3088 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp2_iter11 : STD_LOGIC := '0';
    signal trunc_ln119_fu_2188_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln119_reg_3093 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln119_reg_3093_pp2_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln119_reg_3093_pp2_iter13_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln119_reg_3093_pp2_iter14_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln122_6_fu_2198_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln130_1_fu_2553_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln130_1_reg_3103 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln130_2_fu_2559_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln130_2_reg_3108 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln119_fu_2230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_3113 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln119_reg_3113_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln122_1_fu_2236_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln122_1_reg_3118 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln122_fu_2247_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln122_reg_3123 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln122_1_fu_2255_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln122_1_reg_3128 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp2_iter12 : STD_LOGIC := '0';
    signal add_ln125_1_fu_2263_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln130_4_fu_2272_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_4_reg_3140 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_2_fu_2311_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_2_reg_3146 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_12_fu_2320_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_12_reg_3151 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_15_fu_2382_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_15_reg_3157 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln1495_1_fu_2391_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1495_1_reg_3162 : STD_LOGIC_VECTOR (8 downto 0);
    signal fm_addr_1_reg_3187 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_45_fu_2484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln128_1_fu_2515_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln128_1_reg_3197 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_47_fu_2523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_47_reg_3202_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_47_reg_3202_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_47_reg_3202_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_47_reg_3202_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal add_ln142_reg_3210 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal grp_conv_7x7_fu_937_ap_ready : STD_LOGIC;
    signal grp_conv_7x7_fu_937_ap_done : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter14_state34 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter20 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter14 : STD_LOGIC := '0';
    signal ap_condition_pp2_exit_iter14_state60 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter20 : STD_LOGIC := '0';
    signal conv_in_buf_V_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_in_buf_V_0_ce0 : STD_LOGIC;
    signal conv_in_buf_V_0_we0 : STD_LOGIC;
    signal conv_in_buf_V_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_in_buf_V_0_ce1 : STD_LOGIC;
    signal conv_in_buf_V_0_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_in_buf_V_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_in_buf_V_1_ce0 : STD_LOGIC;
    signal conv_in_buf_V_1_we0 : STD_LOGIC;
    signal conv_in_buf_V_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_in_buf_V_1_ce1 : STD_LOGIC;
    signal conv_in_buf_V_1_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_in_buf_V_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_in_buf_V_2_ce0 : STD_LOGIC;
    signal conv_in_buf_V_2_we0 : STD_LOGIC;
    signal conv_in_buf_V_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_in_buf_V_2_ce1 : STD_LOGIC;
    signal conv_in_buf_V_2_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_ping_V_0_ce0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_0_we0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_0_ce1 : STD_LOGIC;
    signal conv_wt_buf_ping_V_0_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_ping_V_1_ce0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_1_we0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_1_ce1 : STD_LOGIC;
    signal conv_wt_buf_ping_V_1_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_ping_V_2_ce0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_2_we0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_2_ce1 : STD_LOGIC;
    signal conv_wt_buf_ping_V_2_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_ping_V_3_ce0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_3_we0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_3_ce1 : STD_LOGIC;
    signal conv_wt_buf_ping_V_3_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_ping_V_4_ce0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_4_we0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_4_ce1 : STD_LOGIC;
    signal conv_wt_buf_ping_V_4_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_ping_V_5_ce0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_5_we0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_5_ce1 : STD_LOGIC;
    signal conv_wt_buf_ping_V_5_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_ping_V_6_ce0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_6_we0 : STD_LOGIC;
    signal conv_wt_buf_ping_V_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_ping_V_6_ce1 : STD_LOGIC;
    signal conv_wt_buf_ping_V_6_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_pong_V_0_ce0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_0_we0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_0_ce1 : STD_LOGIC;
    signal conv_wt_buf_pong_V_0_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_pong_V_1_ce0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_1_we0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_1_ce1 : STD_LOGIC;
    signal conv_wt_buf_pong_V_1_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_pong_V_2_ce0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_2_we0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_2_ce1 : STD_LOGIC;
    signal conv_wt_buf_pong_V_2_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_pong_V_3_ce0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_3_we0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_3_ce1 : STD_LOGIC;
    signal conv_wt_buf_pong_V_3_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_pong_V_4_ce0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_4_we0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_4_ce1 : STD_LOGIC;
    signal conv_wt_buf_pong_V_4_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_pong_V_5_ce0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_5_we0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_5_ce1 : STD_LOGIC;
    signal conv_wt_buf_pong_V_5_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_wt_buf_pong_V_6_ce0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_6_we0 : STD_LOGIC;
    signal conv_wt_buf_pong_V_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_pong_V_6_ce1 : STD_LOGIC;
    signal conv_wt_buf_pong_V_6_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_out_buf_0_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_out_buf_0_V_ce0 : STD_LOGIC;
    signal conv_out_buf_0_V_we0 : STD_LOGIC;
    signal conv_out_buf_0_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_out_buf_0_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_out_buf_1_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_out_buf_1_V_ce0 : STD_LOGIC;
    signal conv_out_buf_1_V_we0 : STD_LOGIC;
    signal conv_out_buf_1_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_out_buf_2_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_out_buf_2_V_ce0 : STD_LOGIC;
    signal conv_out_buf_2_V_we0 : STD_LOGIC;
    signal conv_out_buf_2_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_out_buf_3_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv_out_buf_3_V_ce0 : STD_LOGIC;
    signal conv_out_buf_3_V_we0 : STD_LOGIC;
    signal conv_out_buf_3_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_ap_start : STD_LOGIC;
    signal grp_conv_7x7_fu_937_ap_idle : STD_LOGIC;
    signal grp_conv_7x7_fu_937_Y_buf_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_conv_7x7_fu_937_Y_buf_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_Y_buf_we0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_Y_buf_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_Y_buf1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_conv_7x7_fu_937_Y_buf1_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_Y_buf1_we0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_Y_buf1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_Y_buf2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_conv_7x7_fu_937_Y_buf2_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_Y_buf2_we0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_Y_buf2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_Y_buf3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_conv_7x7_fu_937_Y_buf3_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_Y_buf3_we0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_Y_buf3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_X_buf_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv_7x7_fu_937_X_buf_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_X_buf_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv_7x7_fu_937_X_buf_ce1 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_X_buf4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv_7x7_fu_937_X_buf4_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_X_buf4_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv_7x7_fu_937_X_buf4_ce1 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_X_buf5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv_7x7_fu_937_X_buf5_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_X_buf5_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv_7x7_fu_937_X_buf5_ce1 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf_ce1 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf6_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf6_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf6_ce1 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf6_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf7_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf7_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf7_ce1 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf7_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf8_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf8_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf8_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf8_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf8_ce1 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf8_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf9_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf9_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf9_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf9_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf9_ce1 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf9_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf10_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf10_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf10_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf10_ce1 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf10_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf11_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf11_ce0 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf11_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_W_buf11_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_7x7_fu_937_W_buf11_ce1 : STD_LOGIC;
    signal grp_conv_7x7_fu_937_W_buf11_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_p_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_p_read1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_p_read2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_p_read3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_ap_start : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_ap_done : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_ap_idle : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_ap_ready : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWVALID : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WVALID : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WLAST : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARVALID : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_RREADY : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_BREADY : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf_ce0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf_we0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf1_ce0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf1_we0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf2_ce0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf2_we0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf3_ce0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf3_we0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf4_ce0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf4_we0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf4_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf5_ce0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf5_we0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf5_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf6_ce0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf6_we0 : STD_LOGIC;
    signal grp_load_layer_params_from_DRAM_fu_963_weight_buf6_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_p_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_p_read1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_p_read2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_p_read3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_kernel_group : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_layer_params_from_DRAM_fu_963_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten251_reg_532 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ti_reg_543 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten167_reg_554 : STD_LOGIC_VECTOR (10 downto 0);
    signal tj_reg_566 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_bias_buf_ping_V_3_216_reg_578 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_ping_V_2_214_reg_590 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_ping_V_1_212_reg_602 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_ping_V_0_210_reg_614 : STD_LOGIC_VECTOR (15 downto 0);
    signal tk_reg_626 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_c_phi_fu_653_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_i_phi_fu_675_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_697_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter11_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter10_storemerge_reg_693 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_ping_V_3_3_reg_707 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal conv_bias_buf_ping_V_2_3_reg_718 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_ping_V_1_3_reg_729 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_ping_V_0_3_reg_740 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_indvar_flatten97_phi_fu_755_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_f_phi_fu_767_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_i_1_phi_fu_789_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten153_phi_fu_812_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_f_1_phi_fu_824_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_i_2_phi_fu_846_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_bias_buf_ping_V_3_4_reg_865 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_predicate_op439_call_state44 : BOOLEAN;
    signal ap_predicate_op449_call_state44 : BOOLEAN;
    signal ap_block_state44_on_subcall_done : BOOLEAN;
    signal conv_bias_buf_ping_V_2_4_reg_883 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_ping_V_1_4_reg_901 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_ping_V_0_4_reg_919 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv_7x7_fu_937_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_load_layer_params_from_DRAM_fu_963_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal zext_ln47_2_fu_1591_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1495_9_fu_1987_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1495_6_fu_2471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln49_fu_1575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln122_1_fu_1983_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln122_fu_2467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln130_12_fu_2045_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal zext_ln130_9_fu_2529_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp2_stage0_01001 : BOOLEAN;
    signal conv_bias_buf_pong_V_0_1_fu_242 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_pong_V_1_1_fu_246 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_pong_V_2_1_fu_250 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_pong_V_3_1_fu_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_fu_1048_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl_fu_1052_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl7_fu_1064_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_cast_fu_1060_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl7_cast_fu_1072_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln_fu_1082_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln62_fu_1106_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln23_fu_1136_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln23_fu_1136_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln23_fu_1136_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln75_fu_1175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln23_fu_1170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln23_fu_1126_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln23_fu_1181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln24_fu_1193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln65_fu_1187_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_49_fu_1206_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl_mid1_fu_1210_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl7_mid1_fu_1222_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_cast_mid1_fu_1218_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl7_cast_mid1_fu_1230_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_mid1163_fu_1234_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln23_2_fu_1158_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln24_1_fu_1250_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln130_mid1_fu_1240_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln130_6_mid1_fu_1262_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln23_3_fu_1164_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln24_2_fu_1270_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln37_fu_1308_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln34_fu_1329_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln42_fu_1363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln34_fu_1357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_fu_1341_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln37_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln44_fu_1403_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln37_1_fu_1419_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln34_fu_1436_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln34_fu_1436_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln37_1_fu_1452_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln39_1_fu_1455_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_mid16_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_2_fu_1442_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln34_3_fu_1447_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln37_3_fu_1473_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln49_1_mid2_v_fu_1480_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln42_mid2_v_fu_1492_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln46_fu_1504_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln46_fu_1507_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln46_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_2_fu_1466_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1524_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln37_fu_1488_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln49_fu_1532_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln49_fu_1536_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln42_mid2_v_cast_fu_1500_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln34_1_fu_1548_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln49_1_fu_1556_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln34_1_fu_1551_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln49_2_fu_1559_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_1565_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal shl_ln130_3_mid_fu_1617_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln130_2_mid_fu_1610_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_6_fu_1628_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln125_3_fu_1624_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_7_fu_1633_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1655_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1661_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln119_1_fu_1666_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln119_fu_1675_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln119_3_fu_1687_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln122_3_fu_1708_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln125_1_fu_1740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln119_1_fu_1735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln119_4_fu_1725_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln122_1_fu_1758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1495_1_fu_1785_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln122_1_fu_1793_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_35_fu_1797_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln130_3_fu_1810_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln130_2_fu_1802_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_9_fu_1822_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln125_1_fu_1818_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln1495_3_fu_1833_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_1848_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl3_cast_fu_1841_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1495_7_fu_1855_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln122_3_fu_1865_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid150_fu_1868_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln130_3_mid1_fu_1881_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln130_2_mid1_fu_1873_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_19_fu_1893_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln125_5_fu_1889_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln1495_2_fu_1859_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1495_8_fu_1904_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln130_6_fu_1913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln130_11_fu_1930_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln119_6_fu_1921_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_21_fu_1933_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_18_fu_1926_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_11_fu_1916_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_1949_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_10_fu_1959_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_7_fu_1939_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal select_ln119_7_fu_1969_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal select_ln122_5_fu_1976_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_1655_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_fu_2006_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_2023_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1495_1_fu_2019_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1661_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln65_1_fu_2074_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln130_5_mid_fu_2101_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln130_4_mid_fu_2094_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_fu_2112_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln125_2_fu_2108_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_3_fu_2117_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_2139_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_2145_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln119_fu_2150_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln119_1_fu_2159_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln119_2_fu_2171_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln122_2_fu_2192_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln125_fu_2224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln119_fu_2219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln119_fu_2209_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln122_fu_2242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1495_fu_2269_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln122_fu_2277_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_42_fu_2281_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln130_5_fu_2294_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln130_4_fu_2286_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_1_fu_2306_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln125_fu_2302_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln1495_2_fu_2317_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_2332_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl1_cast_fu_2325_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1495_4_fu_2339_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln122_2_fu_2349_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid1106_fu_2352_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln130_5_mid1_fu_2365_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln130_4_mid1_fu_2357_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln130_14_fu_2377_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln125_4_fu_2373_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln1495_fu_2343_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1495_5_fu_2388_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln130_5_fu_2397_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln130_8_fu_2414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln119_2_fu_2405_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_16_fu_2417_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_13_fu_2410_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln130_5_fu_2400_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_2433_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_4_fu_2443_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_s_fu_2423_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal select_ln119_3_fu_2453_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal select_ln122_2_fu_2460_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_2139_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_2490_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_2507_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1495_fu_2503_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_2145_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2533_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_2533_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2533_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln130_fu_2541_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln130_fu_2541_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln130_3_fu_2547_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln130_3_fu_2547_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln130_1_fu_2553_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln130_1_fu_2553_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln130_2_fu_2559_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln130_2_fu_2559_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1655_ce : STD_LOGIC;
    signal grp_fu_1661_ce : STD_LOGIC;
    signal grp_fu_2139_ce : STD_LOGIC;
    signal grp_fu_2145_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal grp_fu_2533_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2533_p20 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln130_1_fu_2553_p00 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln130_2_fu_2559_p00 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln130_3_fu_2547_p00 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln130_fu_2541_p00 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln23_fu_1136_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln34_fu_1436_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_condition_1756 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component tiled_conv_conv_7x7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Y_buf_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        Y_buf_ce0 : OUT STD_LOGIC;
        Y_buf_we0 : OUT STD_LOGIC;
        Y_buf_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        Y_buf1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        Y_buf1_ce0 : OUT STD_LOGIC;
        Y_buf1_we0 : OUT STD_LOGIC;
        Y_buf1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        Y_buf2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        Y_buf2_ce0 : OUT STD_LOGIC;
        Y_buf2_we0 : OUT STD_LOGIC;
        Y_buf2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        Y_buf3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        Y_buf3_ce0 : OUT STD_LOGIC;
        Y_buf3_we0 : OUT STD_LOGIC;
        Y_buf3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        X_buf_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        X_buf_ce0 : OUT STD_LOGIC;
        X_buf_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        X_buf_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        X_buf_ce1 : OUT STD_LOGIC;
        X_buf_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        X_buf4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        X_buf4_ce0 : OUT STD_LOGIC;
        X_buf4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        X_buf4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        X_buf4_ce1 : OUT STD_LOGIC;
        X_buf4_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        X_buf5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        X_buf5_ce0 : OUT STD_LOGIC;
        X_buf5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        X_buf5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        X_buf5_ce1 : OUT STD_LOGIC;
        X_buf5_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf_ce0 : OUT STD_LOGIC;
        W_buf_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf_ce1 : OUT STD_LOGIC;
        W_buf_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf6_ce0 : OUT STD_LOGIC;
        W_buf6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf6_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf6_ce1 : OUT STD_LOGIC;
        W_buf6_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf7_ce0 : OUT STD_LOGIC;
        W_buf7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf7_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf7_ce1 : OUT STD_LOGIC;
        W_buf7_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf8_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf8_ce0 : OUT STD_LOGIC;
        W_buf8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf8_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf8_ce1 : OUT STD_LOGIC;
        W_buf8_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf9_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf9_ce0 : OUT STD_LOGIC;
        W_buf9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf9_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf9_ce1 : OUT STD_LOGIC;
        W_buf9_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf10_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf10_ce0 : OUT STD_LOGIC;
        W_buf10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf10_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf10_ce1 : OUT STD_LOGIC;
        W_buf10_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf11_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf11_ce0 : OUT STD_LOGIC;
        W_buf11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        W_buf11_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        W_buf11_ce1 : OUT STD_LOGIC;
        W_buf11_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_load_layer_params_from_DRAM IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_wt_AWVALID : OUT STD_LOGIC;
        m_axi_wt_AWREADY : IN STD_LOGIC;
        m_axi_wt_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_wt_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_wt_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_WVALID : OUT STD_LOGIC;
        m_axi_wt_WREADY : IN STD_LOGIC;
        m_axi_wt_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_wt_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_WLAST : OUT STD_LOGIC;
        m_axi_wt_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_ARVALID : OUT STD_LOGIC;
        m_axi_wt_ARREADY : IN STD_LOGIC;
        m_axi_wt_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_wt_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_wt_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RVALID : IN STD_LOGIC;
        m_axi_wt_RREADY : OUT STD_LOGIC;
        m_axi_wt_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_wt_RLAST : IN STD_LOGIC;
        m_axi_wt_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_BVALID : IN STD_LOGIC;
        m_axi_wt_BREADY : OUT STD_LOGIC;
        m_axi_wt_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        weight_buf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        weight_buf_ce0 : OUT STD_LOGIC;
        weight_buf_we0 : OUT STD_LOGIC;
        weight_buf_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buf1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        weight_buf1_ce0 : OUT STD_LOGIC;
        weight_buf1_we0 : OUT STD_LOGIC;
        weight_buf1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buf2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        weight_buf2_ce0 : OUT STD_LOGIC;
        weight_buf2_we0 : OUT STD_LOGIC;
        weight_buf2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buf3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        weight_buf3_ce0 : OUT STD_LOGIC;
        weight_buf3_we0 : OUT STD_LOGIC;
        weight_buf3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buf4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        weight_buf4_ce0 : OUT STD_LOGIC;
        weight_buf4_we0 : OUT STD_LOGIC;
        weight_buf4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buf5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        weight_buf5_ce0 : OUT STD_LOGIC;
        weight_buf5_we0 : OUT STD_LOGIC;
        weight_buf5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weight_buf6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        weight_buf6_ce0 : OUT STD_LOGIC;
        weight_buf6_we0 : OUT STD_LOGIC;
        weight_buf6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
        weights : IN STD_LOGIC_VECTOR (63 downto 0);
        bias : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_group : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_mul_5ns_7ns_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component tiled_conv_mul_2ns_22ns_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component tiled_conv_urem_11ns_6ns_11_15_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component tiled_conv_mux_42_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_mac_muladd_6ns_7ns_6ns_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component tiled_conv_mul_mul_6ns_20ns_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (19 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component tiled_conv_conv_in_buf_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_conv_wt_buf_ping_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_conv_out_buf_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_feature_map : OUT STD_LOGIC_VECTOR (63 downto 0);
        layer_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        layer_bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_feature_map : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component tiled_conv_fm_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component tiled_conv_wt_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    control_s_axi_U : component tiled_conv_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_feature_map => input_feature_map,
        layer_weights => layer_weights,
        layer_bias => layer_bias,
        output_feature_map => output_feature_map,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    fm_m_axi_U : component tiled_conv_fm_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 16,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_FM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_FM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_FM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_FM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_FM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_FM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_FM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_FM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_FM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_FM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_FM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_fm_AWVALID,
        AWREADY => m_axi_fm_AWREADY,
        AWADDR => m_axi_fm_AWADDR,
        AWID => m_axi_fm_AWID,
        AWLEN => m_axi_fm_AWLEN,
        AWSIZE => m_axi_fm_AWSIZE,
        AWBURST => m_axi_fm_AWBURST,
        AWLOCK => m_axi_fm_AWLOCK,
        AWCACHE => m_axi_fm_AWCACHE,
        AWPROT => m_axi_fm_AWPROT,
        AWQOS => m_axi_fm_AWQOS,
        AWREGION => m_axi_fm_AWREGION,
        AWUSER => m_axi_fm_AWUSER,
        WVALID => m_axi_fm_WVALID,
        WREADY => m_axi_fm_WREADY,
        WDATA => m_axi_fm_WDATA,
        WSTRB => m_axi_fm_WSTRB,
        WLAST => m_axi_fm_WLAST,
        WID => m_axi_fm_WID,
        WUSER => m_axi_fm_WUSER,
        ARVALID => m_axi_fm_ARVALID,
        ARREADY => m_axi_fm_ARREADY,
        ARADDR => m_axi_fm_ARADDR,
        ARID => m_axi_fm_ARID,
        ARLEN => m_axi_fm_ARLEN,
        ARSIZE => m_axi_fm_ARSIZE,
        ARBURST => m_axi_fm_ARBURST,
        ARLOCK => m_axi_fm_ARLOCK,
        ARCACHE => m_axi_fm_ARCACHE,
        ARPROT => m_axi_fm_ARPROT,
        ARQOS => m_axi_fm_ARQOS,
        ARREGION => m_axi_fm_ARREGION,
        ARUSER => m_axi_fm_ARUSER,
        RVALID => m_axi_fm_RVALID,
        RREADY => m_axi_fm_RREADY,
        RDATA => m_axi_fm_RDATA,
        RLAST => m_axi_fm_RLAST,
        RID => m_axi_fm_RID,
        RUSER => m_axi_fm_RUSER,
        RRESP => m_axi_fm_RRESP,
        BVALID => m_axi_fm_BVALID,
        BREADY => m_axi_fm_BREADY,
        BRESP => m_axi_fm_BRESP,
        BID => m_axi_fm_BID,
        BUSER => m_axi_fm_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => fm_ARVALID,
        I_ARREADY => fm_ARREADY,
        I_ARADDR => fm_addr_reg_2784,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => fm_RVALID,
        I_RREADY => fm_RREADY,
        I_RDATA => fm_RDATA,
        I_RID => fm_RID,
        I_RUSER => fm_RUSER,
        I_RRESP => fm_RRESP,
        I_RLAST => fm_RLAST,
        I_AWVALID => fm_AWVALID,
        I_AWREADY => fm_AWREADY,
        I_AWADDR => fm_AWADDR,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_14,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => fm_WVALID,
        I_WREADY => fm_WREADY,
        I_WDATA => fm_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv2_3,
        I_BVALID => fm_BVALID,
        I_BREADY => fm_BREADY,
        I_BRESP => fm_BRESP,
        I_BID => fm_BID,
        I_BUSER => fm_BUSER);

    wt_m_axi_U : component tiled_conv_wt_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 16,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_WT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_WT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_WT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_WT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_WT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_WT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_WT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_WT_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_WT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_WT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_WT_CACHE_VALUE)
    port map (
        AWVALID => m_axi_wt_AWVALID,
        AWREADY => m_axi_wt_AWREADY,
        AWADDR => m_axi_wt_AWADDR,
        AWID => m_axi_wt_AWID,
        AWLEN => m_axi_wt_AWLEN,
        AWSIZE => m_axi_wt_AWSIZE,
        AWBURST => m_axi_wt_AWBURST,
        AWLOCK => m_axi_wt_AWLOCK,
        AWCACHE => m_axi_wt_AWCACHE,
        AWPROT => m_axi_wt_AWPROT,
        AWQOS => m_axi_wt_AWQOS,
        AWREGION => m_axi_wt_AWREGION,
        AWUSER => m_axi_wt_AWUSER,
        WVALID => m_axi_wt_WVALID,
        WREADY => m_axi_wt_WREADY,
        WDATA => m_axi_wt_WDATA,
        WSTRB => m_axi_wt_WSTRB,
        WLAST => m_axi_wt_WLAST,
        WID => m_axi_wt_WID,
        WUSER => m_axi_wt_WUSER,
        ARVALID => m_axi_wt_ARVALID,
        ARREADY => m_axi_wt_ARREADY,
        ARADDR => m_axi_wt_ARADDR,
        ARID => m_axi_wt_ARID,
        ARLEN => m_axi_wt_ARLEN,
        ARSIZE => m_axi_wt_ARSIZE,
        ARBURST => m_axi_wt_ARBURST,
        ARLOCK => m_axi_wt_ARLOCK,
        ARCACHE => m_axi_wt_ARCACHE,
        ARPROT => m_axi_wt_ARPROT,
        ARQOS => m_axi_wt_ARQOS,
        ARREGION => m_axi_wt_ARREGION,
        ARUSER => m_axi_wt_ARUSER,
        RVALID => m_axi_wt_RVALID,
        RREADY => m_axi_wt_RREADY,
        RDATA => m_axi_wt_RDATA,
        RLAST => m_axi_wt_RLAST,
        RID => m_axi_wt_RID,
        RUSER => m_axi_wt_RUSER,
        RRESP => m_axi_wt_RRESP,
        BVALID => m_axi_wt_BVALID,
        BREADY => m_axi_wt_BREADY,
        BRESP => m_axi_wt_BRESP,
        BID => m_axi_wt_BID,
        BUSER => m_axi_wt_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => wt_ARVALID,
        I_ARREADY => wt_ARREADY,
        I_ARADDR => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARADDR,
        I_ARID => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARID,
        I_ARLEN => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARLEN,
        I_ARSIZE => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARSIZE,
        I_ARLOCK => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARLOCK,
        I_ARCACHE => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARCACHE,
        I_ARQOS => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARQOS,
        I_ARPROT => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARPROT,
        I_ARUSER => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARUSER,
        I_ARBURST => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARBURST,
        I_ARREGION => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARREGION,
        I_RVALID => wt_RVALID,
        I_RREADY => wt_RREADY,
        I_RDATA => wt_RDATA,
        I_RID => wt_RID,
        I_RUSER => wt_RUSER,
        I_RRESP => wt_RRESP,
        I_RLAST => wt_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => wt_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => wt_WREADY,
        I_WDATA => ap_const_lv16_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv2_0,
        I_BVALID => wt_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => wt_BRESP,
        I_BID => wt_BID,
        I_BUSER => wt_BUSER);

    conv_in_buf_V_0_U : component tiled_conv_conv_in_buf_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 2392,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_in_buf_V_0_address0,
        ce0 => conv_in_buf_V_0_ce0,
        we0 => conv_in_buf_V_0_we0,
        d0 => ap_phi_mux_storemerge_phi_fu_697_p4,
        q0 => conv_in_buf_V_0_q0,
        address1 => grp_conv_7x7_fu_937_X_buf_address1,
        ce1 => conv_in_buf_V_0_ce1,
        q1 => conv_in_buf_V_0_q1);

    conv_in_buf_V_1_U : component tiled_conv_conv_in_buf_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 2392,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_in_buf_V_1_address0,
        ce0 => conv_in_buf_V_1_ce0,
        we0 => conv_in_buf_V_1_we0,
        d0 => ap_phi_mux_storemerge_phi_fu_697_p4,
        q0 => conv_in_buf_V_1_q0,
        address1 => grp_conv_7x7_fu_937_X_buf4_address1,
        ce1 => conv_in_buf_V_1_ce1,
        q1 => conv_in_buf_V_1_q1);

    conv_in_buf_V_2_U : component tiled_conv_conv_in_buf_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 2392,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_in_buf_V_2_address0,
        ce0 => conv_in_buf_V_2_ce0,
        we0 => conv_in_buf_V_2_we0,
        d0 => ap_phi_mux_storemerge_phi_fu_697_p4,
        q0 => conv_in_buf_V_2_q0,
        address1 => grp_conv_7x7_fu_937_X_buf5_address1,
        ce1 => conv_in_buf_V_2_ce1,
        q1 => conv_in_buf_V_2_q1);

    conv_wt_buf_ping_V_0_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_ping_V_0_address0,
        ce0 => conv_wt_buf_ping_V_0_ce0,
        we0 => conv_wt_buf_ping_V_0_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf_d0,
        q0 => conv_wt_buf_ping_V_0_q0,
        address1 => grp_conv_7x7_fu_937_W_buf_address1,
        ce1 => conv_wt_buf_ping_V_0_ce1,
        q1 => conv_wt_buf_ping_V_0_q1);

    conv_wt_buf_ping_V_1_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_ping_V_1_address0,
        ce0 => conv_wt_buf_ping_V_1_ce0,
        we0 => conv_wt_buf_ping_V_1_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf1_d0,
        q0 => conv_wt_buf_ping_V_1_q0,
        address1 => grp_conv_7x7_fu_937_W_buf6_address1,
        ce1 => conv_wt_buf_ping_V_1_ce1,
        q1 => conv_wt_buf_ping_V_1_q1);

    conv_wt_buf_ping_V_2_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_ping_V_2_address0,
        ce0 => conv_wt_buf_ping_V_2_ce0,
        we0 => conv_wt_buf_ping_V_2_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf2_d0,
        q0 => conv_wt_buf_ping_V_2_q0,
        address1 => grp_conv_7x7_fu_937_W_buf7_address1,
        ce1 => conv_wt_buf_ping_V_2_ce1,
        q1 => conv_wt_buf_ping_V_2_q1);

    conv_wt_buf_ping_V_3_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_ping_V_3_address0,
        ce0 => conv_wt_buf_ping_V_3_ce0,
        we0 => conv_wt_buf_ping_V_3_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf3_d0,
        q0 => conv_wt_buf_ping_V_3_q0,
        address1 => grp_conv_7x7_fu_937_W_buf8_address1,
        ce1 => conv_wt_buf_ping_V_3_ce1,
        q1 => conv_wt_buf_ping_V_3_q1);

    conv_wt_buf_ping_V_4_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_ping_V_4_address0,
        ce0 => conv_wt_buf_ping_V_4_ce0,
        we0 => conv_wt_buf_ping_V_4_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf4_d0,
        q0 => conv_wt_buf_ping_V_4_q0,
        address1 => grp_conv_7x7_fu_937_W_buf9_address1,
        ce1 => conv_wt_buf_ping_V_4_ce1,
        q1 => conv_wt_buf_ping_V_4_q1);

    conv_wt_buf_ping_V_5_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_ping_V_5_address0,
        ce0 => conv_wt_buf_ping_V_5_ce0,
        we0 => conv_wt_buf_ping_V_5_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf5_d0,
        q0 => conv_wt_buf_ping_V_5_q0,
        address1 => grp_conv_7x7_fu_937_W_buf10_address1,
        ce1 => conv_wt_buf_ping_V_5_ce1,
        q1 => conv_wt_buf_ping_V_5_q1);

    conv_wt_buf_ping_V_6_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_ping_V_6_address0,
        ce0 => conv_wt_buf_ping_V_6_ce0,
        we0 => conv_wt_buf_ping_V_6_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf6_d0,
        q0 => conv_wt_buf_ping_V_6_q0,
        address1 => grp_conv_7x7_fu_937_W_buf11_address1,
        ce1 => conv_wt_buf_ping_V_6_ce1,
        q1 => conv_wt_buf_ping_V_6_q1);

    conv_wt_buf_pong_V_0_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_pong_V_0_address0,
        ce0 => conv_wt_buf_pong_V_0_ce0,
        we0 => conv_wt_buf_pong_V_0_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf_d0,
        q0 => conv_wt_buf_pong_V_0_q0,
        address1 => grp_conv_7x7_fu_937_W_buf_address1,
        ce1 => conv_wt_buf_pong_V_0_ce1,
        q1 => conv_wt_buf_pong_V_0_q1);

    conv_wt_buf_pong_V_1_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_pong_V_1_address0,
        ce0 => conv_wt_buf_pong_V_1_ce0,
        we0 => conv_wt_buf_pong_V_1_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf1_d0,
        q0 => conv_wt_buf_pong_V_1_q0,
        address1 => grp_conv_7x7_fu_937_W_buf6_address1,
        ce1 => conv_wt_buf_pong_V_1_ce1,
        q1 => conv_wt_buf_pong_V_1_q1);

    conv_wt_buf_pong_V_2_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_pong_V_2_address0,
        ce0 => conv_wt_buf_pong_V_2_ce0,
        we0 => conv_wt_buf_pong_V_2_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf2_d0,
        q0 => conv_wt_buf_pong_V_2_q0,
        address1 => grp_conv_7x7_fu_937_W_buf7_address1,
        ce1 => conv_wt_buf_pong_V_2_ce1,
        q1 => conv_wt_buf_pong_V_2_q1);

    conv_wt_buf_pong_V_3_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_pong_V_3_address0,
        ce0 => conv_wt_buf_pong_V_3_ce0,
        we0 => conv_wt_buf_pong_V_3_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf3_d0,
        q0 => conv_wt_buf_pong_V_3_q0,
        address1 => grp_conv_7x7_fu_937_W_buf8_address1,
        ce1 => conv_wt_buf_pong_V_3_ce1,
        q1 => conv_wt_buf_pong_V_3_q1);

    conv_wt_buf_pong_V_4_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_pong_V_4_address0,
        ce0 => conv_wt_buf_pong_V_4_ce0,
        we0 => conv_wt_buf_pong_V_4_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf4_d0,
        q0 => conv_wt_buf_pong_V_4_q0,
        address1 => grp_conv_7x7_fu_937_W_buf9_address1,
        ce1 => conv_wt_buf_pong_V_4_ce1,
        q1 => conv_wt_buf_pong_V_4_q1);

    conv_wt_buf_pong_V_5_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_pong_V_5_address0,
        ce0 => conv_wt_buf_pong_V_5_ce0,
        we0 => conv_wt_buf_pong_V_5_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf5_d0,
        q0 => conv_wt_buf_pong_V_5_q0,
        address1 => grp_conv_7x7_fu_937_W_buf10_address1,
        ce1 => conv_wt_buf_pong_V_5_ce1,
        q1 => conv_wt_buf_pong_V_5_q1);

    conv_wt_buf_pong_V_6_U : component tiled_conv_conv_wt_buf_ping_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_pong_V_6_address0,
        ce0 => conv_wt_buf_pong_V_6_ce0,
        we0 => conv_wt_buf_pong_V_6_we0,
        d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf6_d0,
        q0 => conv_wt_buf_pong_V_6_q0,
        address1 => grp_conv_7x7_fu_937_W_buf11_address1,
        ce1 => conv_wt_buf_pong_V_6_ce1,
        q1 => conv_wt_buf_pong_V_6_q1);

    conv_out_buf_0_V_U : component tiled_conv_conv_out_buf_0_V
    generic map (
        DataWidth => 16,
        AddressRange => 460,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_out_buf_0_V_address0,
        ce0 => conv_out_buf_0_V_ce0,
        we0 => conv_out_buf_0_V_we0,
        d0 => conv_out_buf_0_V_d0,
        q0 => conv_out_buf_0_V_q0);

    conv_out_buf_1_V_U : component tiled_conv_conv_out_buf_0_V
    generic map (
        DataWidth => 16,
        AddressRange => 460,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_out_buf_1_V_address0,
        ce0 => conv_out_buf_1_V_ce0,
        we0 => conv_out_buf_1_V_we0,
        d0 => grp_conv_7x7_fu_937_Y_buf1_d0,
        q0 => conv_out_buf_1_V_q0);

    conv_out_buf_2_V_U : component tiled_conv_conv_out_buf_0_V
    generic map (
        DataWidth => 16,
        AddressRange => 460,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_out_buf_2_V_address0,
        ce0 => conv_out_buf_2_V_ce0,
        we0 => conv_out_buf_2_V_we0,
        d0 => grp_conv_7x7_fu_937_Y_buf2_d0,
        q0 => conv_out_buf_2_V_q0);

    conv_out_buf_3_V_U : component tiled_conv_conv_out_buf_0_V
    generic map (
        DataWidth => 16,
        AddressRange => 460,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_out_buf_3_V_address0,
        ce0 => conv_out_buf_3_V_ce0,
        we0 => conv_out_buf_3_V_we0,
        d0 => grp_conv_7x7_fu_937_Y_buf3_d0,
        q0 => conv_out_buf_3_V_q0);

    grp_conv_7x7_fu_937 : component tiled_conv_conv_7x7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_7x7_fu_937_ap_start,
        ap_done => grp_conv_7x7_fu_937_ap_done,
        ap_idle => grp_conv_7x7_fu_937_ap_idle,
        ap_ready => grp_conv_7x7_fu_937_ap_ready,
        Y_buf_address0 => grp_conv_7x7_fu_937_Y_buf_address0,
        Y_buf_ce0 => grp_conv_7x7_fu_937_Y_buf_ce0,
        Y_buf_we0 => grp_conv_7x7_fu_937_Y_buf_we0,
        Y_buf_d0 => grp_conv_7x7_fu_937_Y_buf_d0,
        Y_buf1_address0 => grp_conv_7x7_fu_937_Y_buf1_address0,
        Y_buf1_ce0 => grp_conv_7x7_fu_937_Y_buf1_ce0,
        Y_buf1_we0 => grp_conv_7x7_fu_937_Y_buf1_we0,
        Y_buf1_d0 => grp_conv_7x7_fu_937_Y_buf1_d0,
        Y_buf2_address0 => grp_conv_7x7_fu_937_Y_buf2_address0,
        Y_buf2_ce0 => grp_conv_7x7_fu_937_Y_buf2_ce0,
        Y_buf2_we0 => grp_conv_7x7_fu_937_Y_buf2_we0,
        Y_buf2_d0 => grp_conv_7x7_fu_937_Y_buf2_d0,
        Y_buf3_address0 => grp_conv_7x7_fu_937_Y_buf3_address0,
        Y_buf3_ce0 => grp_conv_7x7_fu_937_Y_buf3_ce0,
        Y_buf3_we0 => grp_conv_7x7_fu_937_Y_buf3_we0,
        Y_buf3_d0 => grp_conv_7x7_fu_937_Y_buf3_d0,
        X_buf_address0 => grp_conv_7x7_fu_937_X_buf_address0,
        X_buf_ce0 => grp_conv_7x7_fu_937_X_buf_ce0,
        X_buf_q0 => conv_in_buf_V_0_q0,
        X_buf_address1 => grp_conv_7x7_fu_937_X_buf_address1,
        X_buf_ce1 => grp_conv_7x7_fu_937_X_buf_ce1,
        X_buf_q1 => conv_in_buf_V_0_q1,
        X_buf4_address0 => grp_conv_7x7_fu_937_X_buf4_address0,
        X_buf4_ce0 => grp_conv_7x7_fu_937_X_buf4_ce0,
        X_buf4_q0 => conv_in_buf_V_1_q0,
        X_buf4_address1 => grp_conv_7x7_fu_937_X_buf4_address1,
        X_buf4_ce1 => grp_conv_7x7_fu_937_X_buf4_ce1,
        X_buf4_q1 => conv_in_buf_V_1_q1,
        X_buf5_address0 => grp_conv_7x7_fu_937_X_buf5_address0,
        X_buf5_ce0 => grp_conv_7x7_fu_937_X_buf5_ce0,
        X_buf5_q0 => conv_in_buf_V_2_q0,
        X_buf5_address1 => grp_conv_7x7_fu_937_X_buf5_address1,
        X_buf5_ce1 => grp_conv_7x7_fu_937_X_buf5_ce1,
        X_buf5_q1 => conv_in_buf_V_2_q1,
        W_buf_address0 => grp_conv_7x7_fu_937_W_buf_address0,
        W_buf_ce0 => grp_conv_7x7_fu_937_W_buf_ce0,
        W_buf_q0 => grp_conv_7x7_fu_937_W_buf_q0,
        W_buf_address1 => grp_conv_7x7_fu_937_W_buf_address1,
        W_buf_ce1 => grp_conv_7x7_fu_937_W_buf_ce1,
        W_buf_q1 => grp_conv_7x7_fu_937_W_buf_q1,
        W_buf6_address0 => grp_conv_7x7_fu_937_W_buf6_address0,
        W_buf6_ce0 => grp_conv_7x7_fu_937_W_buf6_ce0,
        W_buf6_q0 => grp_conv_7x7_fu_937_W_buf6_q0,
        W_buf6_address1 => grp_conv_7x7_fu_937_W_buf6_address1,
        W_buf6_ce1 => grp_conv_7x7_fu_937_W_buf6_ce1,
        W_buf6_q1 => grp_conv_7x7_fu_937_W_buf6_q1,
        W_buf7_address0 => grp_conv_7x7_fu_937_W_buf7_address0,
        W_buf7_ce0 => grp_conv_7x7_fu_937_W_buf7_ce0,
        W_buf7_q0 => grp_conv_7x7_fu_937_W_buf7_q0,
        W_buf7_address1 => grp_conv_7x7_fu_937_W_buf7_address1,
        W_buf7_ce1 => grp_conv_7x7_fu_937_W_buf7_ce1,
        W_buf7_q1 => grp_conv_7x7_fu_937_W_buf7_q1,
        W_buf8_address0 => grp_conv_7x7_fu_937_W_buf8_address0,
        W_buf8_ce0 => grp_conv_7x7_fu_937_W_buf8_ce0,
        W_buf8_q0 => grp_conv_7x7_fu_937_W_buf8_q0,
        W_buf8_address1 => grp_conv_7x7_fu_937_W_buf8_address1,
        W_buf8_ce1 => grp_conv_7x7_fu_937_W_buf8_ce1,
        W_buf8_q1 => grp_conv_7x7_fu_937_W_buf8_q1,
        W_buf9_address0 => grp_conv_7x7_fu_937_W_buf9_address0,
        W_buf9_ce0 => grp_conv_7x7_fu_937_W_buf9_ce0,
        W_buf9_q0 => grp_conv_7x7_fu_937_W_buf9_q0,
        W_buf9_address1 => grp_conv_7x7_fu_937_W_buf9_address1,
        W_buf9_ce1 => grp_conv_7x7_fu_937_W_buf9_ce1,
        W_buf9_q1 => grp_conv_7x7_fu_937_W_buf9_q1,
        W_buf10_address0 => grp_conv_7x7_fu_937_W_buf10_address0,
        W_buf10_ce0 => grp_conv_7x7_fu_937_W_buf10_ce0,
        W_buf10_q0 => grp_conv_7x7_fu_937_W_buf10_q0,
        W_buf10_address1 => grp_conv_7x7_fu_937_W_buf10_address1,
        W_buf10_ce1 => grp_conv_7x7_fu_937_W_buf10_ce1,
        W_buf10_q1 => grp_conv_7x7_fu_937_W_buf10_q1,
        W_buf11_address0 => grp_conv_7x7_fu_937_W_buf11_address0,
        W_buf11_ce0 => grp_conv_7x7_fu_937_W_buf11_ce0,
        W_buf11_q0 => grp_conv_7x7_fu_937_W_buf11_q0,
        W_buf11_address1 => grp_conv_7x7_fu_937_W_buf11_address1,
        W_buf11_ce1 => grp_conv_7x7_fu_937_W_buf11_ce1,
        W_buf11_q1 => grp_conv_7x7_fu_937_W_buf11_q1,
        p_read => grp_conv_7x7_fu_937_p_read,
        p_read1 => grp_conv_7x7_fu_937_p_read1,
        p_read2 => grp_conv_7x7_fu_937_p_read2,
        p_read3 => grp_conv_7x7_fu_937_p_read3);

    grp_load_layer_params_from_DRAM_fu_963 : component tiled_conv_load_layer_params_from_DRAM
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_load_layer_params_from_DRAM_fu_963_ap_start,
        ap_done => grp_load_layer_params_from_DRAM_fu_963_ap_done,
        ap_idle => grp_load_layer_params_from_DRAM_fu_963_ap_idle,
        ap_ready => grp_load_layer_params_from_DRAM_fu_963_ap_ready,
        m_axi_wt_AWVALID => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWVALID,
        m_axi_wt_AWREADY => ap_const_logic_0,
        m_axi_wt_AWADDR => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWADDR,
        m_axi_wt_AWID => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWID,
        m_axi_wt_AWLEN => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWLEN,
        m_axi_wt_AWSIZE => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWSIZE,
        m_axi_wt_AWBURST => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWBURST,
        m_axi_wt_AWLOCK => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWLOCK,
        m_axi_wt_AWCACHE => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWCACHE,
        m_axi_wt_AWPROT => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWPROT,
        m_axi_wt_AWQOS => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWQOS,
        m_axi_wt_AWREGION => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWREGION,
        m_axi_wt_AWUSER => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_AWUSER,
        m_axi_wt_WVALID => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WVALID,
        m_axi_wt_WREADY => ap_const_logic_0,
        m_axi_wt_WDATA => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WDATA,
        m_axi_wt_WSTRB => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WSTRB,
        m_axi_wt_WLAST => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WLAST,
        m_axi_wt_WID => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WID,
        m_axi_wt_WUSER => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_WUSER,
        m_axi_wt_ARVALID => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARVALID,
        m_axi_wt_ARREADY => wt_ARREADY,
        m_axi_wt_ARADDR => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARADDR,
        m_axi_wt_ARID => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARID,
        m_axi_wt_ARLEN => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARLEN,
        m_axi_wt_ARSIZE => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARSIZE,
        m_axi_wt_ARBURST => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARBURST,
        m_axi_wt_ARLOCK => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARLOCK,
        m_axi_wt_ARCACHE => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARCACHE,
        m_axi_wt_ARPROT => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARPROT,
        m_axi_wt_ARQOS => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARQOS,
        m_axi_wt_ARREGION => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARREGION,
        m_axi_wt_ARUSER => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARUSER,
        m_axi_wt_RVALID => wt_RVALID,
        m_axi_wt_RREADY => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_RREADY,
        m_axi_wt_RDATA => wt_RDATA,
        m_axi_wt_RLAST => wt_RLAST,
        m_axi_wt_RID => wt_RID,
        m_axi_wt_RUSER => wt_RUSER,
        m_axi_wt_RRESP => wt_RRESP,
        m_axi_wt_BVALID => ap_const_logic_0,
        m_axi_wt_BREADY => grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_BREADY,
        m_axi_wt_BRESP => ap_const_lv2_0,
        m_axi_wt_BID => ap_const_lv1_0,
        m_axi_wt_BUSER => ap_const_lv1_0,
        weight_buf_address0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf_address0,
        weight_buf_ce0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf_ce0,
        weight_buf_we0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf_we0,
        weight_buf_d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf_d0,
        weight_buf1_address0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf1_address0,
        weight_buf1_ce0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf1_ce0,
        weight_buf1_we0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf1_we0,
        weight_buf1_d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf1_d0,
        weight_buf2_address0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf2_address0,
        weight_buf2_ce0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf2_ce0,
        weight_buf2_we0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf2_we0,
        weight_buf2_d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf2_d0,
        weight_buf3_address0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf3_address0,
        weight_buf3_ce0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf3_ce0,
        weight_buf3_we0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf3_we0,
        weight_buf3_d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf3_d0,
        weight_buf4_address0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf4_address0,
        weight_buf4_ce0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf4_ce0,
        weight_buf4_we0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf4_we0,
        weight_buf4_d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf4_d0,
        weight_buf5_address0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf5_address0,
        weight_buf5_ce0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf5_ce0,
        weight_buf5_we0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf5_we0,
        weight_buf5_d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf5_d0,
        weight_buf6_address0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf6_address0,
        weight_buf6_ce0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf6_ce0,
        weight_buf6_we0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf6_we0,
        weight_buf6_d0 => grp_load_layer_params_from_DRAM_fu_963_weight_buf6_d0,
        p_read => grp_load_layer_params_from_DRAM_fu_963_p_read,
        p_read1 => grp_load_layer_params_from_DRAM_fu_963_p_read1,
        p_read2 => grp_load_layer_params_from_DRAM_fu_963_p_read2,
        p_read3 => grp_load_layer_params_from_DRAM_fu_963_p_read3,
        weights => layer_weights_read_reg_2602,
        bias => layer_bias_read_reg_2597,
        kernel_group => grp_load_layer_params_from_DRAM_fu_963_kernel_group,
        ap_return_0 => grp_load_layer_params_from_DRAM_fu_963_ap_return_0,
        ap_return_1 => grp_load_layer_params_from_DRAM_fu_963_ap_return_1,
        ap_return_2 => grp_load_layer_params_from_DRAM_fu_963_ap_return_2,
        ap_return_3 => grp_load_layer_params_from_DRAM_fu_963_ap_return_3);

    mul_5ns_7ns_11_1_1_U54 : component tiled_conv_mul_5ns_7ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 7,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln23_fu_1136_p0,
        din1 => mul_ln23_fu_1136_p1,
        dout => mul_ln23_fu_1136_p2);

    mul_2ns_22ns_23_1_1_U55 : component tiled_conv_mul_2ns_22ns_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        din0 => mul_ln34_fu_1436_p0,
        din1 => mul_ln34_fu_1436_p1,
        dout => mul_ln34_fu_1436_p2);

    urem_11ns_6ns_11_15_1_U56 : component tiled_conv_urem_11ns_6ns_11_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_phi_mux_indvar_flatten97_phi_fu_755_p4,
        din1 => grp_fu_1655_p1,
        ce => grp_fu_1655_ce,
        dout => grp_fu_1655_p2);

    urem_11ns_6ns_11_15_1_U57 : component tiled_conv_urem_11ns_6ns_11_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => add_ln119_3_reg_2842,
        din1 => grp_fu_1661_p1,
        ce => grp_fu_1661_ce,
        dout => grp_fu_1661_p2);

    mux_42_16_1_1_U58 : component tiled_conv_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => conv_out_buf_0_V_q0,
        din1 => conv_out_buf_1_V_q0,
        din2 => conv_out_buf_2_V_q0,
        din3 => conv_out_buf_3_V_q0,
        din4 => trunc_ln119_1_reg_2876_pp1_iter14_reg,
        dout => tmp_1_fu_2006_p6);

    urem_11ns_6ns_11_15_1_U59 : component tiled_conv_urem_11ns_6ns_11_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_phi_mux_indvar_flatten153_phi_fu_812_p4,
        din1 => grp_fu_2139_p1,
        ce => grp_fu_2139_ce,
        dout => grp_fu_2139_p2);

    urem_11ns_6ns_11_15_1_U60 : component tiled_conv_urem_11ns_6ns_11_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => add_ln119_2_reg_3059,
        din1 => grp_fu_2145_p1,
        ce => grp_fu_2145_ce,
        dout => grp_fu_2145_p2);

    mux_42_16_1_1_U61 : component tiled_conv_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => conv_out_buf_0_V_q0,
        din1 => conv_out_buf_1_V_q0,
        din2 => conv_out_buf_2_V_q0,
        din3 => conv_out_buf_3_V_q0,
        din4 => trunc_ln119_reg_3093_pp2_iter14_reg,
        dout => tmp_fu_2490_p6);

    mac_muladd_6ns_7ns_6ns_12_1_1_U62 : component tiled_conv_mac_muladd_6ns_7ns_6ns_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 7,
        din2_WIDTH => 6,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_2533_p0,
        din1 => grp_fu_2533_p1,
        din2 => grp_fu_2533_p2,
        dout => grp_fu_2533_p3);

    mul_mul_6ns_20ns_25_1_1_U63 : component tiled_conv_mul_mul_6ns_20ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 20,
        dout_WIDTH => 25)
    port map (
        din0 => mul_ln130_fu_2541_p0,
        din1 => mul_ln130_fu_2541_p1,
        dout => mul_ln130_fu_2541_p2);

    mul_mul_6ns_20ns_25_1_1_U64 : component tiled_conv_mul_mul_6ns_20ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 20,
        dout_WIDTH => 25)
    port map (
        din0 => mul_ln130_3_fu_2547_p0,
        din1 => mul_ln130_3_fu_2547_p1,
        dout => mul_ln130_3_fu_2547_p2);

    mul_mul_6ns_20ns_25_1_1_U65 : component tiled_conv_mul_mul_6ns_20ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 20,
        dout_WIDTH => 25)
    port map (
        din0 => mul_ln130_1_fu_2553_p0,
        din1 => mul_ln130_1_fu_2553_p1,
        dout => mul_ln130_1_fu_2553_p2);

    mul_mul_6ns_20ns_25_1_1_U66 : component tiled_conv_mul_mul_6ns_20ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 20,
        dout_WIDTH => 25)
    port map (
        din0 => mul_ln130_2_fu_2559_p0,
        din1 => mul_ln130_2_fu_2559_p1,
        dout => mul_ln130_2_fu_2559_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln79_fu_1290_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                elsif (((icmp_ln79_fu_1290_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp1_flush_enable)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter14_state34)) then 
                        ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter13;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                    ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp2_flush_enable)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter14_state60)) then 
                        ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter13;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                    ap_enable_reg_pp2_iter21 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_7x7_fu_937_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_7x7_fu_937_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((empty_33_fu_1600_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_boolean_0 = ap_block_state17_on_subcall_done)))) then 
                    grp_conv_7x7_fu_937_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_7x7_fu_937_ap_ready = ap_const_logic_1)) then 
                    grp_conv_7x7_fu_937_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_layer_params_from_DRAM_fu_963_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_load_layer_params_from_DRAM_fu_963_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    grp_load_layer_params_from_DRAM_fu_963_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_layer_params_from_DRAM_fu_963_ap_ready = ap_const_logic_1)) then 
                    grp_load_layer_params_from_DRAM_fu_963_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_storemerge_reg_693_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1756)) then
                if (((or_ln46_fu_1518_p2 = ap_const_lv1_1) and (icmp_ln34_reg_2717 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter2_storemerge_reg_693 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_storemerge_reg_693 <= ap_phi_reg_pp0_iter1_storemerge_reg_693;
                end if;
            end if; 
        end if;
    end process;

    c_reg_649_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1290_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c_reg_649 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln34_reg_2717 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                c_reg_649 <= select_ln34_1_reg_2727;
            end if; 
        end if;
    end process;

    conv_bias_buf_ping_V_0_3_reg_740_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1290_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                conv_bias_buf_ping_V_0_3_reg_740 <= conv_bias_buf_ping_V_0_210_reg_614;
            elsif (((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_boolean_0 = ap_block_state17_on_subcall_done))) then 
                conv_bias_buf_ping_V_0_3_reg_740 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_0;
            end if; 
        end if;
    end process;

    conv_bias_buf_ping_V_0_4_reg_919_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln141_reg_3206 = ap_const_lv1_1) and (empty_33_reg_2807 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                conv_bias_buf_ping_V_0_4_reg_919 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_0;
            elsif ((((grp_fu_1032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((grp_fu_1032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln114_reg_2989 = ap_const_lv1_1) and (empty_33_reg_2807 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done)))) then 
                conv_bias_buf_ping_V_0_4_reg_919 <= conv_bias_buf_ping_V_0_3_reg_740;
            end if; 
        end if;
    end process;

    conv_bias_buf_ping_V_1_3_reg_729_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1290_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                conv_bias_buf_ping_V_1_3_reg_729 <= conv_bias_buf_ping_V_1_212_reg_602;
            elsif (((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_boolean_0 = ap_block_state17_on_subcall_done))) then 
                conv_bias_buf_ping_V_1_3_reg_729 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_1;
            end if; 
        end if;
    end process;

    conv_bias_buf_ping_V_1_4_reg_901_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln141_reg_3206 = ap_const_lv1_1) and (empty_33_reg_2807 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                conv_bias_buf_ping_V_1_4_reg_901 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_1;
            elsif ((((grp_fu_1032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((grp_fu_1032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln114_reg_2989 = ap_const_lv1_1) and (empty_33_reg_2807 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done)))) then 
                conv_bias_buf_ping_V_1_4_reg_901 <= conv_bias_buf_ping_V_1_3_reg_729;
            end if; 
        end if;
    end process;

    conv_bias_buf_ping_V_2_3_reg_718_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1290_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                conv_bias_buf_ping_V_2_3_reg_718 <= conv_bias_buf_ping_V_2_214_reg_590;
            elsif (((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_boolean_0 = ap_block_state17_on_subcall_done))) then 
                conv_bias_buf_ping_V_2_3_reg_718 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_2;
            end if; 
        end if;
    end process;

    conv_bias_buf_ping_V_2_4_reg_883_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln141_reg_3206 = ap_const_lv1_1) and (empty_33_reg_2807 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                conv_bias_buf_ping_V_2_4_reg_883 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_2;
            elsif ((((grp_fu_1032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((grp_fu_1032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln114_reg_2989 = ap_const_lv1_1) and (empty_33_reg_2807 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done)))) then 
                conv_bias_buf_ping_V_2_4_reg_883 <= conv_bias_buf_ping_V_2_3_reg_718;
            end if; 
        end if;
    end process;

    conv_bias_buf_ping_V_3_3_reg_707_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1290_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                conv_bias_buf_ping_V_3_3_reg_707 <= conv_bias_buf_ping_V_3_216_reg_578;
            elsif (((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_boolean_0 = ap_block_state17_on_subcall_done))) then 
                conv_bias_buf_ping_V_3_3_reg_707 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_3;
            end if; 
        end if;
    end process;

    conv_bias_buf_ping_V_3_4_reg_865_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln141_reg_3206 = ap_const_lv1_1) and (empty_33_reg_2807 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                conv_bias_buf_ping_V_3_4_reg_865 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_3;
            elsif ((((grp_fu_1032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((grp_fu_1032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln114_reg_2989 = ap_const_lv1_1) and (empty_33_reg_2807 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done)))) then 
                conv_bias_buf_ping_V_3_4_reg_865 <= conv_bias_buf_ping_V_3_3_reg_707;
            end if; 
        end if;
    end process;

    f_1_reg_820_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065_pp2_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
                f_1_reg_820 <= select_ln119_1_reg_3088;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                f_1_reg_820 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    f_reg_763_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (icmp_ln119_1_reg_2848_pp1_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                f_reg_763 <= select_ln119_5_reg_2871;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                f_reg_763 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_1_reg_785_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_1_reg_2848_pp1_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1))) then 
                i_1_reg_785 <= select_ln122_4_reg_2911;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                i_1_reg_785 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_2_reg_842_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065_pp2_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter13 = ap_const_logic_1))) then 
                i_2_reg_842 <= select_ln122_1_reg_3128;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                i_2_reg_842 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_reg_671_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1290_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_reg_671 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln34_reg_2717 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i_reg_671 <= select_ln37_1_reg_2749;
            end if; 
        end if;
    end process;

    indvar_flatten108_reg_831_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065_pp2_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter11 = ap_const_logic_1))) then 
                indvar_flatten108_reg_831 <= select_ln122_6_fu_2198_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                indvar_flatten108_reg_831 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten153_reg_808_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
                indvar_flatten153_reg_808 <= add_ln119_2_reg_3059;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                indvar_flatten153_reg_808 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten167_reg_554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                indvar_flatten167_reg_554 <= select_ln65_1_reg_3043;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten167_reg_554 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten251_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                indvar_flatten251_reg_532 <= add_ln62_1_reg_2612;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten251_reg_532 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    indvar_flatten41_reg_638_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1290_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                indvar_flatten41_reg_638 <= ap_const_lv13_0;
            elsif (((icmp_ln34_fu_1323_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten41_reg_638 <= add_ln34_2_fu_1302_p2;
            end if; 
        end if;
    end process;

    indvar_flatten52_reg_774_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (icmp_ln119_1_reg_2848_pp1_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten52_reg_774 <= select_ln122_7_fu_1714_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                indvar_flatten52_reg_774 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indvar_flatten97_reg_751_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln119_1_reg_2848 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
                indvar_flatten97_reg_751 <= add_ln119_3_reg_2842;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                indvar_flatten97_reg_751 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_660_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1290_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                indvar_flatten_reg_660 <= ap_const_lv12_0;
            elsif (((icmp_ln34_fu_1323_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_660 <= select_ln37_4_fu_1425_p3;
            end if; 
        end if;
    end process;

    j_1_reg_854_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065_pp2_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
                j_1_reg_854 <= add_ln125_1_fu_2263_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                j_1_reg_854 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_2_reg_797_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (icmp_ln119_1_reg_2848_pp1_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                j_2_reg_797 <= add_ln125_fu_1779_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then 
                j_2_reg_797 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_reg_682_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1290_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_reg_682 <= ap_const_lv6_0;
            elsif (((icmp_ln34_fu_1323_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j_reg_682 <= add_ln42_fu_1413_p2;
            end if; 
        end if;
    end process;

    ti_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                ti_reg_543 <= select_ln23_1_reg_2640;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                ti_reg_543 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    tj_reg_566_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                tj_reg_566 <= select_ln65_reg_2688;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tj_reg_566 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    tk_reg_626_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                tk_reg_626 <= add_ln75_reg_3038;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tk_reg_626 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_1032_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                add_ln115_reg_2993 <= grp_fu_1037_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                add_ln119_2_reg_3059 <= add_ln119_2_fu_2127_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                add_ln119_3_reg_2842 <= add_ln119_3_fu_1643_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065_pp2_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                add_ln122_1_reg_3118 <= add_ln122_1_fu_2236_p2;
                and_ln119_reg_3113 <= and_ln119_fu_2230_p2;
                mul_ln130_2_reg_3108 <= mul_ln130_2_fu_2559_p2;
                select_ln122_reg_3123 <= select_ln122_fu_2247_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_1_reg_2848_pp1_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                add_ln122_reg_2901 <= add_ln122_fu_1752_p2;
                and_ln119_1_reg_2896 <= and_ln119_1_fu_1746_p2;
                mul_ln130_3_reg_2891 <= mul_ln130_3_fu_2547_p2;
                select_ln122_3_reg_2906 <= select_ln122_3_fu_1763_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln122_1_reg_2857_pp1_iter12_reg = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln119_1_reg_2896) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    add_ln130_10_reg_2929(18 downto 3) <= add_ln130_10_fu_1827_p2(18 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065_pp2_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                add_ln130_12_reg_3151 <= add_ln130_12_fu_2320_p2;
                add_ln1495_1_reg_3162 <= add_ln1495_1_fu_2391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065_pp2_iter12_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln119_reg_3113) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                    add_ln130_15_reg_3157(18 downto 3) <= add_ln130_15_fu_2382_p2(18 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_1_reg_2848_pp1_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                add_ln130_17_reg_2934 <= add_ln130_17_fu_1836_p2;
                add_ln1495_3_reg_2945 <= add_ln1495_3_fu_1907_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_1_reg_2848_pp1_iter12_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln119_1_reg_2896) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    add_ln130_20_reg_2940(18 downto 3) <= add_ln130_20_fu_1898_p2(18 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln119_reg_3113) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln122_reg_3074_pp2_iter12_reg = ap_const_lv1_0))) then
                    add_ln130_2_reg_3146(18 downto 3) <= add_ln130_2_fu_2311_p2(18 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                add_ln130_4_reg_3140 <= add_ln130_4_fu_2272_p2;
                and_ln119_reg_3113_pp2_iter13_reg <= and_ln119_reg_3113;
                empty_41_reg_3069 <= empty_41_fu_2154_p2;
                empty_47_reg_3202_pp2_iter16_reg <= empty_47_reg_3202;
                empty_47_reg_3202_pp2_iter17_reg <= empty_47_reg_3202_pp2_iter16_reg;
                empty_47_reg_3202_pp2_iter18_reg <= empty_47_reg_3202_pp2_iter17_reg;
                empty_47_reg_3202_pp2_iter19_reg <= empty_47_reg_3202_pp2_iter18_reg;
                empty_47_reg_3202_pp2_iter20_reg <= empty_47_reg_3202_pp2_iter19_reg;
                icmp_ln119_reg_3065_pp2_iter10_reg <= icmp_ln119_reg_3065_pp2_iter9_reg;
                icmp_ln119_reg_3065_pp2_iter11_reg <= icmp_ln119_reg_3065_pp2_iter10_reg;
                icmp_ln119_reg_3065_pp2_iter12_reg <= icmp_ln119_reg_3065_pp2_iter11_reg;
                icmp_ln119_reg_3065_pp2_iter13_reg <= icmp_ln119_reg_3065_pp2_iter12_reg;
                icmp_ln119_reg_3065_pp2_iter14_reg <= icmp_ln119_reg_3065_pp2_iter13_reg;
                icmp_ln119_reg_3065_pp2_iter15_reg <= icmp_ln119_reg_3065_pp2_iter14_reg;
                icmp_ln119_reg_3065_pp2_iter2_reg <= icmp_ln119_reg_3065_pp2_iter1_reg;
                icmp_ln119_reg_3065_pp2_iter3_reg <= icmp_ln119_reg_3065_pp2_iter2_reg;
                icmp_ln119_reg_3065_pp2_iter4_reg <= icmp_ln119_reg_3065_pp2_iter3_reg;
                icmp_ln119_reg_3065_pp2_iter5_reg <= icmp_ln119_reg_3065_pp2_iter4_reg;
                icmp_ln119_reg_3065_pp2_iter6_reg <= icmp_ln119_reg_3065_pp2_iter5_reg;
                icmp_ln119_reg_3065_pp2_iter7_reg <= icmp_ln119_reg_3065_pp2_iter6_reg;
                icmp_ln119_reg_3065_pp2_iter8_reg <= icmp_ln119_reg_3065_pp2_iter7_reg;
                icmp_ln119_reg_3065_pp2_iter9_reg <= icmp_ln119_reg_3065_pp2_iter8_reg;
                icmp_ln122_reg_3074_pp2_iter12_reg <= icmp_ln122_reg_3074;
                icmp_ln122_reg_3074_pp2_iter13_reg <= icmp_ln122_reg_3074_pp2_iter12_reg;
                mul_ln130_1_reg_3103 <= mul_ln130_1_fu_2553_p2;
                trunc_ln119_reg_3093_pp2_iter12_reg <= trunc_ln119_reg_3093;
                trunc_ln119_reg_3093_pp2_iter13_reg <= trunc_ln119_reg_3093_pp2_iter12_reg;
                trunc_ln119_reg_3093_pp2_iter14_reg <= trunc_ln119_reg_3093_pp2_iter13_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                add_ln130_8_reg_2923 <= add_ln130_8_fu_1788_p2;
                and_ln119_1_reg_2896_pp1_iter13_reg <= and_ln119_1_reg_2896;
                empty_34_reg_2852 <= empty_34_fu_1670_p2;
                empty_40_reg_2985_pp1_iter16_reg <= empty_40_reg_2985;
                empty_40_reg_2985_pp1_iter17_reg <= empty_40_reg_2985_pp1_iter16_reg;
                empty_40_reg_2985_pp1_iter18_reg <= empty_40_reg_2985_pp1_iter17_reg;
                empty_40_reg_2985_pp1_iter19_reg <= empty_40_reg_2985_pp1_iter18_reg;
                empty_40_reg_2985_pp1_iter20_reg <= empty_40_reg_2985_pp1_iter19_reg;
                icmp_ln119_1_reg_2848_pp1_iter10_reg <= icmp_ln119_1_reg_2848_pp1_iter9_reg;
                icmp_ln119_1_reg_2848_pp1_iter11_reg <= icmp_ln119_1_reg_2848_pp1_iter10_reg;
                icmp_ln119_1_reg_2848_pp1_iter12_reg <= icmp_ln119_1_reg_2848_pp1_iter11_reg;
                icmp_ln119_1_reg_2848_pp1_iter13_reg <= icmp_ln119_1_reg_2848_pp1_iter12_reg;
                icmp_ln119_1_reg_2848_pp1_iter14_reg <= icmp_ln119_1_reg_2848_pp1_iter13_reg;
                icmp_ln119_1_reg_2848_pp1_iter15_reg <= icmp_ln119_1_reg_2848_pp1_iter14_reg;
                icmp_ln119_1_reg_2848_pp1_iter2_reg <= icmp_ln119_1_reg_2848_pp1_iter1_reg;
                icmp_ln119_1_reg_2848_pp1_iter3_reg <= icmp_ln119_1_reg_2848_pp1_iter2_reg;
                icmp_ln119_1_reg_2848_pp1_iter4_reg <= icmp_ln119_1_reg_2848_pp1_iter3_reg;
                icmp_ln119_1_reg_2848_pp1_iter5_reg <= icmp_ln119_1_reg_2848_pp1_iter4_reg;
                icmp_ln119_1_reg_2848_pp1_iter6_reg <= icmp_ln119_1_reg_2848_pp1_iter5_reg;
                icmp_ln119_1_reg_2848_pp1_iter7_reg <= icmp_ln119_1_reg_2848_pp1_iter6_reg;
                icmp_ln119_1_reg_2848_pp1_iter8_reg <= icmp_ln119_1_reg_2848_pp1_iter7_reg;
                icmp_ln119_1_reg_2848_pp1_iter9_reg <= icmp_ln119_1_reg_2848_pp1_iter8_reg;
                icmp_ln122_1_reg_2857_pp1_iter12_reg <= icmp_ln122_1_reg_2857;
                icmp_ln122_1_reg_2857_pp1_iter13_reg <= icmp_ln122_1_reg_2857_pp1_iter12_reg;
                mul_ln130_reg_2886 <= mul_ln130_fu_2541_p2;
                trunc_ln119_1_reg_2876_pp1_iter12_reg <= trunc_ln119_1_reg_2876;
                trunc_ln119_1_reg_2876_pp1_iter13_reg <= trunc_ln119_1_reg_2876_pp1_iter12_reg;
                trunc_ln119_1_reg_2876_pp1_iter14_reg <= trunc_ln119_1_reg_2876_pp1_iter13_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                add_ln142_reg_3210 <= grp_fu_1037_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln23_reg_2658 <= add_ln23_fu_1152_p2;
                icmp_ln79_reg_2693 <= icmp_ln79_fu_1290_p2;
                select_ln24_reg_2665 <= select_ln24_fu_1198_p3;
                select_ln65_reg_2688 <= select_ln65_fu_1282_p3;
                trunc_ln39_2_mid2_reg_2646 <= mul_ln23_fu_1136_p2(9 downto 1);
                    zext_ln130_2_reg_2673(10 downto 3) <= zext_ln130_2_fu_1258_p1(10 downto 3);
                    zext_ln65_reg_2678(10 downto 3) <= zext_ln65_fu_1278_p1(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_fu_1323_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln37_reg_2739 <= add_ln37_fu_1375_p2;
                add_ln46_1_reg_2755 <= add_ln46_1_fu_1407_p2;
                and_ln34_reg_2733 <= and_ln34_fu_1369_p2;
                icmp_ln37_reg_2721 <= icmp_ln37_fu_1335_p2;
                select_ln37_reg_2744 <= select_ln37_fu_1387_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln39_reg_2707 <= add_ln39_fu_1312_p2;
                empty_30_reg_2712 <= empty_30_fu_1317_p2;
                icmp_ln34_reg_2717 <= icmp_ln34_fu_1323_p2;
                icmp_ln34_reg_2717_pp0_iter1_reg <= icmp_ln34_reg_2717;
                select_ln34_1_reg_2727_pp0_iter1_reg <= select_ln34_1_reg_2727;
                select_ln37_1_reg_2749_pp0_iter1_reg <= select_ln37_1_reg_2749;
                select_ln37_reg_2744_pp0_iter1_reg <= select_ln37_reg_2744;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_reg_2717_pp0_iter9_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln47_reg_2790 <= grp_fu_2533_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln46_fu_1518_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln34_reg_2717 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    add_ln49_1_reg_2779(22 downto 1) <= add_ln49_1_fu_1542_p2(22 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln62_1_reg_2612 <= add_ln62_1_fu_1042_p2;
                    empty_29_reg_2617(10 downto 3) <= empty_29_fu_1076_p2(10 downto 3);
                    shl_ln130_6_reg_2622(10 downto 3) <= shl_ln130_6_fu_1092_p3(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                add_ln75_reg_3038 <= add_ln75_fu_2069_p2;
                select_ln65_1_reg_3043 <= select_ln65_1_fu_2080_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter10_storemerge_reg_693 <= ap_phi_reg_pp0_iter9_storemerge_reg_693;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter11_storemerge_reg_693 <= ap_phi_reg_pp0_iter10_storemerge_reg_693;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_storemerge_reg_693 <= ap_phi_reg_pp0_iter0_storemerge_reg_693;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_storemerge_reg_693 <= ap_phi_reg_pp0_iter2_storemerge_reg_693;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_storemerge_reg_693 <= ap_phi_reg_pp0_iter3_storemerge_reg_693;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_storemerge_reg_693 <= ap_phi_reg_pp0_iter4_storemerge_reg_693;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter6_storemerge_reg_693 <= ap_phi_reg_pp0_iter5_storemerge_reg_693;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter7_storemerge_reg_693 <= ap_phi_reg_pp0_iter6_storemerge_reg_693;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter8_storemerge_reg_693 <= ap_phi_reg_pp0_iter7_storemerge_reg_693;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter9_storemerge_reg_693 <= ap_phi_reg_pp0_iter8_storemerge_reg_693;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                conv_bias_buf_ping_V_0_210_reg_614 <= conv_bias_buf_ping_V_0_4_reg_919;
                conv_bias_buf_ping_V_1_212_reg_602 <= conv_bias_buf_ping_V_1_4_reg_901;
                conv_bias_buf_ping_V_2_214_reg_590 <= conv_bias_buf_ping_V_2_4_reg_883;
                conv_bias_buf_ping_V_3_216_reg_578 <= conv_bias_buf_ping_V_3_4_reg_865;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln114_reg_2989 = ap_const_lv1_1) and (empty_33_reg_2807 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then
                conv_bias_buf_pong_V_0_1_fu_242 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_0;
                conv_bias_buf_pong_V_1_1_fu_246 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_1;
                conv_bias_buf_pong_V_2_1_fu_250 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_2;
                conv_bias_buf_pong_V_3_1_fu_254 <= grp_load_layer_params_from_DRAM_fu_963_ap_return_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                conv_bias_buf_pong_V_0_1_load_1_reg_2998 <= conv_bias_buf_pong_V_0_1_fu_242;
                conv_bias_buf_pong_V_1_1_load_1_reg_3003 <= conv_bias_buf_pong_V_1_1_fu_246;
                conv_bias_buf_pong_V_2_1_load_1_reg_3008 <= conv_bias_buf_pong_V_2_1_fu_250;
                conv_bias_buf_pong_V_3_1_load_1_reg_3013 <= conv_bias_buf_pong_V_3_1_fu_254;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_33_fu_1600_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                conv_bias_buf_pong_V_0_1_load_reg_2811 <= conv_bias_buf_pong_V_0_1_fu_242;
                conv_bias_buf_pong_V_1_1_load_reg_2816 <= conv_bias_buf_pong_V_1_1_fu_246;
                conv_bias_buf_pong_V_2_1_load_reg_2821 <= conv_bias_buf_pong_V_2_1_fu_250;
                conv_bias_buf_pong_V_3_1_load_reg_2826 <= conv_bias_buf_pong_V_3_1_fu_254;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                empty_32_reg_2800 <= empty_32_fu_1597_p1;
                empty_33_reg_2807 <= empty_33_fu_1600_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_1_reg_2848_pp1_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                empty_38_reg_2976 <= empty_38_fu_2000_p2;
                fm_addr_2_reg_2970 <= sext_ln122_1_fu_1983_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_1_reg_2848_pp1_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                empty_40_reg_2985 <= empty_40_fu_2039_p2;
                select_ln128_reg_2980 <= select_ln128_fu_2031_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065_pp2_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                empty_45_reg_3193 <= empty_45_fu_2484_p2;
                fm_addr_1_reg_3187 <= sext_ln122_fu_2467_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln119_reg_3065_pp2_iter14_reg = ap_const_lv1_0))) then
                empty_47_reg_3202 <= empty_47_fu_2523_p2;
                select_ln128_1_reg_3197 <= select_ln128_1_fu_2515_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op246_read_state14 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                fm_addr_read_reg_2795 <= fm_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_reg_2717_pp0_iter1_reg = ap_const_lv1_0) and (or_ln46_reg_2775 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                fm_addr_reg_2784 <= sext_ln49_fu_1575_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                icmp_ln114_reg_2989 <= grp_fu_1032_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln119_1_reg_2848 <= icmp_ln119_1_fu_1649_p2;
                icmp_ln119_1_reg_2848_pp1_iter1_reg <= icmp_ln119_1_reg_2848;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                icmp_ln119_reg_3065 <= icmp_ln119_fu_2133_p2;
                icmp_ln119_reg_3065_pp2_iter1_reg <= icmp_ln119_reg_3065;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_1_reg_2848_pp1_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln122_1_reg_2857 <= icmp_ln122_1_fu_1681_p2;
                p_mid163_reg_2866 <= p_mid163_fu_1691_p2;
                trunc_ln119_1_reg_2876 <= trunc_ln119_1_fu_1704_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065_pp2_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                icmp_ln122_reg_3074 <= icmp_ln122_fu_2165_p2;
                p_mid1119_reg_3083 <= p_mid1119_fu_2175_p2;
                trunc_ln119_reg_3093 <= trunc_ln119_fu_2188_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then
                icmp_ln141_reg_3206 <= grp_fu_1032_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln34_reg_2717_pp0_iter10_reg <= icmp_ln34_reg_2717_pp0_iter9_reg;
                icmp_ln34_reg_2717_pp0_iter2_reg <= icmp_ln34_reg_2717_pp0_iter1_reg;
                icmp_ln34_reg_2717_pp0_iter3_reg <= icmp_ln34_reg_2717_pp0_iter2_reg;
                icmp_ln34_reg_2717_pp0_iter4_reg <= icmp_ln34_reg_2717_pp0_iter3_reg;
                icmp_ln34_reg_2717_pp0_iter5_reg <= icmp_ln34_reg_2717_pp0_iter4_reg;
                icmp_ln34_reg_2717_pp0_iter6_reg <= icmp_ln34_reg_2717_pp0_iter5_reg;
                icmp_ln34_reg_2717_pp0_iter7_reg <= icmp_ln34_reg_2717_pp0_iter6_reg;
                icmp_ln34_reg_2717_pp0_iter8_reg <= icmp_ln34_reg_2717_pp0_iter7_reg;
                icmp_ln34_reg_2717_pp0_iter9_reg <= icmp_ln34_reg_2717_pp0_iter8_reg;
                or_ln46_reg_2775_pp0_iter10_reg <= or_ln46_reg_2775_pp0_iter9_reg;
                or_ln46_reg_2775_pp0_iter2_reg <= or_ln46_reg_2775;
                or_ln46_reg_2775_pp0_iter3_reg <= or_ln46_reg_2775_pp0_iter2_reg;
                or_ln46_reg_2775_pp0_iter4_reg <= or_ln46_reg_2775_pp0_iter3_reg;
                or_ln46_reg_2775_pp0_iter5_reg <= or_ln46_reg_2775_pp0_iter4_reg;
                or_ln46_reg_2775_pp0_iter6_reg <= or_ln46_reg_2775_pp0_iter5_reg;
                or_ln46_reg_2775_pp0_iter7_reg <= or_ln46_reg_2775_pp0_iter6_reg;
                or_ln46_reg_2775_pp0_iter8_reg <= or_ln46_reg_2775_pp0_iter7_reg;
                or_ln46_reg_2775_pp0_iter9_reg <= or_ln46_reg_2775_pp0_iter8_reg;
                select_ln34_1_reg_2727_pp0_iter10_reg <= select_ln34_1_reg_2727_pp0_iter9_reg;
                select_ln34_1_reg_2727_pp0_iter2_reg <= select_ln34_1_reg_2727_pp0_iter1_reg;
                select_ln34_1_reg_2727_pp0_iter3_reg <= select_ln34_1_reg_2727_pp0_iter2_reg;
                select_ln34_1_reg_2727_pp0_iter4_reg <= select_ln34_1_reg_2727_pp0_iter3_reg;
                select_ln34_1_reg_2727_pp0_iter5_reg <= select_ln34_1_reg_2727_pp0_iter4_reg;
                select_ln34_1_reg_2727_pp0_iter6_reg <= select_ln34_1_reg_2727_pp0_iter5_reg;
                select_ln34_1_reg_2727_pp0_iter7_reg <= select_ln34_1_reg_2727_pp0_iter6_reg;
                select_ln34_1_reg_2727_pp0_iter8_reg <= select_ln34_1_reg_2727_pp0_iter7_reg;
                select_ln34_1_reg_2727_pp0_iter9_reg <= select_ln34_1_reg_2727_pp0_iter8_reg;
                select_ln37_1_reg_2749_pp0_iter2_reg <= select_ln37_1_reg_2749_pp0_iter1_reg;
                select_ln37_1_reg_2749_pp0_iter3_reg <= select_ln37_1_reg_2749_pp0_iter2_reg;
                select_ln37_1_reg_2749_pp0_iter4_reg <= select_ln37_1_reg_2749_pp0_iter3_reg;
                select_ln37_1_reg_2749_pp0_iter5_reg <= select_ln37_1_reg_2749_pp0_iter4_reg;
                select_ln37_1_reg_2749_pp0_iter6_reg <= select_ln37_1_reg_2749_pp0_iter5_reg;
                select_ln37_1_reg_2749_pp0_iter7_reg <= select_ln37_1_reg_2749_pp0_iter6_reg;
                select_ln37_1_reg_2749_pp0_iter8_reg <= select_ln37_1_reg_2749_pp0_iter7_reg;
                select_ln37_1_reg_2749_pp0_iter9_reg <= select_ln37_1_reg_2749_pp0_iter8_reg;
                select_ln37_reg_2744_pp0_iter2_reg <= select_ln37_reg_2744_pp0_iter1_reg;
                select_ln37_reg_2744_pp0_iter3_reg <= select_ln37_reg_2744_pp0_iter2_reg;
                select_ln37_reg_2744_pp0_iter4_reg <= select_ln37_reg_2744_pp0_iter3_reg;
                select_ln37_reg_2744_pp0_iter5_reg <= select_ln37_reg_2744_pp0_iter4_reg;
                select_ln37_reg_2744_pp0_iter6_reg <= select_ln37_reg_2744_pp0_iter5_reg;
                select_ln37_reg_2744_pp0_iter7_reg <= select_ln37_reg_2744_pp0_iter6_reg;
                select_ln37_reg_2744_pp0_iter8_reg <= select_ln37_reg_2744_pp0_iter7_reg;
                select_ln37_reg_2744_pp0_iter9_reg <= select_ln37_reg_2744_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln62_fu_1100_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln65_reg_2630 <= icmp_ln65_fu_1112_p2;
                select_ln23_1_reg_2640 <= select_ln23_1_fu_1118_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                input_feature_map_read_reg_2607 <= input_feature_map;
                layer_bias_read_reg_2597 <= layer_bias;
                layer_weights_read_reg_2602 <= layer_weights;
                output_feature_map_read_reg_2589 <= output_feature_map;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln34_reg_2717 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_ln34_reg_2770 <= mul_ln34_fu_1436_p2;
                or_ln46_reg_2775 <= or_ln46_fu_1518_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_1290_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                p_mid129_reg_2697 <= p_mid129_fu_1296_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065_pp2_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter11 = ap_const_logic_1))) then
                select_ln119_1_reg_3088 <= select_ln119_1_fu_2180_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter11 = ap_const_logic_1) and (icmp_ln119_1_reg_2848_pp1_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln119_5_reg_2871 <= select_ln119_5_fu_1696_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln119_reg_3065_pp2_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then
                select_ln122_1_reg_3128 <= select_ln122_1_fu_2255_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (icmp_ln119_1_reg_2848_pp1_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln122_4_reg_2911 <= select_ln122_4_fu_1771_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_fu_1323_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln34_1_reg_2727 <= select_ln34_1_fu_1349_p3;
                select_ln37_1_reg_2749 <= select_ln37_1_fu_1395_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                    shl_ln114_1_reg_3048(5 downto 2) <= shl_ln114_1_fu_2087_p3(5 downto 2);
                    zext_ln130_3_reg_3054(18 downto 3) <= zext_ln130_3_fu_2123_p1(18 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                    shl_ln_reg_2831(5 downto 2) <= shl_ln_fu_1603_p3(5 downto 2);
                    zext_ln130_4_reg_2837(18 downto 3) <= zext_ln130_4_fu_1639_p1(18 downto 3);
            end if;
        end if;
    end process;
    empty_29_reg_2617(2 downto 0) <= "000";
    shl_ln130_6_reg_2622(2 downto 0) <= "000";
    zext_ln130_2_reg_2673(2 downto 0) <= "000";
    zext_ln130_2_reg_2673(11) <= '0';
    zext_ln65_reg_2678(2 downto 0) <= "000";
    zext_ln65_reg_2678(18 downto 11) <= "00000000";
    add_ln49_1_reg_2779(0) <= '0';
    shl_ln_reg_2831(1 downto 0) <= "00";
    zext_ln130_4_reg_2837(2 downto 0) <= "000";
    zext_ln130_4_reg_2837(63 downto 19) <= "000000000000000000000000000000000000000000000";
    add_ln130_10_reg_2929(2 downto 0) <= "000";
    add_ln130_20_reg_2940(2 downto 0) <= "000";
    shl_ln114_1_reg_3048(1 downto 0) <= "00";
    zext_ln130_3_reg_3054(2 downto 0) <= "000";
    zext_ln130_3_reg_3054(63 downto 19) <= "000000000000000000000000000000000000000000000";
    add_ln130_2_reg_3146(2 downto 0) <= "000";
    add_ln130_15_reg_3157(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter10, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter21, ap_enable_reg_pp2_iter15, ap_enable_reg_pp2_iter21, ap_CS_fsm_state2, icmp_ln62_fu_1100_p2, ap_CS_fsm_state3, icmp_ln79_fu_1290_p2, ap_enable_reg_pp0_iter0, icmp_ln34_fu_1323_p2, ap_CS_fsm_state17, empty_33_fu_1600_p1, ap_CS_fsm_state19, grp_fu_1032_p2, ap_CS_fsm_state42, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state68, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter11, grp_conv_7x7_fu_937_ap_done, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter14, ap_enable_reg_pp1_iter20, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter13, ap_enable_reg_pp2_iter14, ap_enable_reg_pp2_iter20, ap_block_state17_on_subcall_done, ap_block_state44_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln62_fu_1100_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln79_fu_1290_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln34_fu_1323_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((icmp_ln34_fu_1323_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((empty_33_fu_1600_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_boolean_0 = ap_block_state17_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                elsif (((empty_33_fu_1600_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_boolean_0 = ap_block_state17_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0))) and not(((ap_enable_reg_pp1_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter20 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter20 = ap_const_logic_0)) or ((ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state42 => 
                if (((grp_fu_1032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state45) and (grp_conv_7x7_fu_937_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter15 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter14 = ap_const_logic_1) and (ap_enable_reg_pp2_iter13 = ap_const_logic_0))) and not(((ap_enable_reg_pp2_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter20 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter20 = ap_const_logic_0)) or ((ap_enable_reg_pp2_iter15 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter14 = ap_const_logic_1) and (ap_enable_reg_pp2_iter13 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state68 => 
                if (((grp_fu_1032_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln119_1_fu_2159_p2 <= std_logic_vector(unsigned(ap_phi_mux_f_1_phi_fu_824_p4) + unsigned(ap_const_lv3_1));
    add_ln119_2_fu_2127_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten153_phi_fu_812_p4) + unsigned(ap_const_lv11_1));
    add_ln119_3_fu_1643_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten97_phi_fu_755_p4) + unsigned(ap_const_lv11_1));
    add_ln119_fu_1675_p2 <= std_logic_vector(unsigned(ap_phi_mux_f_phi_fu_767_p4) + unsigned(ap_const_lv3_1));
    add_ln122_1_fu_2236_p2 <= std_logic_vector(unsigned(select_ln119_fu_2209_p3) + unsigned(ap_const_lv5_1));
    add_ln122_2_fu_2192_p2 <= std_logic_vector(unsigned(indvar_flatten108_reg_831) + unsigned(ap_const_lv10_1));
    add_ln122_3_fu_1708_p2 <= std_logic_vector(unsigned(indvar_flatten52_reg_774) + unsigned(ap_const_lv10_1));
    add_ln122_fu_1752_p2 <= std_logic_vector(unsigned(select_ln119_4_fu_1725_p3) + unsigned(ap_const_lv5_1));
    add_ln125_1_fu_2263_p2 <= std_logic_vector(unsigned(select_ln122_fu_2247_p3) + unsigned(ap_const_lv5_1));
    add_ln125_fu_1779_p2 <= std_logic_vector(unsigned(select_ln122_3_fu_1763_p3) + unsigned(ap_const_lv5_1));
    add_ln130_10_fu_1827_p2 <= std_logic_vector(unsigned(add_ln130_9_fu_1822_p2) + unsigned(zext_ln125_1_fu_1818_p1));
    add_ln130_11_fu_1916_p2 <= std_logic_vector(unsigned(zext_ln130_6_fu_1913_p1) + unsigned(add_ln130_8_reg_2923));
    add_ln130_12_fu_2320_p2 <= std_logic_vector(unsigned(zext_ln1495_2_fu_2317_p1) + unsigned(output_feature_map_read_reg_2589));
    add_ln130_13_fu_2410_p2 <= std_logic_vector(unsigned(zext_ln130_3_reg_3054) + unsigned(add_ln130_12_reg_3151));
    add_ln130_14_fu_2377_p2 <= std_logic_vector(unsigned(shl_ln130_4_mid1_fu_2357_p3) + unsigned(zext_ln65_reg_2678));
    add_ln130_15_fu_2382_p2 <= std_logic_vector(unsigned(add_ln130_14_fu_2377_p2) + unsigned(zext_ln125_4_fu_2373_p1));
    add_ln130_16_fu_2417_p2 <= std_logic_vector(unsigned(zext_ln130_8_fu_2414_p1) + unsigned(select_ln119_2_fu_2405_p3));
    add_ln130_17_fu_1836_p2 <= std_logic_vector(unsigned(zext_ln1495_3_fu_1833_p1) + unsigned(output_feature_map_read_reg_2589));
    add_ln130_18_fu_1926_p2 <= std_logic_vector(unsigned(zext_ln130_4_reg_2837) + unsigned(add_ln130_17_reg_2934));
    add_ln130_19_fu_1893_p2 <= std_logic_vector(unsigned(shl_ln130_2_mid1_fu_1873_p3) + unsigned(zext_ln65_reg_2678));
    add_ln130_1_fu_2306_p2 <= std_logic_vector(unsigned(shl_ln130_4_fu_2286_p3) + unsigned(zext_ln65_reg_2678));
    add_ln130_20_fu_1898_p2 <= std_logic_vector(unsigned(add_ln130_19_fu_1893_p2) + unsigned(zext_ln125_5_fu_1889_p1));
    add_ln130_21_fu_1933_p2 <= std_logic_vector(unsigned(zext_ln130_11_fu_1930_p1) + unsigned(select_ln119_6_fu_1921_p3));
    add_ln130_2_fu_2311_p2 <= std_logic_vector(unsigned(add_ln130_1_fu_2306_p2) + unsigned(zext_ln125_fu_2302_p1));
    add_ln130_3_fu_2117_p2 <= std_logic_vector(unsigned(add_ln130_fu_2112_p2) + unsigned(zext_ln125_2_fu_2108_p1));
    add_ln130_4_fu_2272_p2 <= std_logic_vector(unsigned(zext_ln1495_fu_2269_p1) + unsigned(output_feature_map_read_reg_2589));
    add_ln130_5_fu_2400_p2 <= std_logic_vector(unsigned(zext_ln130_5_fu_2397_p1) + unsigned(add_ln130_4_reg_3140));
    add_ln130_6_fu_1628_p2 <= std_logic_vector(unsigned(shl_ln130_2_mid_fu_1610_p3) + unsigned(zext_ln65_reg_2678));
    add_ln130_7_fu_1633_p2 <= std_logic_vector(unsigned(add_ln130_6_fu_1628_p2) + unsigned(zext_ln125_3_fu_1624_p1));
    add_ln130_8_fu_1788_p2 <= std_logic_vector(unsigned(zext_ln1495_1_fu_1785_p1) + unsigned(output_feature_map_read_reg_2589));
    add_ln130_9_fu_1822_p2 <= std_logic_vector(unsigned(shl_ln130_2_fu_1802_p3) + unsigned(zext_ln65_reg_2678));
    add_ln130_fu_2112_p2 <= std_logic_vector(unsigned(shl_ln130_4_mid_fu_2094_p3) + unsigned(zext_ln65_reg_2678));
    add_ln1495_1_fu_2391_p2 <= std_logic_vector(unsigned(add_ln1495_fu_2343_p2) + unsigned(zext_ln1495_5_fu_2388_p1));
    add_ln1495_2_fu_1859_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_1841_p3) + unsigned(zext_ln1495_7_fu_1855_p1));
    add_ln1495_3_fu_1907_p2 <= std_logic_vector(unsigned(add_ln1495_2_fu_1859_p2) + unsigned(zext_ln1495_8_fu_1904_p1));
    add_ln1495_fu_2343_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_2325_p3) + unsigned(zext_ln1495_4_fu_2339_p1));
    add_ln23_fu_1152_p2 <= std_logic_vector(unsigned(mul_ln23_fu_1136_p2) + unsigned(ap_const_lv11_7FD));
    add_ln34_1_fu_1551_p2 <= std_logic_vector(unsigned(zext_ln34_1_fu_1548_p1) + unsigned(input_feature_map_read_reg_2607));
    add_ln34_2_fu_1302_p2 <= std_logic_vector(unsigned(indvar_flatten41_reg_638) + unsigned(ap_const_lv13_1));
    add_ln34_fu_1329_p2 <= std_logic_vector(unsigned(ap_phi_mux_c_phi_fu_653_p4) + unsigned(ap_const_lv2_1));
    add_ln37_1_fu_1419_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_660) + unsigned(ap_const_lv12_1));
    add_ln37_fu_1375_p2 <= std_logic_vector(unsigned(select_ln34_fu_1341_p3) + unsigned(ap_const_lv6_1));
    add_ln39_1_fu_1455_p2 <= std_logic_vector(unsigned(add_ln23_reg_2658) + unsigned(zext_ln37_1_fu_1452_p1));
    add_ln39_fu_1312_p2 <= std_logic_vector(unsigned(add_ln23_reg_2658) + unsigned(zext_ln37_fu_1308_p1));
    add_ln42_fu_1413_p2 <= std_logic_vector(unsigned(select_ln37_fu_1387_p3) + unsigned(ap_const_lv6_1));
    add_ln46_1_fu_1407_p2 <= std_logic_vector(unsigned(zext_ln44_fu_1403_p1) + unsigned(ap_const_lv7_7D));
    add_ln46_fu_1507_p2 <= std_logic_vector(signed(sext_ln46_fu_1504_p1) + signed(zext_ln130_2_reg_2673));
    add_ln49_1_fu_1542_p2 <= std_logic_vector(unsigned(add_ln49_fu_1536_p2) + unsigned(sext_ln42_mid2_v_cast_fu_1500_p1));
    add_ln49_2_fu_1559_p2 <= std_logic_vector(signed(sext_ln49_1_fu_1556_p1) + signed(add_ln34_1_fu_1551_p2));
    add_ln49_fu_1536_p2 <= std_logic_vector(signed(sext_ln37_fu_1488_p1) + signed(zext_ln49_fu_1532_p1));
    add_ln62_1_fu_1042_p2 <= std_logic_vector(unsigned(indvar_flatten251_reg_532) + unsigned(ap_const_lv14_1));
    add_ln62_fu_1106_p2 <= std_logic_vector(unsigned(ti_reg_543) + unsigned(ap_const_lv5_1));
    add_ln65_1_fu_2074_p2 <= std_logic_vector(unsigned(indvar_flatten167_reg_554) + unsigned(ap_const_lv11_1));
    add_ln65_fu_1187_p2 <= std_logic_vector(unsigned(select_ln23_fu_1126_p3) + unsigned(ap_const_lv6_1));
    add_ln75_fu_2069_p2 <= std_logic_vector(unsigned(select_ln24_reg_2665) + unsigned(ap_const_lv5_1));
    and_ln119_1_fu_1746_p2 <= (xor_ln119_1_fu_1735_p2 and icmp_ln125_1_fu_1740_p2);
    and_ln119_fu_2230_p2 <= (xor_ln119_fu_2219_p2 and icmp_ln125_fu_2224_p2);
    and_ln23_fu_1181_p2 <= (xor_ln23_fu_1170_p2 and icmp_ln75_fu_1175_p2);
    and_ln34_fu_1369_p2 <= (xor_ln34_fu_1357_p2 and icmp_ln42_fu_1363_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(13);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(4);
    ap_CS_fsm_state17 <= ap_CS_fsm(5);
    ap_CS_fsm_state18 <= ap_CS_fsm(6);
    ap_CS_fsm_state19 <= ap_CS_fsm(7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state42 <= ap_CS_fsm(9);
    ap_CS_fsm_state43 <= ap_CS_fsm(10);
    ap_CS_fsm_state44 <= ap_CS_fsm(11);
    ap_CS_fsm_state45 <= ap_CS_fsm(12);
    ap_CS_fsm_state68 <= ap_CS_fsm(14);
    ap_CS_fsm_state69 <= ap_CS_fsm(15);
    ap_CS_fsm_state70 <= ap_CS_fsm(16);
    ap_CS_fsm_state71 <= ap_CS_fsm(17);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter10, fm_RVALID, ap_block_state7_io, ap_predicate_op246_read_state14)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op246_read_state14 = ap_const_boolean_1) and (fm_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state7_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter10, fm_RVALID, ap_block_state7_io, ap_predicate_op246_read_state14)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op246_read_state14 = ap_const_boolean_1) and (fm_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state7_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(ap_enable_reg_pp1_iter21, empty_40_reg_2985_pp1_iter20_reg, fm_BVALID)
    begin
                ap_block_pp1_stage0_01001 <= ((fm_BVALID = ap_const_logic_0) and (empty_40_reg_2985_pp1_iter20_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter21, empty_40_reg_2985_pp1_iter20_reg, fm_BVALID, ap_block_state35_io, ap_block_state36_io)
    begin
                ap_block_pp1_stage0_11001 <= (((fm_BVALID = ap_const_logic_0) and (empty_40_reg_2985_pp1_iter20_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state36_io) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state35_io) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter21, empty_40_reg_2985_pp1_iter20_reg, fm_BVALID, ap_block_state35_io, ap_block_state36_io)
    begin
                ap_block_pp1_stage0_subdone <= (((fm_BVALID = ap_const_logic_0) and (empty_40_reg_2985_pp1_iter20_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state36_io) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state35_io) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1)));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_01001_assign_proc : process(ap_enable_reg_pp2_iter21, empty_47_reg_3202_pp2_iter20_reg, fm_BVALID)
    begin
                ap_block_pp2_stage0_01001 <= ((fm_BVALID = ap_const_logic_0) and (empty_47_reg_3202_pp2_iter20_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter21 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage0_11001_assign_proc : process(ap_enable_reg_pp2_iter15, ap_enable_reg_pp2_iter16, ap_enable_reg_pp2_iter21, empty_47_reg_3202_pp2_iter20_reg, fm_BVALID, ap_block_state61_io, ap_block_state62_io)
    begin
                ap_block_pp2_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state62_io) and (ap_enable_reg_pp2_iter16 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state61_io) and (ap_enable_reg_pp2_iter15 = ap_const_logic_1)) or ((fm_BVALID = ap_const_logic_0) and (empty_47_reg_3202_pp2_iter20_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter21 = ap_const_logic_1)));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(ap_enable_reg_pp2_iter15, ap_enable_reg_pp2_iter16, ap_enable_reg_pp2_iter21, empty_47_reg_3202_pp2_iter20_reg, fm_BVALID, ap_block_state61_io, ap_block_state62_io)
    begin
                ap_block_pp2_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state62_io) and (ap_enable_reg_pp2_iter16 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state61_io) and (ap_enable_reg_pp2_iter15 = ap_const_logic_1)) or ((fm_BVALID = ap_const_logic_0) and (empty_47_reg_3202_pp2_iter20_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter21 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp0_stage0_iter10_assign_proc : process(fm_RVALID, ap_predicate_op246_read_state14)
    begin
                ap_block_state14_pp0_stage0_iter10 <= ((ap_predicate_op246_read_state14 = ap_const_boolean_1) and (fm_RVALID = ap_const_logic_0));
    end process;

        ap_block_state15_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state17_on_subcall_done_assign_proc : process(icmp_ln79_reg_2693, grp_load_layer_params_from_DRAM_fu_963_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (grp_load_layer_params_from_DRAM_fu_963_ap_done = ap_const_logic_0));
    end process;

        ap_block_state20_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp1_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp1_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state35_io_assign_proc : process(empty_38_reg_2976, fm_AWREADY)
    begin
                ap_block_state35_io <= ((fm_AWREADY = ap_const_logic_0) and (empty_38_reg_2976 = ap_const_lv1_1));
    end process;

        ap_block_state35_pp1_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state36_io_assign_proc : process(icmp_ln119_1_reg_2848_pp1_iter15_reg, fm_WREADY)
    begin
                ap_block_state36_io <= ((fm_WREADY = ap_const_logic_0) and (icmp_ln119_1_reg_2848_pp1_iter15_reg = ap_const_lv1_0));
    end process;

        ap_block_state36_pp1_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp1_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp1_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp1_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp1_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state41_pp1_stage0_iter21_assign_proc : process(empty_40_reg_2985_pp1_iter20_reg, fm_BVALID)
    begin
                ap_block_state41_pp1_stage0_iter21 <= ((fm_BVALID = ap_const_logic_0) and (empty_40_reg_2985_pp1_iter20_reg = ap_const_lv1_1));
    end process;


    ap_block_state44_on_subcall_done_assign_proc : process(grp_load_layer_params_from_DRAM_fu_963_ap_done, ap_predicate_op439_call_state44, ap_predicate_op449_call_state44)
    begin
                ap_block_state44_on_subcall_done <= (((ap_predicate_op449_call_state44 = ap_const_boolean_1) and (grp_load_layer_params_from_DRAM_fu_963_ap_done = ap_const_logic_0)) or ((ap_predicate_op439_call_state44 = ap_const_boolean_1) and (grp_load_layer_params_from_DRAM_fu_963_ap_done = ap_const_logic_0)));
    end process;

        ap_block_state46_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp2_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp2_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp2_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp2_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp2_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp2_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp2_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp2_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state61_io_assign_proc : process(empty_45_reg_3193, fm_AWREADY)
    begin
                ap_block_state61_io <= ((fm_AWREADY = ap_const_logic_0) and (empty_45_reg_3193 = ap_const_lv1_1));
    end process;

        ap_block_state61_pp2_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state62_io_assign_proc : process(icmp_ln119_reg_3065_pp2_iter15_reg, fm_WREADY)
    begin
                ap_block_state62_io <= ((fm_WREADY = ap_const_logic_0) and (icmp_ln119_reg_3065_pp2_iter15_reg = ap_const_lv1_0));
    end process;

        ap_block_state62_pp2_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp2_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp2_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp2_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp2_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state67_pp2_stage0_iter21_assign_proc : process(empty_47_reg_3202_pp2_iter20_reg, fm_BVALID)
    begin
                ap_block_state67_pp2_stage0_iter21 <= ((fm_BVALID = ap_const_logic_0) and (empty_47_reg_3202_pp2_iter20_reg = ap_const_lv1_1));
    end process;

        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(fm_ARREADY, ap_predicate_op235_readreq_state7)
    begin
                ap_block_state7_io <= ((ap_predicate_op235_readreq_state7 = ap_const_boolean_1) and (fm_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1756_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_1756 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln34_fu_1323_p2)
    begin
        if ((icmp_ln34_fu_1323_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter14_state34_assign_proc : process(ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter14)
    begin
        if (((ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0))) then 
            ap_condition_pp1_exit_iter14_state34 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter14_state34 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_flush_enable_assign_proc : process(ap_CS_fsm_pp1_stage0, icmp_ln119_1_fu_1649_p2, ap_block_pp1_stage0_subdone)
    begin
        if (((icmp_ln119_1_fu_1649_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
            ap_condition_pp1_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp1_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter14_state60_assign_proc : process(ap_enable_reg_pp2_iter13, ap_enable_reg_pp2_iter14)
    begin
        if (((ap_enable_reg_pp2_iter14 = ap_const_logic_1) and (ap_enable_reg_pp2_iter13 = ap_const_logic_0))) then 
            ap_condition_pp2_exit_iter14_state60 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter14_state60 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_flush_enable_assign_proc : process(ap_CS_fsm_pp2_stage0, icmp_ln119_fu_2133_p2, ap_block_pp2_stage0_subdone)
    begin
        if (((icmp_ln119_fu_2133_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
            ap_condition_pp2_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp2_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln62_fu_1100_p2)
    begin
        if (((icmp_ln62_fu_1100_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter21, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter12, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter14, ap_enable_reg_pp1_iter17, ap_enable_reg_pp1_iter18, ap_enable_reg_pp1_iter19, ap_enable_reg_pp1_iter20)
    begin
        if (((ap_enable_reg_pp1_iter12 = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_enable_reg_pp1_iter20 = ap_const_logic_0) and (ap_enable_reg_pp1_iter19 = ap_const_logic_0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter15, ap_enable_reg_pp2_iter16, ap_enable_reg_pp2_iter21, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter7, ap_enable_reg_pp2_iter8, ap_enable_reg_pp2_iter9, ap_enable_reg_pp2_iter10, ap_enable_reg_pp2_iter13, ap_enable_reg_pp2_iter14, ap_enable_reg_pp2_iter17, ap_enable_reg_pp2_iter18, ap_enable_reg_pp2_iter19, ap_enable_reg_pp2_iter20)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter21 = ap_const_logic_0) and (ap_enable_reg_pp2_iter16 = ap_const_logic_0) and (ap_enable_reg_pp2_iter15 = ap_const_logic_0) and (ap_enable_reg_pp2_iter20 = ap_const_logic_0) and (ap_enable_reg_pp2_iter19 = ap_const_logic_0) and (ap_enable_reg_pp2_iter18 = ap_const_logic_0) and (ap_enable_reg_pp2_iter17 = ap_const_logic_0) and (ap_enable_reg_pp2_iter14 = ap_const_logic_0) and (ap_enable_reg_pp2_iter13 = ap_const_logic_0) and (ap_enable_reg_pp2_iter10 = ap_const_logic_0) and (ap_enable_reg_pp2_iter9 = ap_const_logic_0) and (ap_enable_reg_pp2_iter8 = ap_const_logic_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter12 = ap_const_logic_0) and (ap_enable_reg_pp2_iter11 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c_phi_fu_653_p4_assign_proc : process(ap_block_pp0_stage0, icmp_ln34_reg_2717, c_reg_649, ap_CS_fsm_pp0_stage0, select_ln34_1_reg_2727, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln34_reg_2717 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_c_phi_fu_653_p4 <= select_ln34_1_reg_2727;
        else 
            ap_phi_mux_c_phi_fu_653_p4 <= c_reg_649;
        end if; 
    end process;


    ap_phi_mux_f_1_phi_fu_824_p4_assign_proc : process(ap_block_pp2_stage0, f_1_reg_820, icmp_ln119_reg_3065_pp2_iter11_reg, select_ln119_1_reg_3088, ap_enable_reg_pp2_iter12)
    begin
        if (((icmp_ln119_reg_3065_pp2_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then 
            ap_phi_mux_f_1_phi_fu_824_p4 <= select_ln119_1_reg_3088;
        else 
            ap_phi_mux_f_1_phi_fu_824_p4 <= f_1_reg_820;
        end if; 
    end process;


    ap_phi_mux_f_phi_fu_767_p4_assign_proc : process(ap_block_pp1_stage0, f_reg_763, icmp_ln119_1_reg_2848_pp1_iter11_reg, select_ln119_5_reg_2871, ap_enable_reg_pp1_iter12)
    begin
        if (((ap_enable_reg_pp1_iter12 = ap_const_logic_1) and (icmp_ln119_1_reg_2848_pp1_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_f_phi_fu_767_p4 <= select_ln119_5_reg_2871;
        else 
            ap_phi_mux_f_phi_fu_767_p4 <= f_reg_763;
        end if; 
    end process;


    ap_phi_mux_i_1_phi_fu_789_p4_assign_proc : process(ap_block_pp1_stage0, i_1_reg_785, icmp_ln119_1_reg_2848_pp1_iter12_reg, select_ln122_4_reg_2911, ap_enable_reg_pp1_iter13)
    begin
        if (((icmp_ln119_1_reg_2848_pp1_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_1))) then 
            ap_phi_mux_i_1_phi_fu_789_p4 <= select_ln122_4_reg_2911;
        else 
            ap_phi_mux_i_1_phi_fu_789_p4 <= i_1_reg_785;
        end if; 
    end process;


    ap_phi_mux_i_2_phi_fu_846_p4_assign_proc : process(ap_block_pp2_stage0, i_2_reg_842, icmp_ln119_reg_3065_pp2_iter12_reg, select_ln122_1_reg_3128, ap_enable_reg_pp2_iter13)
    begin
        if (((icmp_ln119_reg_3065_pp2_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter13 = ap_const_logic_1))) then 
            ap_phi_mux_i_2_phi_fu_846_p4 <= select_ln122_1_reg_3128;
        else 
            ap_phi_mux_i_2_phi_fu_846_p4 <= i_2_reg_842;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_675_p4_assign_proc : process(ap_block_pp0_stage0, icmp_ln34_reg_2717, i_reg_671, ap_CS_fsm_pp0_stage0, select_ln37_1_reg_2749, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln34_reg_2717 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i_phi_fu_675_p4 <= select_ln37_1_reg_2749;
        else 
            ap_phi_mux_i_phi_fu_675_p4 <= i_reg_671;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten153_phi_fu_812_p4_assign_proc : process(ap_block_pp2_stage0, icmp_ln119_reg_3065, indvar_flatten153_reg_808, ap_CS_fsm_pp2_stage0, add_ln119_2_reg_3059, ap_enable_reg_pp2_iter1)
    begin
        if (((icmp_ln119_reg_3065 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten153_phi_fu_812_p4 <= add_ln119_2_reg_3059;
        else 
            ap_phi_mux_indvar_flatten153_phi_fu_812_p4 <= indvar_flatten153_reg_808;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten97_phi_fu_755_p4_assign_proc : process(ap_block_pp1_stage0, icmp_ln119_1_reg_2848, indvar_flatten97_reg_751, ap_CS_fsm_pp1_stage0, add_ln119_3_reg_2842, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln119_1_reg_2848 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten97_phi_fu_755_p4 <= add_ln119_3_reg_2842;
        else 
            ap_phi_mux_indvar_flatten97_phi_fu_755_p4 <= indvar_flatten97_reg_751;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_697_p4_assign_proc : process(icmp_ln34_reg_2717_pp0_iter10_reg, or_ln46_reg_2775_pp0_iter10_reg, fm_addr_read_reg_2795, ap_phi_reg_pp0_iter11_storemerge_reg_693)
    begin
        if (((or_ln46_reg_2775_pp0_iter10_reg = ap_const_lv1_0) and (icmp_ln34_reg_2717_pp0_iter10_reg = ap_const_lv1_0))) then 
            ap_phi_mux_storemerge_phi_fu_697_p4 <= fm_addr_read_reg_2795;
        else 
            ap_phi_mux_storemerge_phi_fu_697_p4 <= ap_phi_reg_pp0_iter11_storemerge_reg_693;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_reg_693 <= "XXXXXXXXXXXXXXXX";

    ap_predicate_op235_readreq_state7_assign_proc : process(icmp_ln34_reg_2717_pp0_iter2_reg, or_ln46_reg_2775_pp0_iter2_reg)
    begin
                ap_predicate_op235_readreq_state7 <= ((or_ln46_reg_2775_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln34_reg_2717_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op246_read_state14_assign_proc : process(icmp_ln34_reg_2717_pp0_iter9_reg, or_ln46_reg_2775_pp0_iter9_reg)
    begin
                ap_predicate_op246_read_state14 <= ((or_ln46_reg_2775_pp0_iter9_reg = ap_const_lv1_0) and (icmp_ln34_reg_2717_pp0_iter9_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op439_call_state44_assign_proc : process(empty_33_reg_2807, icmp_ln114_reg_2989)
    begin
                ap_predicate_op439_call_state44 <= ((icmp_ln114_reg_2989 = ap_const_lv1_1) and (empty_33_reg_2807 = ap_const_lv1_0));
    end process;


    ap_predicate_op449_call_state44_assign_proc : process(empty_33_reg_2807, icmp_ln141_reg_3206)
    begin
                ap_predicate_op449_call_state44 <= ((icmp_ln141_reg_3206 = ap_const_lv1_1) and (empty_33_reg_2807 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln62_fu_1100_p2)
    begin
        if (((icmp_ln62_fu_1100_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    conv_in_buf_V_0_address0_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp0_iter11, grp_conv_7x7_fu_937_X_buf_address0, zext_ln47_2_fu_1591_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            conv_in_buf_V_0_address0 <= zext_ln47_2_fu_1591_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_in_buf_V_0_address0 <= grp_conv_7x7_fu_937_X_buf_address0;
        else 
            conv_in_buf_V_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv_in_buf_V_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp0_iter11, grp_conv_7x7_fu_937_X_buf_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            conv_in_buf_V_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_in_buf_V_0_ce0 <= grp_conv_7x7_fu_937_X_buf_ce0;
        else 
            conv_in_buf_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_in_buf_V_0_ce1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, grp_conv_7x7_fu_937_X_buf_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_in_buf_V_0_ce1 <= grp_conv_7x7_fu_937_X_buf_ce1;
        else 
            conv_in_buf_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_in_buf_V_0_we0_assign_proc : process(ap_block_pp0_stage0_11001, select_ln34_1_reg_2727_pp0_iter10_reg, ap_enable_reg_pp0_iter11)
    begin
        if (((select_ln34_1_reg_2727_pp0_iter10_reg = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            conv_in_buf_V_0_we0 <= ap_const_logic_1;
        else 
            conv_in_buf_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_in_buf_V_1_address0_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp0_iter11, grp_conv_7x7_fu_937_X_buf4_address0, zext_ln47_2_fu_1591_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            conv_in_buf_V_1_address0 <= zext_ln47_2_fu_1591_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_in_buf_V_1_address0 <= grp_conv_7x7_fu_937_X_buf4_address0;
        else 
            conv_in_buf_V_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv_in_buf_V_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp0_iter11, grp_conv_7x7_fu_937_X_buf4_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            conv_in_buf_V_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_in_buf_V_1_ce0 <= grp_conv_7x7_fu_937_X_buf4_ce0;
        else 
            conv_in_buf_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_in_buf_V_1_ce1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, grp_conv_7x7_fu_937_X_buf4_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_in_buf_V_1_ce1 <= grp_conv_7x7_fu_937_X_buf4_ce1;
        else 
            conv_in_buf_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_in_buf_V_1_we0_assign_proc : process(ap_block_pp0_stage0_11001, select_ln34_1_reg_2727_pp0_iter10_reg, ap_enable_reg_pp0_iter11)
    begin
        if (((select_ln34_1_reg_2727_pp0_iter10_reg = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            conv_in_buf_V_1_we0 <= ap_const_logic_1;
        else 
            conv_in_buf_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_in_buf_V_2_address0_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp0_iter11, grp_conv_7x7_fu_937_X_buf5_address0, zext_ln47_2_fu_1591_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            conv_in_buf_V_2_address0 <= zext_ln47_2_fu_1591_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_in_buf_V_2_address0 <= grp_conv_7x7_fu_937_X_buf5_address0;
        else 
            conv_in_buf_V_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv_in_buf_V_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp0_iter11, grp_conv_7x7_fu_937_X_buf5_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            conv_in_buf_V_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_in_buf_V_2_ce0 <= grp_conv_7x7_fu_937_X_buf5_ce0;
        else 
            conv_in_buf_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_in_buf_V_2_ce1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, grp_conv_7x7_fu_937_X_buf5_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_in_buf_V_2_ce1 <= grp_conv_7x7_fu_937_X_buf5_ce1;
        else 
            conv_in_buf_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_in_buf_V_2_we0_assign_proc : process(ap_block_pp0_stage0_11001, select_ln34_1_reg_2727_pp0_iter10_reg, ap_enable_reg_pp0_iter11)
    begin
        if ((not((select_ln34_1_reg_2727_pp0_iter10_reg = ap_const_lv2_0)) and not((select_ln34_1_reg_2727_pp0_iter10_reg = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            conv_in_buf_V_2_we0 <= ap_const_logic_1;
        else 
            conv_in_buf_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf_0_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_block_pp1_stage0, ap_block_pp2_stage0, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp1_iter14, ap_enable_reg_pp2_iter14, grp_conv_7x7_fu_937_Y_buf_address0, zext_ln1495_9_fu_1987_p1, zext_ln1495_6_fu_2471_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter14 = ap_const_logic_1))) then 
            conv_out_buf_0_V_address0 <= zext_ln1495_6_fu_2471_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1))) then 
            conv_out_buf_0_V_address0 <= zext_ln1495_9_fu_1987_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            conv_out_buf_0_V_address0 <= ap_const_lv64_0(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_0_V_address0 <= grp_conv_7x7_fu_937_Y_buf_address0;
        else 
            conv_out_buf_0_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    conv_out_buf_0_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp1_iter14, ap_enable_reg_pp2_iter14, grp_conv_7x7_fu_937_Y_buf_ce0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter14 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            conv_out_buf_0_V_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_0_V_ce0 <= grp_conv_7x7_fu_937_Y_buf_ce0;
        else 
            conv_out_buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf_0_V_d0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state19, ap_CS_fsm_state45, grp_conv_7x7_fu_937_Y_buf_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            conv_out_buf_0_V_d0 <= ap_const_lv16_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_0_V_d0 <= grp_conv_7x7_fu_937_Y_buf_d0;
        else 
            conv_out_buf_0_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_out_buf_0_V_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state19, ap_CS_fsm_state45, grp_conv_7x7_fu_937_Y_buf_we0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            conv_out_buf_0_V_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_0_V_we0 <= grp_conv_7x7_fu_937_Y_buf_we0;
        else 
            conv_out_buf_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf_1_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_block_pp2_stage0, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp1_iter14, ap_enable_reg_pp2_iter14, grp_conv_7x7_fu_937_Y_buf1_address0, zext_ln1495_9_fu_1987_p1, zext_ln1495_6_fu_2471_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter14 = ap_const_logic_1))) then 
            conv_out_buf_1_V_address0 <= zext_ln1495_6_fu_2471_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1))) then 
            conv_out_buf_1_V_address0 <= zext_ln1495_9_fu_1987_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_1_V_address0 <= grp_conv_7x7_fu_937_Y_buf1_address0;
        else 
            conv_out_buf_1_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    conv_out_buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp1_iter14, ap_enable_reg_pp2_iter14, grp_conv_7x7_fu_937_Y_buf1_ce0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter14 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1)))) then 
            conv_out_buf_1_V_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_1_V_ce0 <= grp_conv_7x7_fu_937_Y_buf1_ce0;
        else 
            conv_out_buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf_1_V_we0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, grp_conv_7x7_fu_937_Y_buf1_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_1_V_we0 <= grp_conv_7x7_fu_937_Y_buf1_we0;
        else 
            conv_out_buf_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf_2_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_block_pp2_stage0, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp1_iter14, ap_enable_reg_pp2_iter14, grp_conv_7x7_fu_937_Y_buf2_address0, zext_ln1495_9_fu_1987_p1, zext_ln1495_6_fu_2471_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter14 = ap_const_logic_1))) then 
            conv_out_buf_2_V_address0 <= zext_ln1495_6_fu_2471_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1))) then 
            conv_out_buf_2_V_address0 <= zext_ln1495_9_fu_1987_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_2_V_address0 <= grp_conv_7x7_fu_937_Y_buf2_address0;
        else 
            conv_out_buf_2_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    conv_out_buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp1_iter14, ap_enable_reg_pp2_iter14, grp_conv_7x7_fu_937_Y_buf2_ce0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter14 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1)))) then 
            conv_out_buf_2_V_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_2_V_ce0 <= grp_conv_7x7_fu_937_Y_buf2_ce0;
        else 
            conv_out_buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf_2_V_we0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, grp_conv_7x7_fu_937_Y_buf2_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_2_V_we0 <= grp_conv_7x7_fu_937_Y_buf2_we0;
        else 
            conv_out_buf_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf_3_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_block_pp2_stage0, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp1_iter14, ap_enable_reg_pp2_iter14, grp_conv_7x7_fu_937_Y_buf3_address0, zext_ln1495_9_fu_1987_p1, zext_ln1495_6_fu_2471_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter14 = ap_const_logic_1))) then 
            conv_out_buf_3_V_address0 <= zext_ln1495_6_fu_2471_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1))) then 
            conv_out_buf_3_V_address0 <= zext_ln1495_9_fu_1987_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_3_V_address0 <= grp_conv_7x7_fu_937_Y_buf3_address0;
        else 
            conv_out_buf_3_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    conv_out_buf_3_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_CS_fsm_state19, ap_CS_fsm_state45, ap_enable_reg_pp1_iter14, ap_enable_reg_pp2_iter14, grp_conv_7x7_fu_937_Y_buf3_ce0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter14 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1)))) then 
            conv_out_buf_3_V_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_3_V_ce0 <= grp_conv_7x7_fu_937_Y_buf3_ce0;
        else 
            conv_out_buf_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf_3_V_we0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, grp_conv_7x7_fu_937_Y_buf3_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            conv_out_buf_3_V_we0 <= grp_conv_7x7_fu_937_Y_buf3_we0;
        else 
            conv_out_buf_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_0_address0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf_address0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_0_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_0_address0 <= grp_conv_7x7_fu_937_W_buf_address0;
        else 
            conv_wt_buf_ping_V_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_ping_V_0_ce0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf_ce0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_0_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_0_ce0 <= grp_conv_7x7_fu_937_W_buf_ce0;
        else 
            conv_wt_buf_ping_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_0_ce1_assign_proc : process(ap_CS_fsm_state19, grp_conv_7x7_fu_937_W_buf_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_0_ce1 <= grp_conv_7x7_fu_937_W_buf_ce1;
        else 
            conv_wt_buf_ping_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_0_we0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf_we0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_0_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf_we0;
        else 
            conv_wt_buf_ping_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_1_address0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf6_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf1_address0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_1_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_1_address0 <= grp_conv_7x7_fu_937_W_buf6_address0;
        else 
            conv_wt_buf_ping_V_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_ping_V_1_ce0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf6_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf1_ce0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_1_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_1_ce0 <= grp_conv_7x7_fu_937_W_buf6_ce0;
        else 
            conv_wt_buf_ping_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_1_ce1_assign_proc : process(ap_CS_fsm_state19, grp_conv_7x7_fu_937_W_buf6_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_1_ce1 <= grp_conv_7x7_fu_937_W_buf6_ce1;
        else 
            conv_wt_buf_ping_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_1_we0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf1_we0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_1_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf1_we0;
        else 
            conv_wt_buf_ping_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_2_address0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf7_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf2_address0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_2_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_2_address0 <= grp_conv_7x7_fu_937_W_buf7_address0;
        else 
            conv_wt_buf_ping_V_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_ping_V_2_ce0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf7_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf2_ce0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_2_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_2_ce0 <= grp_conv_7x7_fu_937_W_buf7_ce0;
        else 
            conv_wt_buf_ping_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_2_ce1_assign_proc : process(ap_CS_fsm_state19, grp_conv_7x7_fu_937_W_buf7_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_2_ce1 <= grp_conv_7x7_fu_937_W_buf7_ce1;
        else 
            conv_wt_buf_ping_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_2_we0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf2_we0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_2_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf2_we0;
        else 
            conv_wt_buf_ping_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_3_address0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf8_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf3_address0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_3_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_3_address0 <= grp_conv_7x7_fu_937_W_buf8_address0;
        else 
            conv_wt_buf_ping_V_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_ping_V_3_ce0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf8_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf3_ce0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_3_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_3_ce0 <= grp_conv_7x7_fu_937_W_buf8_ce0;
        else 
            conv_wt_buf_ping_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_3_ce1_assign_proc : process(ap_CS_fsm_state19, grp_conv_7x7_fu_937_W_buf8_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_3_ce1 <= grp_conv_7x7_fu_937_W_buf8_ce1;
        else 
            conv_wt_buf_ping_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_3_we0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf3_we0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_3_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf3_we0;
        else 
            conv_wt_buf_ping_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_4_address0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf9_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf4_address0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_4_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_4_address0 <= grp_conv_7x7_fu_937_W_buf9_address0;
        else 
            conv_wt_buf_ping_V_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_ping_V_4_ce0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf9_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf4_ce0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_4_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_4_ce0 <= grp_conv_7x7_fu_937_W_buf9_ce0;
        else 
            conv_wt_buf_ping_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_4_ce1_assign_proc : process(ap_CS_fsm_state19, grp_conv_7x7_fu_937_W_buf9_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_4_ce1 <= grp_conv_7x7_fu_937_W_buf9_ce1;
        else 
            conv_wt_buf_ping_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_4_we0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf4_we0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_4_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf4_we0;
        else 
            conv_wt_buf_ping_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_5_address0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf10_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf5_address0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_5_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_5_address0 <= grp_conv_7x7_fu_937_W_buf10_address0;
        else 
            conv_wt_buf_ping_V_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_ping_V_5_ce0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf10_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf5_ce0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_5_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_5_ce0 <= grp_conv_7x7_fu_937_W_buf10_ce0;
        else 
            conv_wt_buf_ping_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_5_ce1_assign_proc : process(ap_CS_fsm_state19, grp_conv_7x7_fu_937_W_buf10_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_5_ce1 <= grp_conv_7x7_fu_937_W_buf10_ce1;
        else 
            conv_wt_buf_ping_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_5_we0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf5_we0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_5_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf5_we0;
        else 
            conv_wt_buf_ping_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_6_address0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf11_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf6_address0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_6_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_6_address0 <= grp_conv_7x7_fu_937_W_buf11_address0;
        else 
            conv_wt_buf_ping_V_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_ping_V_6_ce0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state44, grp_conv_7x7_fu_937_W_buf11_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf6_ce0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_6_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_6_ce0 <= grp_conv_7x7_fu_937_W_buf11_ce0;
        else 
            conv_wt_buf_ping_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_6_ce1_assign_proc : process(ap_CS_fsm_state19, grp_conv_7x7_fu_937_W_buf11_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv_wt_buf_ping_V_6_ce1 <= grp_conv_7x7_fu_937_W_buf11_ce1;
        else 
            conv_wt_buf_ping_V_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_ping_V_6_we0_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf6_we0, ap_predicate_op449_call_state44)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv_wt_buf_ping_V_6_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf6_we0;
        else 
            conv_wt_buf_ping_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_0_address0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf_address0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_0_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_0_address0 <= grp_conv_7x7_fu_937_W_buf_address0;
        else 
            conv_wt_buf_pong_V_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_pong_V_0_ce0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf_ce0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_0_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_0_ce0 <= grp_conv_7x7_fu_937_W_buf_ce0;
        else 
            conv_wt_buf_pong_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_0_ce1_assign_proc : process(ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_0_ce1 <= grp_conv_7x7_fu_937_W_buf_ce1;
        else 
            conv_wt_buf_pong_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_0_we0_assign_proc : process(ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf_we0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_0_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf_we0;
        else 
            conv_wt_buf_pong_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_1_address0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf6_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf1_address0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_1_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_1_address0 <= grp_conv_7x7_fu_937_W_buf6_address0;
        else 
            conv_wt_buf_pong_V_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_pong_V_1_ce0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf6_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf1_ce0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_1_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_1_ce0 <= grp_conv_7x7_fu_937_W_buf6_ce0;
        else 
            conv_wt_buf_pong_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_1_ce1_assign_proc : process(ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf6_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_1_ce1 <= grp_conv_7x7_fu_937_W_buf6_ce1;
        else 
            conv_wt_buf_pong_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_1_we0_assign_proc : process(ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf1_we0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_1_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf1_we0;
        else 
            conv_wt_buf_pong_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_2_address0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf7_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf2_address0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_2_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_2_address0 <= grp_conv_7x7_fu_937_W_buf7_address0;
        else 
            conv_wt_buf_pong_V_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_pong_V_2_ce0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf7_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf2_ce0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_2_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_2_ce0 <= grp_conv_7x7_fu_937_W_buf7_ce0;
        else 
            conv_wt_buf_pong_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_2_ce1_assign_proc : process(ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf7_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_2_ce1 <= grp_conv_7x7_fu_937_W_buf7_ce1;
        else 
            conv_wt_buf_pong_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_2_we0_assign_proc : process(ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf2_we0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_2_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf2_we0;
        else 
            conv_wt_buf_pong_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_3_address0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf8_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf3_address0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_3_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_3_address0 <= grp_conv_7x7_fu_937_W_buf8_address0;
        else 
            conv_wt_buf_pong_V_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_pong_V_3_ce0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf8_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf3_ce0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_3_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_3_ce0 <= grp_conv_7x7_fu_937_W_buf8_ce0;
        else 
            conv_wt_buf_pong_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_3_ce1_assign_proc : process(ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf8_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_3_ce1 <= grp_conv_7x7_fu_937_W_buf8_ce1;
        else 
            conv_wt_buf_pong_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_3_we0_assign_proc : process(ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf3_we0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_3_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf3_we0;
        else 
            conv_wt_buf_pong_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_4_address0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf9_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf4_address0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_4_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_4_address0 <= grp_conv_7x7_fu_937_W_buf9_address0;
        else 
            conv_wt_buf_pong_V_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_pong_V_4_ce0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf9_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf4_ce0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_4_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_4_ce0 <= grp_conv_7x7_fu_937_W_buf9_ce0;
        else 
            conv_wt_buf_pong_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_4_ce1_assign_proc : process(ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf9_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_4_ce1 <= grp_conv_7x7_fu_937_W_buf9_ce1;
        else 
            conv_wt_buf_pong_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_4_we0_assign_proc : process(ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf4_we0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_4_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf4_we0;
        else 
            conv_wt_buf_pong_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_5_address0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf10_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf5_address0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_5_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_5_address0 <= grp_conv_7x7_fu_937_W_buf10_address0;
        else 
            conv_wt_buf_pong_V_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_pong_V_5_ce0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf10_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf5_ce0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_5_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_5_ce0 <= grp_conv_7x7_fu_937_W_buf10_ce0;
        else 
            conv_wt_buf_pong_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_5_ce1_assign_proc : process(ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf10_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_5_ce1 <= grp_conv_7x7_fu_937_W_buf10_ce1;
        else 
            conv_wt_buf_pong_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_5_we0_assign_proc : process(ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf5_we0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_5_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf5_we0;
        else 
            conv_wt_buf_pong_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_6_address0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf11_address0, grp_load_layer_params_from_DRAM_fu_963_weight_buf6_address0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_6_address0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_6_address0 <= grp_conv_7x7_fu_937_W_buf11_address0;
        else 
            conv_wt_buf_pong_V_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_wt_buf_pong_V_6_ce0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf11_ce0, grp_load_layer_params_from_DRAM_fu_963_weight_buf6_ce0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_6_ce0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_6_ce0 <= grp_conv_7x7_fu_937_W_buf11_ce0;
        else 
            conv_wt_buf_pong_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_6_ce1_assign_proc : process(ap_CS_fsm_state45, grp_conv_7x7_fu_937_W_buf11_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv_wt_buf_pong_V_6_ce1 <= grp_conv_7x7_fu_937_W_buf11_ce1;
        else 
            conv_wt_buf_pong_V_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_pong_V_6_we0_assign_proc : process(ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_weight_buf6_we0, ap_predicate_op439_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            conv_wt_buf_pong_V_6_we0 <= grp_load_layer_params_from_DRAM_fu_963_weight_buf6_we0;
        else 
            conv_wt_buf_pong_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_29_fu_1076_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1060_p1) + unsigned(p_shl7_cast_fu_1072_p1));
    empty_30_fu_1317_p2 <= "1" when (unsigned(add_ln39_fu_1312_p2) > unsigned(ap_const_lv11_2DF)) else "0";
    empty_32_fu_1597_p1 <= select_ln24_reg_2665(4 - 1 downto 0);
    empty_33_fu_1600_p1 <= select_ln24_reg_2665(1 - 1 downto 0);
    empty_34_fu_1670_p2 <= std_logic_vector(unsigned(zext_ln119_1_fu_1666_p1) + unsigned(shl_ln_reg_2831));
    empty_35_fu_1797_p2 <= std_logic_vector(unsigned(zext_ln122_1_fu_1793_p1) + unsigned(trunc_ln39_2_mid2_reg_2646));
    empty_38_fu_2000_p2 <= "1" when (grp_fu_1655_p2 = ap_const_lv11_0) else "0";
    empty_40_fu_2039_p2 <= "1" when (grp_fu_1661_p2 = ap_const_lv11_0) else "0";
    empty_41_fu_2154_p2 <= std_logic_vector(unsigned(zext_ln119_fu_2150_p1) + unsigned(shl_ln114_1_reg_3048));
    empty_42_fu_2281_p2 <= std_logic_vector(unsigned(zext_ln122_fu_2277_p1) + unsigned(trunc_ln39_2_mid2_reg_2646));
    empty_45_fu_2484_p2 <= "1" when (grp_fu_2139_p2 = ap_const_lv11_0) else "0";
    empty_47_fu_2523_p2 <= "1" when (grp_fu_2145_p2 = ap_const_lv11_0) else "0";
    empty_49_fu_1206_p1 <= add_ln65_fu_1187_p2(5 - 1 downto 0);
    empty_fu_1048_p1 <= tj_reg_566(5 - 1 downto 0);

    fm_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op235_readreq_state7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op235_readreq_state7 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            fm_ARVALID <= ap_const_logic_1;
        else 
            fm_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    fm_AWADDR_assign_proc : process(ap_enable_reg_pp1_iter15, empty_38_reg_2976, ap_enable_reg_pp2_iter15, empty_45_reg_3193, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, fm_addr_2_reg_2970, fm_addr_1_reg_3187)
    begin
        if (((empty_45_reg_3193 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            fm_AWADDR <= fm_addr_1_reg_3187;
        elsif (((empty_38_reg_2976 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            fm_AWADDR <= fm_addr_2_reg_2970;
        else 
            fm_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fm_AWVALID_assign_proc : process(ap_enable_reg_pp1_iter15, empty_38_reg_2976, ap_enable_reg_pp2_iter15, empty_45_reg_3193, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((empty_45_reg_3193 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((empty_38_reg_2976 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            fm_AWVALID <= ap_const_logic_1;
        else 
            fm_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    fm_BREADY_assign_proc : process(ap_enable_reg_pp1_iter21, empty_40_reg_2985_pp1_iter20_reg, ap_enable_reg_pp2_iter21, empty_47_reg_3202_pp2_iter20_reg, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((empty_47_reg_3202_pp2_iter20_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((empty_40_reg_2985_pp1_iter20_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            fm_BREADY <= ap_const_logic_1;
        else 
            fm_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    fm_RREADY_assign_proc : process(ap_enable_reg_pp0_iter10, ap_predicate_op246_read_state14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op246_read_state14 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fm_RREADY <= ap_const_logic_1;
        else 
            fm_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    fm_WDATA_assign_proc : process(ap_enable_reg_pp1_iter16, icmp_ln119_1_reg_2848_pp1_iter15_reg, ap_enable_reg_pp2_iter16, icmp_ln119_reg_3065_pp2_iter15_reg, zext_ln130_12_fu_2045_p1, ap_block_pp1_stage0_01001, zext_ln130_9_fu_2529_p1, ap_block_pp2_stage0_01001)
    begin
        if (((icmp_ln119_reg_3065_pp2_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_01001))) then 
            fm_WDATA <= zext_ln130_9_fu_2529_p1;
        elsif (((icmp_ln119_1_reg_2848_pp1_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001))) then 
            fm_WDATA <= zext_ln130_12_fu_2045_p1;
        else 
            fm_WDATA <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fm_WVALID_assign_proc : process(ap_enable_reg_pp1_iter16, icmp_ln119_1_reg_2848_pp1_iter15_reg, ap_enable_reg_pp2_iter16, icmp_ln119_reg_3065_pp2_iter15_reg, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((icmp_ln119_reg_3065_pp2_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((icmp_ln119_1_reg_2848_pp1_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            fm_WVALID <= ap_const_logic_1;
        else 
            fm_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    fm_blk_n_AR_assign_proc : process(m_axi_fm_ARREADY, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, icmp_ln34_reg_2717_pp0_iter2_reg, or_ln46_reg_2775_pp0_iter2_reg)
    begin
        if (((or_ln46_reg_2775_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln34_reg_2717_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            fm_blk_n_AR <= m_axi_fm_ARREADY;
        else 
            fm_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    fm_blk_n_AW_assign_proc : process(m_axi_fm_AWREADY, ap_enable_reg_pp1_iter15, ap_block_pp1_stage0, empty_38_reg_2976, ap_enable_reg_pp2_iter15, ap_block_pp2_stage0, empty_45_reg_3193)
    begin
        if ((((empty_45_reg_3193 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or ((empty_38_reg_2976 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            fm_blk_n_AW <= m_axi_fm_AWREADY;
        else 
            fm_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    fm_blk_n_B_assign_proc : process(m_axi_fm_BVALID, ap_block_pp1_stage0, ap_enable_reg_pp1_iter21, empty_40_reg_2985_pp1_iter20_reg, ap_block_pp2_stage0, ap_enable_reg_pp2_iter21, empty_47_reg_3202_pp2_iter20_reg)
    begin
        if ((((empty_47_reg_3202_pp2_iter20_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or ((empty_40_reg_2985_pp1_iter20_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            fm_blk_n_B <= m_axi_fm_BVALID;
        else 
            fm_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    fm_blk_n_R_assign_proc : process(m_axi_fm_RVALID, ap_block_pp0_stage0, ap_enable_reg_pp0_iter10, icmp_ln34_reg_2717_pp0_iter9_reg, or_ln46_reg_2775_pp0_iter9_reg)
    begin
        if (((or_ln46_reg_2775_pp0_iter9_reg = ap_const_lv1_0) and (icmp_ln34_reg_2717_pp0_iter9_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fm_blk_n_R <= m_axi_fm_RVALID;
        else 
            fm_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    fm_blk_n_W_assign_proc : process(m_axi_fm_WREADY, ap_block_pp1_stage0, ap_enable_reg_pp1_iter16, icmp_ln119_1_reg_2848_pp1_iter15_reg, ap_block_pp2_stage0, ap_enable_reg_pp2_iter16, icmp_ln119_reg_3065_pp2_iter15_reg)
    begin
        if ((((icmp_ln119_reg_3065_pp2_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)) or ((icmp_ln119_1_reg_2848_pp1_iter15_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            fm_blk_n_W <= m_axi_fm_WREADY;
        else 
            fm_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf10_q0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_5_q0, conv_wt_buf_pong_V_5_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf10_q0 <= conv_wt_buf_ping_V_5_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf10_q0 <= conv_wt_buf_pong_V_5_q0;
        else 
            grp_conv_7x7_fu_937_W_buf10_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf10_q1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_5_q1, conv_wt_buf_pong_V_5_q1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf10_q1 <= conv_wt_buf_ping_V_5_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf10_q1 <= conv_wt_buf_pong_V_5_q1;
        else 
            grp_conv_7x7_fu_937_W_buf10_q1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf11_q0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_6_q0, conv_wt_buf_pong_V_6_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf11_q0 <= conv_wt_buf_ping_V_6_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf11_q0 <= conv_wt_buf_pong_V_6_q0;
        else 
            grp_conv_7x7_fu_937_W_buf11_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf11_q1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_6_q1, conv_wt_buf_pong_V_6_q1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf11_q1 <= conv_wt_buf_ping_V_6_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf11_q1 <= conv_wt_buf_pong_V_6_q1;
        else 
            grp_conv_7x7_fu_937_W_buf11_q1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf6_q0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_1_q0, conv_wt_buf_pong_V_1_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf6_q0 <= conv_wt_buf_ping_V_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf6_q0 <= conv_wt_buf_pong_V_1_q0;
        else 
            grp_conv_7x7_fu_937_W_buf6_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf6_q1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_1_q1, conv_wt_buf_pong_V_1_q1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf6_q1 <= conv_wt_buf_ping_V_1_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf6_q1 <= conv_wt_buf_pong_V_1_q1;
        else 
            grp_conv_7x7_fu_937_W_buf6_q1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf7_q0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_2_q0, conv_wt_buf_pong_V_2_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf7_q0 <= conv_wt_buf_ping_V_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf7_q0 <= conv_wt_buf_pong_V_2_q0;
        else 
            grp_conv_7x7_fu_937_W_buf7_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf7_q1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_2_q1, conv_wt_buf_pong_V_2_q1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf7_q1 <= conv_wt_buf_ping_V_2_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf7_q1 <= conv_wt_buf_pong_V_2_q1;
        else 
            grp_conv_7x7_fu_937_W_buf7_q1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf8_q0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_3_q0, conv_wt_buf_pong_V_3_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf8_q0 <= conv_wt_buf_ping_V_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf8_q0 <= conv_wt_buf_pong_V_3_q0;
        else 
            grp_conv_7x7_fu_937_W_buf8_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf8_q1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_3_q1, conv_wt_buf_pong_V_3_q1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf8_q1 <= conv_wt_buf_ping_V_3_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf8_q1 <= conv_wt_buf_pong_V_3_q1;
        else 
            grp_conv_7x7_fu_937_W_buf8_q1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf9_q0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_4_q0, conv_wt_buf_pong_V_4_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf9_q0 <= conv_wt_buf_ping_V_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf9_q0 <= conv_wt_buf_pong_V_4_q0;
        else 
            grp_conv_7x7_fu_937_W_buf9_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf9_q1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_4_q1, conv_wt_buf_pong_V_4_q1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf9_q1 <= conv_wt_buf_ping_V_4_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf9_q1 <= conv_wt_buf_pong_V_4_q1;
        else 
            grp_conv_7x7_fu_937_W_buf9_q1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf_q0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_0_q0, conv_wt_buf_pong_V_0_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf_q0 <= conv_wt_buf_ping_V_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf_q0 <= conv_wt_buf_pong_V_0_q0;
        else 
            grp_conv_7x7_fu_937_W_buf_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_W_buf_q1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state45, conv_wt_buf_ping_V_0_q1, conv_wt_buf_pong_V_0_q1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_W_buf_q1 <= conv_wt_buf_ping_V_0_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_W_buf_q1 <= conv_wt_buf_pong_V_0_q1;
        else 
            grp_conv_7x7_fu_937_W_buf_q1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_conv_7x7_fu_937_ap_start <= grp_conv_7x7_fu_937_ap_start_reg;

    grp_conv_7x7_fu_937_p_read_assign_proc : process(conv_bias_buf_pong_V_0_1_load_reg_2811, ap_CS_fsm_state19, ap_CS_fsm_state45, conv_bias_buf_ping_V_0_3_reg_740)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_p_read <= conv_bias_buf_ping_V_0_3_reg_740;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_p_read <= conv_bias_buf_pong_V_0_1_load_reg_2811;
        else 
            grp_conv_7x7_fu_937_p_read <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_p_read1_assign_proc : process(conv_bias_buf_pong_V_1_1_load_reg_2816, ap_CS_fsm_state19, ap_CS_fsm_state45, conv_bias_buf_ping_V_1_3_reg_729)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_p_read1 <= conv_bias_buf_ping_V_1_3_reg_729;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_p_read1 <= conv_bias_buf_pong_V_1_1_load_reg_2816;
        else 
            grp_conv_7x7_fu_937_p_read1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_p_read2_assign_proc : process(conv_bias_buf_pong_V_2_1_load_reg_2821, ap_CS_fsm_state19, ap_CS_fsm_state45, conv_bias_buf_ping_V_2_3_reg_718)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_p_read2 <= conv_bias_buf_ping_V_2_3_reg_718;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_p_read2 <= conv_bias_buf_pong_V_2_1_load_reg_2821;
        else 
            grp_conv_7x7_fu_937_p_read2 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_conv_7x7_fu_937_p_read3_assign_proc : process(conv_bias_buf_pong_V_3_1_load_reg_2826, ap_CS_fsm_state19, ap_CS_fsm_state45, conv_bias_buf_ping_V_3_3_reg_707)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_7x7_fu_937_p_read3 <= conv_bias_buf_ping_V_3_3_reg_707;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_conv_7x7_fu_937_p_read3 <= conv_bias_buf_pong_V_3_1_load_reg_2826;
        else 
            grp_conv_7x7_fu_937_p_read3 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1032_p2 <= "1" when (unsigned(select_ln24_reg_2665) < unsigned(ap_const_lv5_F)) else "0";
    grp_fu_1037_p2 <= std_logic_vector(unsigned(empty_32_reg_2800) + unsigned(ap_const_lv4_1));

    grp_fu_1655_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_1655_ce <= ap_const_logic_1;
        else 
            grp_fu_1655_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1655_p1 <= ap_const_lv11_14(6 - 1 downto 0);

    grp_fu_1661_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_1661_ce <= ap_const_logic_1;
        else 
            grp_fu_1661_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1661_p1 <= ap_const_lv11_14(6 - 1 downto 0);

    grp_fu_2139_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            grp_fu_2139_ce <= ap_const_logic_1;
        else 
            grp_fu_2139_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2139_p1 <= ap_const_lv11_14(6 - 1 downto 0);

    grp_fu_2145_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            grp_fu_2145_ce <= ap_const_logic_1;
        else 
            grp_fu_2145_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2145_p1 <= ap_const_lv11_14(6 - 1 downto 0);
    grp_fu_2533_p0 <= grp_fu_2533_p00(6 - 1 downto 0);
    grp_fu_2533_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_1_reg_2749_pp0_iter9_reg),12));
    grp_fu_2533_p1 <= ap_const_lv12_2E(7 - 1 downto 0);
    grp_fu_2533_p2 <= grp_fu_2533_p20(6 - 1 downto 0);
    grp_fu_2533_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_reg_2744_pp0_iter9_reg),12));
    grp_load_layer_params_from_DRAM_fu_963_ap_start <= grp_load_layer_params_from_DRAM_fu_963_ap_start_reg;

    grp_load_layer_params_from_DRAM_fu_963_kernel_group_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, add_ln115_reg_2993, ap_CS_fsm_state44, add_ln142_reg_3210, ap_predicate_op439_call_state44, ap_predicate_op449_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1))) then 
            grp_load_layer_params_from_DRAM_fu_963_kernel_group <= add_ln142_reg_3210;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            grp_load_layer_params_from_DRAM_fu_963_kernel_group <= add_ln115_reg_2993;
        elsif (((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_load_layer_params_from_DRAM_fu_963_kernel_group <= ap_const_lv4_0;
        else 
            grp_load_layer_params_from_DRAM_fu_963_kernel_group <= "XXXX";
        end if; 
    end process;


    grp_load_layer_params_from_DRAM_fu_963_p_read_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, conv_bias_buf_pong_V_0_1_load_1_reg_2998, ap_CS_fsm_state44, conv_bias_buf_ping_V_0_210_reg_614, conv_bias_buf_ping_V_0_3_reg_740, ap_predicate_op439_call_state44, ap_predicate_op449_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read <= conv_bias_buf_ping_V_0_3_reg_740;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read <= conv_bias_buf_pong_V_0_1_load_1_reg_2998;
        elsif (((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read <= conv_bias_buf_ping_V_0_210_reg_614;
        else 
            grp_load_layer_params_from_DRAM_fu_963_p_read <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_layer_params_from_DRAM_fu_963_p_read1_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, conv_bias_buf_pong_V_1_1_load_1_reg_3003, ap_CS_fsm_state44, conv_bias_buf_ping_V_1_212_reg_602, conv_bias_buf_ping_V_1_3_reg_729, ap_predicate_op439_call_state44, ap_predicate_op449_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read1 <= conv_bias_buf_ping_V_1_3_reg_729;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read1 <= conv_bias_buf_pong_V_1_1_load_1_reg_3003;
        elsif (((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read1 <= conv_bias_buf_ping_V_1_212_reg_602;
        else 
            grp_load_layer_params_from_DRAM_fu_963_p_read1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_layer_params_from_DRAM_fu_963_p_read2_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, conv_bias_buf_pong_V_2_1_load_1_reg_3008, ap_CS_fsm_state44, conv_bias_buf_ping_V_2_214_reg_590, conv_bias_buf_ping_V_2_3_reg_718, ap_predicate_op439_call_state44, ap_predicate_op449_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read2 <= conv_bias_buf_ping_V_2_3_reg_718;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read2 <= conv_bias_buf_pong_V_2_1_load_1_reg_3008;
        elsif (((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read2 <= conv_bias_buf_ping_V_2_214_reg_590;
        else 
            grp_load_layer_params_from_DRAM_fu_963_p_read2 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_load_layer_params_from_DRAM_fu_963_p_read3_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, conv_bias_buf_pong_V_3_1_load_1_reg_3013, ap_CS_fsm_state44, conv_bias_buf_ping_V_3_216_reg_578, conv_bias_buf_ping_V_3_3_reg_707, ap_predicate_op439_call_state44, ap_predicate_op449_call_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read3 <= conv_bias_buf_ping_V_3_3_reg_707;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read3 <= conv_bias_buf_pong_V_3_1_load_1_reg_3013;
        elsif (((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_load_layer_params_from_DRAM_fu_963_p_read3 <= conv_bias_buf_ping_V_3_216_reg_578;
        else 
            grp_load_layer_params_from_DRAM_fu_963_p_read3 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln119_1_fu_1649_p2 <= "1" when (ap_phi_mux_indvar_flatten97_phi_fu_755_p4 = ap_const_lv11_730) else "0";
    icmp_ln119_fu_2133_p2 <= "1" when (ap_phi_mux_indvar_flatten153_phi_fu_812_p4 = ap_const_lv11_730) else "0";
    icmp_ln122_1_fu_1681_p2 <= "1" when (indvar_flatten52_reg_774 = ap_const_lv10_1CC) else "0";
    icmp_ln122_fu_2165_p2 <= "1" when (indvar_flatten108_reg_831 = ap_const_lv10_1CC) else "0";
    icmp_ln125_1_fu_1740_p2 <= "1" when (j_2_reg_797 = ap_const_lv5_14) else "0";
    icmp_ln125_fu_2224_p2 <= "1" when (j_1_reg_854 = ap_const_lv5_14) else "0";
    icmp_ln34_fu_1323_p2 <= "1" when (indvar_flatten41_reg_638 = ap_const_lv13_1C08) else "0";
    icmp_ln37_fu_1335_p2 <= "1" when (indvar_flatten_reg_660 = ap_const_lv12_958) else "0";
    icmp_ln42_fu_1363_p2 <= "1" when (j_reg_682 = ap_const_lv6_2E) else "0";
    icmp_ln46_fu_1512_p2 <= "1" when (unsigned(add_ln46_fu_1507_p2) > unsigned(ap_const_lv12_4FF)) else "0";
    icmp_ln62_fu_1100_p2 <= "1" when (indvar_flatten251_reg_532 = ap_const_lv14_2000) else "0";
    icmp_ln65_fu_1112_p2 <= "1" when (indvar_flatten167_reg_554 = ap_const_lv11_200) else "0";
    icmp_ln75_fu_1175_p2 <= "1" when (tk_reg_626 = ap_const_lv5_10) else "0";
    icmp_ln79_fu_1290_p2 <= "1" when (select_ln24_fu_1198_p3 = ap_const_lv5_0) else "0";
    mul_ln130_1_fu_2553_p0 <= mul_ln130_1_fu_2553_p00(6 - 1 downto 0);
    mul_ln130_1_fu_2553_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_41_reg_3069),25));
    mul_ln130_1_fu_2553_p1 <= ap_const_lv25_73000(20 - 1 downto 0);
    mul_ln130_2_fu_2559_p0 <= mul_ln130_2_fu_2559_p00(6 - 1 downto 0);
    mul_ln130_2_fu_2559_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid1119_reg_3083),25));
    mul_ln130_2_fu_2559_p1 <= ap_const_lv25_73000(20 - 1 downto 0);
    mul_ln130_3_fu_2547_p0 <= mul_ln130_3_fu_2547_p00(6 - 1 downto 0);
    mul_ln130_3_fu_2547_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid163_reg_2866),25));
    mul_ln130_3_fu_2547_p1 <= ap_const_lv25_73000(20 - 1 downto 0);
    mul_ln130_fu_2541_p0 <= mul_ln130_fu_2541_p00(6 - 1 downto 0);
    mul_ln130_fu_2541_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_34_reg_2852),25));
    mul_ln130_fu_2541_p1 <= ap_const_lv25_73000(20 - 1 downto 0);
    mul_ln23_fu_1136_p0 <= mul_ln23_fu_1136_p00(5 - 1 downto 0);
    mul_ln23_fu_1136_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln23_1_reg_2640),11));
    mul_ln23_fu_1136_p1 <= ap_const_lv11_2E(7 - 1 downto 0);
    mul_ln34_fu_1436_p0 <= mul_ln34_fu_1436_p00(2 - 1 downto 0);
    mul_ln34_fu_1436_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln34_1_reg_2727),23));
    mul_ln34_fu_1436_p1 <= ap_const_lv23_1CC000(22 - 1 downto 0);
    or_ln122_1_fu_1758_p2 <= (icmp_ln122_1_reg_2857 or and_ln119_1_fu_1746_p2);
    or_ln122_fu_2242_p2 <= (icmp_ln122_reg_3074 or and_ln119_fu_2230_p2);
    or_ln24_fu_1193_p2 <= (icmp_ln65_reg_2630 or and_ln23_fu_1181_p2);
    or_ln37_fu_1381_p2 <= (icmp_ln37_fu_1335_p2 or and_ln34_fu_1369_p2);
    or_ln46_fu_1518_p2 <= (select_ln37_2_fu_1466_p3 or icmp_ln46_fu_1512_p2);
    p_mid1106_fu_2352_p2 <= std_logic_vector(unsigned(zext_ln122_2_fu_2349_p1) + unsigned(trunc_ln39_2_mid2_reg_2646));
    p_mid1119_fu_2175_p2 <= std_logic_vector(unsigned(zext_ln119_2_fu_2171_p1) + unsigned(shl_ln114_1_reg_3048));
    p_mid1163_fu_1234_p2 <= std_logic_vector(unsigned(p_shl_cast_mid1_fu_1218_p1) + unsigned(p_shl7_cast_mid1_fu_1230_p1));
    p_mid129_fu_1296_p2 <= "1" when (unsigned(add_ln23_fu_1152_p2) > unsigned(ap_const_lv11_2DF)) else "0";
    p_mid150_fu_1868_p2 <= std_logic_vector(unsigned(zext_ln122_3_fu_1865_p1) + unsigned(trunc_ln39_2_mid2_reg_2646));
    p_mid163_fu_1691_p2 <= std_logic_vector(unsigned(zext_ln119_3_fu_1687_p1) + unsigned(shl_ln_reg_2831));
    p_mid16_fu_1460_p2 <= "1" when (unsigned(add_ln39_1_fu_1455_p2) > unsigned(ap_const_lv11_2DF)) else "0";
    p_shl1_cast_fu_2325_p3 <= (select_ln122_1_reg_3128 & ap_const_lv4_0);
    p_shl3_cast_fu_1841_p3 <= (select_ln122_4_reg_2911 & ap_const_lv4_0);
    p_shl7_cast_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl7_fu_1064_p3),11));
    p_shl7_cast_mid1_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl7_mid1_fu_1222_p3),11));
    p_shl7_fu_1064_p3 <= (empty_fu_1048_p1 & ap_const_lv3_0);
    p_shl7_mid1_fu_1222_p3 <= (empty_49_fu_1206_p1 & ap_const_lv3_0);
    p_shl_cast_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_1052_p3),11));
    p_shl_cast_mid1_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_mid1_fu_1210_p3),11));
    p_shl_fu_1052_p3 <= (empty_fu_1048_p1 & ap_const_lv5_0);
    p_shl_mid1_fu_1210_p3 <= (empty_49_fu_1206_p1 & ap_const_lv5_0);
    select_ln119_1_fu_2180_p3 <= 
        add_ln119_1_fu_2159_p2 when (icmp_ln122_fu_2165_p2(0) = '1') else 
        ap_phi_mux_f_1_phi_fu_824_p4;
    select_ln119_2_fu_2405_p3 <= 
        add_ln130_12_reg_3151 when (icmp_ln122_reg_3074_pp2_iter13_reg(0) = '1') else 
        add_ln130_4_reg_3140;
    select_ln119_3_fu_2453_p3 <= 
        tmp_3_fu_2433_p4 when (icmp_ln122_reg_3074_pp2_iter13_reg(0) = '1') else 
        tmp_4_fu_2443_p4;
    select_ln119_4_fu_1725_p3 <= 
        ap_const_lv5_0 when (icmp_ln122_1_reg_2857(0) = '1') else 
        ap_phi_mux_i_1_phi_fu_789_p4;
    select_ln119_5_fu_1696_p3 <= 
        add_ln119_fu_1675_p2 when (icmp_ln122_1_fu_1681_p2(0) = '1') else 
        ap_phi_mux_f_phi_fu_767_p4;
    select_ln119_6_fu_1921_p3 <= 
        add_ln130_17_reg_2934 when (icmp_ln122_1_reg_2857_pp1_iter13_reg(0) = '1') else 
        add_ln130_8_reg_2923;
    select_ln119_7_fu_1969_p3 <= 
        tmp_9_fu_1949_p4 when (icmp_ln122_1_reg_2857_pp1_iter13_reg(0) = '1') else 
        tmp_10_fu_1959_p4;
    select_ln119_fu_2209_p3 <= 
        ap_const_lv5_0 when (icmp_ln122_reg_3074(0) = '1') else 
        ap_phi_mux_i_2_phi_fu_846_p4;
    select_ln122_1_fu_2255_p3 <= 
        add_ln122_1_fu_2236_p2 when (and_ln119_fu_2230_p2(0) = '1') else 
        select_ln119_fu_2209_p3;
    select_ln122_2_fu_2460_p3 <= 
        tmp_s_fu_2423_p4 when (and_ln119_reg_3113_pp2_iter13_reg(0) = '1') else 
        select_ln119_3_fu_2453_p3;
    select_ln122_3_fu_1763_p3 <= 
        ap_const_lv5_0 when (or_ln122_1_fu_1758_p2(0) = '1') else 
        j_2_reg_797;
    select_ln122_4_fu_1771_p3 <= 
        add_ln122_fu_1752_p2 when (and_ln119_1_fu_1746_p2(0) = '1') else 
        select_ln119_4_fu_1725_p3;
    select_ln122_5_fu_1976_p3 <= 
        tmp_7_fu_1939_p4 when (and_ln119_1_reg_2896_pp1_iter13_reg(0) = '1') else 
        select_ln119_7_fu_1969_p3;
    select_ln122_6_fu_2198_p3 <= 
        ap_const_lv10_1 when (icmp_ln122_fu_2165_p2(0) = '1') else 
        add_ln122_2_fu_2192_p2;
    select_ln122_7_fu_1714_p3 <= 
        ap_const_lv10_1 when (icmp_ln122_1_fu_1681_p2(0) = '1') else 
        add_ln122_3_fu_1708_p2;
    select_ln122_fu_2247_p3 <= 
        ap_const_lv5_0 when (or_ln122_fu_2242_p2(0) = '1') else 
        j_1_reg_854;
    select_ln128_1_fu_2515_p3 <= 
        ap_const_lv15_0 when (tmp_5_fu_2507_p3(0) = '1') else 
        trunc_ln1495_fu_2503_p1;
    select_ln128_fu_2031_p3 <= 
        ap_const_lv15_0 when (tmp_11_fu_2023_p3(0) = '1') else 
        trunc_ln1495_1_fu_2019_p1;
    select_ln23_1_fu_1118_p3 <= 
        add_ln62_fu_1106_p2 when (icmp_ln65_fu_1112_p2(0) = '1') else 
        ti_reg_543;
    select_ln23_2_fu_1158_p3 <= 
        ap_const_lv11_0 when (icmp_ln65_reg_2630(0) = '1') else 
        empty_29_reg_2617;
    select_ln23_3_fu_1164_p3 <= 
        ap_const_lv11_0 when (icmp_ln65_reg_2630(0) = '1') else 
        shl_ln130_6_reg_2622;
    select_ln23_fu_1126_p3 <= 
        ap_const_lv6_0 when (icmp_ln65_reg_2630(0) = '1') else 
        tj_reg_566;
    select_ln24_1_fu_1250_p3 <= 
        p_mid1163_fu_1234_p2 when (and_ln23_fu_1181_p2(0) = '1') else 
        select_ln23_2_fu_1158_p3;
    select_ln24_2_fu_1270_p3 <= 
        shl_ln130_6_mid1_fu_1262_p3 when (and_ln23_fu_1181_p2(0) = '1') else 
        select_ln23_3_fu_1164_p3;
    select_ln24_fu_1198_p3 <= 
        ap_const_lv5_0 when (or_ln24_fu_1193_p2(0) = '1') else 
        tk_reg_626;
    select_ln34_1_fu_1349_p3 <= 
        add_ln34_fu_1329_p2 when (icmp_ln37_fu_1335_p2(0) = '1') else 
        ap_phi_mux_c_phi_fu_653_p4;
    select_ln34_2_fu_1442_p3 <= 
        p_mid129_reg_2697 when (icmp_ln37_reg_2721(0) = '1') else 
        empty_30_reg_2712;
    select_ln34_3_fu_1447_p3 <= 
        add_ln23_reg_2658 when (icmp_ln37_reg_2721(0) = '1') else 
        add_ln39_reg_2707;
    select_ln34_fu_1341_p3 <= 
        ap_const_lv6_0 when (icmp_ln37_fu_1335_p2(0) = '1') else 
        ap_phi_mux_i_phi_fu_675_p4;
    select_ln37_1_fu_1395_p3 <= 
        add_ln37_fu_1375_p2 when (and_ln34_fu_1369_p2(0) = '1') else 
        select_ln34_fu_1341_p3;
    select_ln37_2_fu_1466_p3 <= 
        p_mid16_fu_1460_p2 when (and_ln34_reg_2733(0) = '1') else 
        select_ln34_2_fu_1442_p3;
    select_ln37_3_fu_1473_p3 <= 
        add_ln39_1_fu_1455_p2 when (and_ln34_reg_2733(0) = '1') else 
        select_ln34_3_fu_1447_p3;
    select_ln37_4_fu_1425_p3 <= 
        ap_const_lv12_1 when (icmp_ln37_fu_1335_p2(0) = '1') else 
        add_ln37_1_fu_1419_p2;
    select_ln37_fu_1387_p3 <= 
        ap_const_lv6_0 when (or_ln37_fu_1381_p2(0) = '1') else 
        j_reg_682;
    select_ln65_1_fu_2080_p3 <= 
        ap_const_lv11_1 when (icmp_ln65_reg_2630(0) = '1') else 
        add_ln65_1_fu_2074_p2;
    select_ln65_fu_1282_p3 <= 
        add_ln65_fu_1187_p2 when (and_ln23_fu_1181_p2(0) = '1') else 
        select_ln23_fu_1126_p3;
        sext_ln122_1_fu_1983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln122_5_fu_1976_p3),64));

        sext_ln122_fu_2467_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln122_2_fu_2460_p3),64));

        sext_ln37_fu_1488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln49_1_mid2_v_fu_1480_p3),23));

        sext_ln42_mid2_v_cast_fu_1500_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln42_mid2_v_fu_1492_p3),23));

    sext_ln42_mid2_v_fu_1492_p3 <= (select_ln37_3_fu_1473_p3 & ap_const_lv9_0);
        sext_ln46_fu_1504_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln46_1_reg_2755),12));

        sext_ln49_1_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln49_1_reg_2779),64));

    sext_ln49_1_mid2_v_fu_1480_p3 <= (select_ln37_3_fu_1473_p3 & ap_const_lv11_0);
        sext_ln49_fu_1575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_1565_p4),64));

    shl_ln114_1_fu_2087_p3 <= (empty_32_reg_2800 & ap_const_lv2_0);
    shl_ln130_2_fu_1802_p3 <= (empty_35_fu_1797_p2 & ap_const_lv10_0);
    shl_ln130_2_mid1_fu_1873_p3 <= (p_mid150_fu_1868_p2 & ap_const_lv10_0);
    shl_ln130_2_mid_fu_1610_p3 <= (trunc_ln39_2_mid2_reg_2646 & ap_const_lv10_0);
    shl_ln130_3_fu_1810_p3 <= (empty_35_fu_1797_p2 & ap_const_lv8_0);
    shl_ln130_3_mid1_fu_1881_p3 <= (p_mid150_fu_1868_p2 & ap_const_lv8_0);
    shl_ln130_3_mid_fu_1617_p3 <= (trunc_ln39_2_mid2_reg_2646 & ap_const_lv8_0);
    shl_ln130_4_fu_2286_p3 <= (empty_42_fu_2281_p2 & ap_const_lv10_0);
    shl_ln130_4_mid1_fu_2357_p3 <= (p_mid1106_fu_2352_p2 & ap_const_lv10_0);
    shl_ln130_4_mid_fu_2094_p3 <= (trunc_ln39_2_mid2_reg_2646 & ap_const_lv10_0);
    shl_ln130_5_fu_2294_p3 <= (empty_42_fu_2281_p2 & ap_const_lv8_0);
    shl_ln130_5_mid1_fu_2365_p3 <= (p_mid1106_fu_2352_p2 & ap_const_lv8_0);
    shl_ln130_5_mid_fu_2101_p3 <= (trunc_ln39_2_mid2_reg_2646 & ap_const_lv8_0);
    shl_ln130_6_fu_1092_p3 <= (trunc_ln_fu_1082_p4 & ap_const_lv1_0);
    shl_ln130_6_mid1_fu_1262_p3 <= (trunc_ln130_mid1_fu_1240_p4 & ap_const_lv1_0);
    shl_ln_fu_1603_p3 <= (empty_32_reg_2800 & ap_const_lv2_0);
    tmp_10_fu_1959_p4 <= add_ln130_11_fu_1916_p2(63 downto 1);
    tmp_11_fu_2023_p3 <= tmp_1_fu_2006_p6(15 downto 15);
    tmp_2_fu_2332_p3 <= (select_ln122_1_reg_3128 & ap_const_lv2_0);
    tmp_3_fu_2433_p4 <= add_ln130_13_fu_2410_p2(63 downto 1);
    tmp_4_fu_2443_p4 <= add_ln130_5_fu_2400_p2(63 downto 1);
    tmp_5_fu_2507_p3 <= tmp_fu_2490_p6(15 downto 15);
    tmp_6_fu_1848_p3 <= (select_ln122_4_reg_2911 & ap_const_lv2_0);
    tmp_7_fu_1939_p4 <= add_ln130_21_fu_1933_p2(63 downto 1);
    tmp_8_fu_1524_p3 <= (add_ln46_fu_1507_p2 & ap_const_lv1_0);
    tmp_9_fu_1949_p4 <= add_ln130_18_fu_1926_p2(63 downto 1);
    tmp_s_fu_2423_p4 <= add_ln130_16_fu_2417_p2(63 downto 1);
    trunc_ln119_1_fu_1704_p1 <= select_ln119_5_fu_1696_p3(2 - 1 downto 0);
    trunc_ln119_fu_2188_p1 <= select_ln119_1_fu_2180_p3(2 - 1 downto 0);
    trunc_ln130_mid1_fu_1240_p4 <= p_mid1163_fu_1234_p2(10 downto 1);
    trunc_ln1495_1_fu_2019_p1 <= tmp_1_fu_2006_p6(15 - 1 downto 0);
    trunc_ln1495_fu_2503_p1 <= tmp_fu_2490_p6(15 - 1 downto 0);
    trunc_ln1_fu_1565_p4 <= add_ln49_2_fu_1559_p2(63 downto 1);
    trunc_ln_fu_1082_p4 <= empty_29_fu_1076_p2(10 downto 1);

    wt_ARVALID_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state43, ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARVALID, ap_predicate_op439_call_state44, ap_predicate_op449_call_state44, ap_CS_fsm_state16, ap_CS_fsm_state70)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            wt_ARVALID <= grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_ARVALID;
        else 
            wt_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    wt_RREADY_assign_proc : process(icmp_ln79_reg_2693, ap_CS_fsm_state17, ap_CS_fsm_state43, ap_CS_fsm_state44, grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_RREADY, ap_predicate_op439_call_state44, ap_predicate_op449_call_state44, ap_CS_fsm_state16, ap_CS_fsm_state70)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op449_call_state44 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_predicate_op439_call_state44 = ap_const_boolean_1)) or ((icmp_ln79_reg_2693 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            wt_RREADY <= grp_load_layer_params_from_DRAM_fu_963_m_axi_wt_RREADY;
        else 
            wt_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln119_1_fu_1735_p2 <= (icmp_ln122_1_reg_2857 xor ap_const_lv1_1);
    xor_ln119_fu_2219_p2 <= (icmp_ln122_reg_3074 xor ap_const_lv1_1);
    xor_ln23_fu_1170_p2 <= (icmp_ln65_reg_2630 xor ap_const_lv1_1);
    xor_ln34_fu_1357_p2 <= (icmp_ln37_fu_1335_p2 xor ap_const_lv1_1);
    zext_ln119_1_fu_1666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_f_phi_fu_767_p4),6));
    zext_ln119_2_fu_2171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln119_1_fu_2159_p2),6));
    zext_ln119_3_fu_1687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln119_fu_1675_p2),6));
    zext_ln119_fu_2150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_f_1_phi_fu_824_p4),6));
    zext_ln122_1_fu_1793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_785),9));
    zext_ln122_2_fu_2349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln122_1_reg_3118),9));
    zext_ln122_3_fu_1865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln122_reg_2901),9));
    zext_ln122_fu_2277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_reg_842),9));
    zext_ln125_1_fu_1818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln130_3_fu_1810_p3),19));
    zext_ln125_2_fu_2108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln130_5_mid_fu_2101_p3),19));
    zext_ln125_3_fu_1624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln130_3_mid_fu_1617_p3),19));
    zext_ln125_4_fu_2373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln130_5_mid1_fu_2365_p3),19));
    zext_ln125_5_fu_1889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln130_3_mid1_fu_1881_p3),19));
    zext_ln125_fu_2302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln130_5_fu_2294_p3),19));
    zext_ln130_11_fu_1930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln130_20_reg_2940),64));
    zext_ln130_12_fu_2045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln128_reg_2980),16));
    zext_ln130_2_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_1_fu_1250_p3),12));
    zext_ln130_3_fu_2123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln130_3_fu_2117_p2),64));
    zext_ln130_4_fu_1639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln130_7_fu_1633_p2),64));
    zext_ln130_5_fu_2397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln130_2_reg_3146),64));
    zext_ln130_6_fu_1913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln130_10_reg_2929),64));
    zext_ln130_8_fu_2414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln130_15_reg_3157),64));
    zext_ln130_9_fu_2529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln128_1_reg_3197),16));
    zext_ln1495_1_fu_1785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln130_reg_2886),64));
    zext_ln1495_2_fu_2317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln130_2_reg_3108),64));
    zext_ln1495_3_fu_1833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln130_3_reg_2891),64));
    zext_ln1495_4_fu_2339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_2332_p3),9));
    zext_ln1495_5_fu_2388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln122_reg_3123),9));
    zext_ln1495_6_fu_2471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1495_1_reg_3162),64));
    zext_ln1495_7_fu_1855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1848_p3),9));
    zext_ln1495_8_fu_1904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln122_3_reg_2906),9));
    zext_ln1495_9_fu_1987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1495_3_reg_2945),64));
    zext_ln1495_fu_2269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln130_1_reg_3103),64));
    zext_ln34_1_fu_1548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln34_reg_2770),64));
    zext_ln37_1_fu_1452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln37_reg_2739),11));
    zext_ln37_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_phi_fu_675_p4),11));
    zext_ln44_fu_1403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln37_fu_1387_p3),7));
    zext_ln47_2_fu_1591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln47_reg_2790),64));
    zext_ln49_fu_1532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1524_p3),23));
    zext_ln65_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_2_fu_1270_p3),19));
end behav;
