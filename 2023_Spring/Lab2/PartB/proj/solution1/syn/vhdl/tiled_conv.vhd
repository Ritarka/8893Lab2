-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
-- Version: 2022.1.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tiled_conv is
generic (
    C_M_AXI_FM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_FM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_FM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_FM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FM_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_WT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_WT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_WT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WT_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_FM_USER_VALUE : INTEGER := 0;
    C_M_AXI_FM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_FM_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_WT_USER_VALUE : INTEGER := 0;
    C_M_AXI_WT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_WT_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_fm_AWVALID : OUT STD_LOGIC;
    m_axi_fm_AWREADY : IN STD_LOGIC;
    m_axi_fm_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ADDR_WIDTH-1 downto 0);
    m_axi_fm_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fm_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_AWUSER_WIDTH-1 downto 0);
    m_axi_fm_WVALID : OUT STD_LOGIC;
    m_axi_fm_WREADY : IN STD_LOGIC;
    m_axi_fm_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_DATA_WIDTH-1 downto 0);
    m_axi_fm_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_DATA_WIDTH/8-1 downto 0);
    m_axi_fm_WLAST : OUT STD_LOGIC;
    m_axi_fm_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_WUSER_WIDTH-1 downto 0);
    m_axi_fm_ARVALID : OUT STD_LOGIC;
    m_axi_fm_ARREADY : IN STD_LOGIC;
    m_axi_fm_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ADDR_WIDTH-1 downto 0);
    m_axi_fm_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fm_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fm_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fm_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FM_ARUSER_WIDTH-1 downto 0);
    m_axi_fm_RVALID : IN STD_LOGIC;
    m_axi_fm_RREADY : OUT STD_LOGIC;
    m_axi_fm_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_FM_DATA_WIDTH-1 downto 0);
    m_axi_fm_RLAST : IN STD_LOGIC;
    m_axi_fm_RID : IN STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FM_RUSER_WIDTH-1 downto 0);
    m_axi_fm_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_BVALID : IN STD_LOGIC;
    m_axi_fm_BREADY : OUT STD_LOGIC;
    m_axi_fm_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fm_BID : IN STD_LOGIC_VECTOR (C_M_AXI_FM_ID_WIDTH-1 downto 0);
    m_axi_fm_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FM_BUSER_WIDTH-1 downto 0);
    m_axi_wt_AWVALID : OUT STD_LOGIC;
    m_axi_wt_AWREADY : IN STD_LOGIC;
    m_axi_wt_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ADDR_WIDTH-1 downto 0);
    m_axi_wt_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_wt_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_AWUSER_WIDTH-1 downto 0);
    m_axi_wt_WVALID : OUT STD_LOGIC;
    m_axi_wt_WREADY : IN STD_LOGIC;
    m_axi_wt_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_DATA_WIDTH-1 downto 0);
    m_axi_wt_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_DATA_WIDTH/8-1 downto 0);
    m_axi_wt_WLAST : OUT STD_LOGIC;
    m_axi_wt_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_WUSER_WIDTH-1 downto 0);
    m_axi_wt_ARVALID : OUT STD_LOGIC;
    m_axi_wt_ARREADY : IN STD_LOGIC;
    m_axi_wt_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ADDR_WIDTH-1 downto 0);
    m_axi_wt_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_wt_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_wt_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_wt_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WT_ARUSER_WIDTH-1 downto 0);
    m_axi_wt_RVALID : IN STD_LOGIC;
    m_axi_wt_RREADY : OUT STD_LOGIC;
    m_axi_wt_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_WT_DATA_WIDTH-1 downto 0);
    m_axi_wt_RLAST : IN STD_LOGIC;
    m_axi_wt_RID : IN STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_WT_RUSER_WIDTH-1 downto 0);
    m_axi_wt_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_BVALID : IN STD_LOGIC;
    m_axi_wt_BREADY : OUT STD_LOGIC;
    m_axi_wt_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_wt_BID : IN STD_LOGIC_VECTOR (C_M_AXI_WT_ID_WIDTH-1 downto 0);
    m_axi_wt_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_WT_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of tiled_conv is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "tiled_conv_tiled_conv,hls_ip_2022_1_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=2532098049,HLS_SYN_TPT=none,HLS_SYN_MEM=11,HLS_SYN_DSP=0,HLS_SYN_FF=5421,HLS_SYN_LUT=8514,HLS_VERSION=2022_1_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (33 downto 0) := "0000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (33 downto 0) := "0000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (33 downto 0) := "0000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (33 downto 0) := "0000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (33 downto 0) := "0000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (33 downto 0) := "0000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (33 downto 0) := "0001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (33 downto 0) := "0010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (33 downto 0) := "0100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (33 downto 0) := "1000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_24C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001001100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv14_2000 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv9_17 : STD_LOGIC_VECTOR (8 downto 0) := "000010111";
    constant ap_const_lv11_2DF : STD_LOGIC_VECTOR (10 downto 0) := "01011011111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv11_730 : STD_LOGIC_VECTOR (10 downto 0) := "11100110000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv10_1CC : STD_LOGIC_VECTOR (9 downto 0) := "0111001100";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_2E : STD_LOGIC_VECTOR (10 downto 0) := "00000101110";
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv16_498 : STD_LOGIC_VECTOR (15 downto 0) := "0000010010011000";
    constant ap_const_lv8_17 : STD_LOGIC_VECTOR (7 downto 0) := "00010111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_feature_map : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_bias : STD_LOGIC_VECTOR (63 downto 0);
    signal output_feature_map : STD_LOGIC_VECTOR (63 downto 0);
    signal wt_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal output_feature_map_read_reg_1380 : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_bias_read_reg_1385 : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_weights_read_reg_1390 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_feature_map_read_reg_1395 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_532_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_reg_1433 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_6_fu_540_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_reg_1438 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln50_1_fu_552_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln50_1_reg_1443 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_3_fu_568_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln133_3_reg_1448 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln43_2_fu_582_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln43_2_reg_1456 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln46_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_1461 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid2256_v_v_fu_606_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid2256_v_v_reg_1471 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln52_mid2310_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_mid2310_reg_1482 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln24_fu_642_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln24_reg_1491 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln54_fu_654_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln54_reg_1502 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln24_1_fu_730_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln24_1_reg_1508 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal select_ln24_2_fu_749_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln24_2_reg_1513 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln24_3_fu_762_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln24_3_reg_1518 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln24_4_fu_787_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln24_4_reg_1523 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln46_fu_794_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln46_reg_1529 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_mid2256_fu_804_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_mid2256_reg_1534 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_1295_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_mid2258_reg_1541 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln46_fu_810_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln46_reg_1546 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln54_fu_824_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_reg_1551 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_1_fu_832_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln54_1_reg_1556 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln54_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln54_reg_1561 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid130_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid130_reg_1565 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_847_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln_reg_1570 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln2_reg_1580 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln38_1_fu_934_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln38_1_reg_1618 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal select_ln38_2_fu_968_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln38_2_reg_1623 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln38_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln38_3_fu_994_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln38_3_reg_1635 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln38_fu_1002_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln38_reg_1640 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln40_fu_1042_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1645 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_1_fu_1050_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln40_1_reg_1650 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln40_2_fu_1058_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln40_2_reg_1655 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln40_3_fu_1066_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_3_reg_1661 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_fu_1074_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_reg_1667 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_1_fu_1080_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln41_1_reg_1672 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln40_4_fu_1092_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln40_4_reg_1677 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1_fu_1100_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln1_reg_1682 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln133_mid_fu_1108_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln133_mid_reg_1687 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln133_1_mid_fu_1116_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln133_1_mid_reg_1692 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln133_10_fu_1133_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln133_10_reg_1697 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal empty_46_fu_1230_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_46_reg_1707 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal out_fm_buf_V_addr_reg_1712 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal sub_ln1319_fu_1254_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln1319_reg_1717 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal conv_out_buf_V_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal out_fm_buf_V_load_reg_1722 : STD_LOGIC_VECTOR (14 downto 0);
    signal conv_in_buf_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv_in_buf_V_ce0 : STD_LOGIC;
    signal conv_in_buf_V_we0 : STD_LOGIC;
    signal conv_in_buf_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_wt_buf_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_wt_buf_V_ce0 : STD_LOGIC;
    signal conv_wt_buf_V_we0 : STD_LOGIC;
    signal conv_wt_buf_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_out_buf_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_out_buf_V_ce0 : STD_LOGIC;
    signal conv_out_buf_V_we0 : STD_LOGIC;
    signal conv_out_buf_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_start : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_done : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_idle : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_ready : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WLAST : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_RREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_BREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_ce0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_we0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_start : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_done : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_idle : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_ready : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WLAST : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_RREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_BREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_ce0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_we0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_start : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_done : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_idle : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_ready : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_ce0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_we0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_ap_start : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_ap_done : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_ap_idle : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_ap_ready : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WLAST : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_RREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_BREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_3_3_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_3_3_out_ap_vld : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_2_3_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_2_3_out_ap_vld : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_1_3_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_1_3_out_ap_vld : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_0_3_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_0_3_out_ap_vld : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_start : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_done : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_idle : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_ready : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WLAST : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARVALID : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_RREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_BREADY : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_conv_out_buf_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_conv_out_buf_V_ce0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_start : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_done : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_idle : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_ready : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_wt_buf_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_wt_buf_V_ce0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_in_buf_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_in_buf_V_ce0 : STD_LOGIC;
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_lhs_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_lhs_out_ap_vld : STD_LOGIC;
    signal fm_AWVALID : STD_LOGIC;
    signal fm_AWREADY : STD_LOGIC;
    signal fm_WVALID : STD_LOGIC;
    signal fm_WREADY : STD_LOGIC;
    signal fm_ARVALID : STD_LOGIC;
    signal fm_ARREADY : STD_LOGIC;
    signal fm_RVALID : STD_LOGIC;
    signal fm_RREADY : STD_LOGIC;
    signal fm_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal fm_RFIFONUM : STD_LOGIC_VECTOR (9 downto 0);
    signal fm_BVALID : STD_LOGIC;
    signal fm_BREADY : STD_LOGIC;
    signal wt_AWREADY : STD_LOGIC;
    signal wt_WREADY : STD_LOGIC;
    signal wt_ARVALID : STD_LOGIC;
    signal wt_ARREADY : STD_LOGIC;
    signal wt_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal wt_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal wt_RVALID : STD_LOGIC;
    signal wt_RREADY : STD_LOGIC;
    signal wt_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal wt_RFIFONUM : STD_LOGIC_VECTOR (9 downto 0);
    signal wt_BVALID : STD_LOGIC;
    signal indvar_flatten163_reg_326 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal kernel_reg_337 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten147_reg_348 : STD_LOGIC_VECTOR (9 downto 0);
    signal oh_reg_359 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_reg_370 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_reg_381 : STD_LOGIC_VECTOR (5 downto 0);
    signal ow_reg_392 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_start_reg : STD_LOGIC := '0';
    signal grp_tiled_conv_Pipeline_BIAS_fu_427_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal p_cast406_fu_1236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln76_fu_856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln94_fu_876_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state7_on_subcall_done : BOOLEAN;
    signal kernel_group_fu_198 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln52_fu_1140_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_bias_buf_V_0_2_fu_202 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_V_1_2_fu_206 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_V_2_2_fu_210 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_bias_buf_V_3_2_fu_214 : STD_LOGIC_VECTOR (15 downto 0);
    signal tj_fu_218 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten232_fu_222 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln46_1_fu_1151_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal ti_fu_226 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten311_fu_230 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln54_fu_1286_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_fu_504_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl3_fu_516_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl2_fu_508_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl2_cast_fu_528_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl3_cast_fu_524_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_1_fu_558_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln52_fu_548_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_fu_562_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln43_fu_594_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln52_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten234_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln24_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tj_mid2247_fu_658_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln46_fu_688_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_48_fu_694_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl3_mid1_fu_706_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl2_mid1_fu_698_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_mid_fu_722_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_cast30_mid2284_fu_664_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_mid2_fu_737_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln52_mid2288_fu_670_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl2_cast_mid1_fu_718_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl3_cast_mid1_fu_714_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln50_fu_756_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln50_1_mid2292_fu_676_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_3_fu_769_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln52_1_fu_745_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_1_fu_773_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln133_3_mid1_fu_779_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln133_6_mid2308_fu_682_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_mid2256_fu_804_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_mid2256_fu_804_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln_fu_813_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln54_fu_820_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1304_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln54_1_fu_829_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_918_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln40_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln38_fu_940_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_mid1_fu_984_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_mid1_fu_984_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_918_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln41_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln38_fu_1006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln38_1_fu_960_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln38_fu_952_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln38_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln40_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln40_1_fu_1030_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln40_fu_1024_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln40_2_fu_1086_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln133_9_fu_1128_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln128_1_fu_1124_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln46_2_fu_1145_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1311_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_44_fu_1199_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_fu_1210_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl6_fu_1202_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl7_fu_1217_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_45_fu_1221_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln40_1_cast_fu_1227_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_1243_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1319_4_fu_1250_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1319_3_fu_1240_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln859_fu_1264_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln859_fu_1268_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_1278_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1696_fu_1273_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1295_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1295_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1295_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_1304_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1304_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1311_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1311_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1311_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_block_state15_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal grp_fu_1295_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1304_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1311_p00 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1311_p20 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_mid2256_fu_804_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component tiled_conv_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_fm_AWVALID : OUT STD_LOGIC;
        m_axi_fm_AWREADY : IN STD_LOGIC;
        m_axi_fm_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fm_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fm_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_WVALID : OUT STD_LOGIC;
        m_axi_fm_WREADY : IN STD_LOGIC;
        m_axi_fm_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_fm_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_WLAST : OUT STD_LOGIC;
        m_axi_fm_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_ARVALID : OUT STD_LOGIC;
        m_axi_fm_ARREADY : IN STD_LOGIC;
        m_axi_fm_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fm_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fm_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RVALID : IN STD_LOGIC;
        m_axi_fm_RREADY : OUT STD_LOGIC;
        m_axi_fm_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_fm_RLAST : IN STD_LOGIC;
        m_axi_fm_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_fm_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_BVALID : IN STD_LOGIC;
        m_axi_fm_BREADY : OUT STD_LOGIC;
        m_axi_fm_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_mid2258 : IN STD_LOGIC_VECTOR (10 downto 0);
        input_feature_map : IN STD_LOGIC_VECTOR (63 downto 0);
        p_mid130 : IN STD_LOGIC_VECTOR (0 downto 0);
        conv_in_buf_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        conv_in_buf_V_ce0 : OUT STD_LOGIC;
        conv_in_buf_V_we0 : OUT STD_LOGIC;
        conv_in_buf_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        select_ln24_3 : IN STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component tiled_conv_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_wt_AWVALID : OUT STD_LOGIC;
        m_axi_wt_AWREADY : IN STD_LOGIC;
        m_axi_wt_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_wt_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_wt_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_WVALID : OUT STD_LOGIC;
        m_axi_wt_WREADY : IN STD_LOGIC;
        m_axi_wt_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_wt_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_WLAST : OUT STD_LOGIC;
        m_axi_wt_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_ARVALID : OUT STD_LOGIC;
        m_axi_wt_ARREADY : IN STD_LOGIC;
        m_axi_wt_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_wt_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_wt_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RVALID : IN STD_LOGIC;
        m_axi_wt_RREADY : OUT STD_LOGIC;
        m_axi_wt_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_wt_RLAST : IN STD_LOGIC;
        m_axi_wt_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_wt_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_BVALID : IN STD_LOGIC;
        m_axi_wt_BREADY : OUT STD_LOGIC;
        m_axi_wt_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln76 : IN STD_LOGIC_VECTOR (62 downto 0);
        conv_wt_buf_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv_wt_buf_V_ce0 : OUT STD_LOGIC;
        conv_wt_buf_V_we0 : OUT STD_LOGIC;
        conv_wt_buf_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_out_buf_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_buf_V_ce0 : OUT STD_LOGIC;
        conv_out_buf_V_we0 : OUT STD_LOGIC;
        conv_out_buf_V_d0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component tiled_conv_tiled_conv_Pipeline_BIAS IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_wt_AWVALID : OUT STD_LOGIC;
        m_axi_wt_AWREADY : IN STD_LOGIC;
        m_axi_wt_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_wt_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_wt_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_WVALID : OUT STD_LOGIC;
        m_axi_wt_WREADY : IN STD_LOGIC;
        m_axi_wt_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_wt_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_WLAST : OUT STD_LOGIC;
        m_axi_wt_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_ARVALID : OUT STD_LOGIC;
        m_axi_wt_ARREADY : IN STD_LOGIC;
        m_axi_wt_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_wt_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_wt_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_wt_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_wt_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RVALID : IN STD_LOGIC;
        m_axi_wt_RREADY : OUT STD_LOGIC;
        m_axi_wt_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_wt_RLAST : IN STD_LOGIC;
        m_axi_wt_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_wt_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_BVALID : IN STD_LOGIC;
        m_axi_wt_BREADY : OUT STD_LOGIC;
        m_axi_wt_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_wt_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_wt_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv_bias_buf_V_3_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_2_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_1_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln94 : IN STD_LOGIC_VECTOR (62 downto 0);
        conv_bias_buf_V_3_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_3_3_out_ap_vld : OUT STD_LOGIC;
        conv_bias_buf_V_2_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_2_3_out_ap_vld : OUT STD_LOGIC;
        conv_bias_buf_V_1_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_1_3_out_ap_vld : OUT STD_LOGIC;
        conv_bias_buf_V_0_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv_bias_buf_V_0_3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component tiled_conv_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_fm_AWVALID : OUT STD_LOGIC;
        m_axi_fm_AWREADY : IN STD_LOGIC;
        m_axi_fm_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fm_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fm_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_WVALID : OUT STD_LOGIC;
        m_axi_fm_WREADY : IN STD_LOGIC;
        m_axi_fm_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_fm_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_WLAST : OUT STD_LOGIC;
        m_axi_fm_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_ARVALID : OUT STD_LOGIC;
        m_axi_fm_ARREADY : IN STD_LOGIC;
        m_axi_fm_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fm_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fm_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fm_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fm_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RVALID : IN STD_LOGIC;
        m_axi_fm_RREADY : OUT STD_LOGIC;
        m_axi_fm_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_fm_RLAST : IN STD_LOGIC;
        m_axi_fm_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_fm_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_BVALID : IN STD_LOGIC;
        m_axi_fm_BREADY : OUT STD_LOGIC;
        m_axi_fm_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fm_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fm_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        shl_ln1 : IN STD_LOGIC_VECTOR (5 downto 0);
        output_feature_map : IN STD_LOGIC_VECTOR (63 downto 0);
        p_mid2256 : IN STD_LOGIC_VECTOR (8 downto 0);
        select_ln24_4 : IN STD_LOGIC_VECTOR (10 downto 0);
        shl_ln133_mid : IN STD_LOGIC_VECTOR (18 downto 0);
        zext_ln128_1 : IN STD_LOGIC_VECTOR (16 downto 0);
        zext_ln133_5 : IN STD_LOGIC_VECTOR (18 downto 0);
        conv_out_buf_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_buf_V_ce0 : OUT STD_LOGIC;
        conv_out_buf_V_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
        select_ln24_1 : IN STD_LOGIC_VECTOR (6 downto 0);
        select_ln24_2 : IN STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component tiled_conv_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln43 : IN STD_LOGIC_VECTOR (14 downto 0);
        select_ln40_4 : IN STD_LOGIC_VECTOR (5 downto 0);
        sub_ln1319 : IN STD_LOGIC_VECTOR (5 downto 0);
        conv_wt_buf_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv_wt_buf_V_ce0 : OUT STD_LOGIC;
        conv_wt_buf_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        select_ln40 : IN STD_LOGIC_VECTOR (5 downto 0);
        conv_in_buf_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        conv_in_buf_V_ce0 : OUT STD_LOGIC;
        conv_in_buf_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        lhs_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        lhs_out_ap_vld : OUT STD_LOGIC );
    end component;


    component tiled_conv_mul_5ns_6ns_9_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component tiled_conv_mux_42_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_mac_muladd_5ns_6ns_3s_11_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component tiled_conv_mul_mul_5ns_11ns_16_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_mac_muladd_3ns_5ns_5ns_8_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component tiled_conv_conv_in_buf_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_conv_wt_buf_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component tiled_conv_conv_out_buf_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component tiled_conv_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_feature_map : OUT STD_LOGIC_VECTOR (63 downto 0);
        layer_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        layer_bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_feature_map : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component tiled_conv_fm_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (9 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component tiled_conv_wt_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (9 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    conv_in_buf_V_U : component tiled_conv_conv_in_buf_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 7176,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_in_buf_V_address0,
        ce0 => conv_in_buf_V_ce0,
        we0 => conv_in_buf_V_we0,
        d0 => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_d0,
        q0 => conv_in_buf_V_q0);

    conv_wt_buf_V_U : component tiled_conv_conv_wt_buf_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 588,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_wt_buf_V_address0,
        ce0 => conv_wt_buf_V_ce0,
        we0 => conv_wt_buf_V_we0,
        d0 => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_d0,
        q0 => conv_wt_buf_V_q0);

    conv_out_buf_V_U : component tiled_conv_conv_out_buf_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 15,
        AddressRange => 1840,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_out_buf_V_address0,
        ce0 => conv_out_buf_V_ce0,
        we0 => conv_out_buf_V_we0,
        d0 => conv_out_buf_V_d0,
        q0 => conv_out_buf_V_q0);

    grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403 : component tiled_conv_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_start,
        ap_done => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_done,
        ap_idle => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_idle,
        ap_ready => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_ready,
        m_axi_fm_AWVALID => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWVALID,
        m_axi_fm_AWREADY => ap_const_logic_0,
        m_axi_fm_AWADDR => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWADDR,
        m_axi_fm_AWID => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWID,
        m_axi_fm_AWLEN => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWLEN,
        m_axi_fm_AWSIZE => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWSIZE,
        m_axi_fm_AWBURST => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWBURST,
        m_axi_fm_AWLOCK => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWLOCK,
        m_axi_fm_AWCACHE => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWCACHE,
        m_axi_fm_AWPROT => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWPROT,
        m_axi_fm_AWQOS => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWQOS,
        m_axi_fm_AWREGION => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWREGION,
        m_axi_fm_AWUSER => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_AWUSER,
        m_axi_fm_WVALID => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WVALID,
        m_axi_fm_WREADY => ap_const_logic_0,
        m_axi_fm_WDATA => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WDATA,
        m_axi_fm_WSTRB => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WSTRB,
        m_axi_fm_WLAST => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WLAST,
        m_axi_fm_WID => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WID,
        m_axi_fm_WUSER => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_WUSER,
        m_axi_fm_ARVALID => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARVALID,
        m_axi_fm_ARREADY => fm_ARREADY,
        m_axi_fm_ARADDR => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARADDR,
        m_axi_fm_ARID => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARID,
        m_axi_fm_ARLEN => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARLEN,
        m_axi_fm_ARSIZE => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARSIZE,
        m_axi_fm_ARBURST => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARBURST,
        m_axi_fm_ARLOCK => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARLOCK,
        m_axi_fm_ARCACHE => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARCACHE,
        m_axi_fm_ARPROT => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARPROT,
        m_axi_fm_ARQOS => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARQOS,
        m_axi_fm_ARREGION => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARREGION,
        m_axi_fm_ARUSER => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARUSER,
        m_axi_fm_RVALID => fm_RVALID,
        m_axi_fm_RREADY => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_RREADY,
        m_axi_fm_RDATA => fm_RDATA,
        m_axi_fm_RLAST => ap_const_logic_0,
        m_axi_fm_RID => ap_const_lv1_0,
        m_axi_fm_RFIFONUM => fm_RFIFONUM,
        m_axi_fm_RUSER => ap_const_lv1_0,
        m_axi_fm_RRESP => ap_const_lv2_0,
        m_axi_fm_BVALID => ap_const_logic_0,
        m_axi_fm_BREADY => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_BREADY,
        m_axi_fm_BRESP => ap_const_lv2_0,
        m_axi_fm_BID => ap_const_lv1_0,
        m_axi_fm_BUSER => ap_const_lv1_0,
        p_mid2258 => p_mid2258_reg_1541,
        input_feature_map => input_feature_map_read_reg_1395,
        p_mid130 => p_mid130_reg_1565,
        conv_in_buf_V_address0 => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_address0,
        conv_in_buf_V_ce0 => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_ce0,
        conv_in_buf_V_we0 => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_we0,
        conv_in_buf_V_d0 => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_d0,
        select_ln24_3 => select_ln24_3_reg_1518);

    grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414 : component tiled_conv_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_start,
        ap_done => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_done,
        ap_idle => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_idle,
        ap_ready => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_ready,
        m_axi_wt_AWVALID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWVALID,
        m_axi_wt_AWREADY => ap_const_logic_0,
        m_axi_wt_AWADDR => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWADDR,
        m_axi_wt_AWID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWID,
        m_axi_wt_AWLEN => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWLEN,
        m_axi_wt_AWSIZE => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWSIZE,
        m_axi_wt_AWBURST => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWBURST,
        m_axi_wt_AWLOCK => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWLOCK,
        m_axi_wt_AWCACHE => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWCACHE,
        m_axi_wt_AWPROT => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWPROT,
        m_axi_wt_AWQOS => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWQOS,
        m_axi_wt_AWREGION => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWREGION,
        m_axi_wt_AWUSER => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_AWUSER,
        m_axi_wt_WVALID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WVALID,
        m_axi_wt_WREADY => ap_const_logic_0,
        m_axi_wt_WDATA => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WDATA,
        m_axi_wt_WSTRB => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WSTRB,
        m_axi_wt_WLAST => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WLAST,
        m_axi_wt_WID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WID,
        m_axi_wt_WUSER => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_WUSER,
        m_axi_wt_ARVALID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARVALID,
        m_axi_wt_ARREADY => wt_ARREADY,
        m_axi_wt_ARADDR => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARADDR,
        m_axi_wt_ARID => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARID,
        m_axi_wt_ARLEN => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARLEN,
        m_axi_wt_ARSIZE => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARSIZE,
        m_axi_wt_ARBURST => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARBURST,
        m_axi_wt_ARLOCK => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARLOCK,
        m_axi_wt_ARCACHE => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARCACHE,
        m_axi_wt_ARPROT => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARPROT,
        m_axi_wt_ARQOS => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARQOS,
        m_axi_wt_ARREGION => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARREGION,
        m_axi_wt_ARUSER => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARUSER,
        m_axi_wt_RVALID => wt_RVALID,
        m_axi_wt_RREADY => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_RREADY,
        m_axi_wt_RDATA => wt_RDATA,
        m_axi_wt_RLAST => ap_const_logic_0,
        m_axi_wt_RID => ap_const_lv1_0,
        m_axi_wt_RFIFONUM => wt_RFIFONUM,
        m_axi_wt_RUSER => ap_const_lv1_0,
        m_axi_wt_RRESP => ap_const_lv2_0,
        m_axi_wt_BVALID => ap_const_logic_0,
        m_axi_wt_BREADY => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_BREADY,
        m_axi_wt_BRESP => ap_const_lv2_0,
        m_axi_wt_BID => ap_const_lv1_0,
        m_axi_wt_BUSER => ap_const_lv1_0,
        sext_ln76 => trunc_ln_reg_1570,
        conv_wt_buf_V_address0 => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_address0,
        conv_wt_buf_V_ce0 => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_ce0,
        conv_wt_buf_V_we0 => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_we0,
        conv_wt_buf_V_d0 => grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_d0);

    grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422 : component tiled_conv_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_start,
        ap_done => grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_done,
        ap_idle => grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_idle,
        ap_ready => grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_ready,
        conv_out_buf_V_address0 => grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_address0,
        conv_out_buf_V_ce0 => grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_ce0,
        conv_out_buf_V_we0 => grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_we0,
        conv_out_buf_V_d0 => grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_d0);

    grp_tiled_conv_Pipeline_BIAS_fu_427 : component tiled_conv_tiled_conv_Pipeline_BIAS
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_tiled_conv_Pipeline_BIAS_fu_427_ap_start,
        ap_done => grp_tiled_conv_Pipeline_BIAS_fu_427_ap_done,
        ap_idle => grp_tiled_conv_Pipeline_BIAS_fu_427_ap_idle,
        ap_ready => grp_tiled_conv_Pipeline_BIAS_fu_427_ap_ready,
        m_axi_wt_AWVALID => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWVALID,
        m_axi_wt_AWREADY => ap_const_logic_0,
        m_axi_wt_AWADDR => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWADDR,
        m_axi_wt_AWID => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWID,
        m_axi_wt_AWLEN => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWLEN,
        m_axi_wt_AWSIZE => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWSIZE,
        m_axi_wt_AWBURST => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWBURST,
        m_axi_wt_AWLOCK => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWLOCK,
        m_axi_wt_AWCACHE => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWCACHE,
        m_axi_wt_AWPROT => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWPROT,
        m_axi_wt_AWQOS => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWQOS,
        m_axi_wt_AWREGION => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWREGION,
        m_axi_wt_AWUSER => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_AWUSER,
        m_axi_wt_WVALID => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WVALID,
        m_axi_wt_WREADY => ap_const_logic_0,
        m_axi_wt_WDATA => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WDATA,
        m_axi_wt_WSTRB => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WSTRB,
        m_axi_wt_WLAST => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WLAST,
        m_axi_wt_WID => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WID,
        m_axi_wt_WUSER => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_WUSER,
        m_axi_wt_ARVALID => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARVALID,
        m_axi_wt_ARREADY => wt_ARREADY,
        m_axi_wt_ARADDR => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARADDR,
        m_axi_wt_ARID => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARID,
        m_axi_wt_ARLEN => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARLEN,
        m_axi_wt_ARSIZE => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARSIZE,
        m_axi_wt_ARBURST => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARBURST,
        m_axi_wt_ARLOCK => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARLOCK,
        m_axi_wt_ARCACHE => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARCACHE,
        m_axi_wt_ARPROT => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARPROT,
        m_axi_wt_ARQOS => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARQOS,
        m_axi_wt_ARREGION => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARREGION,
        m_axi_wt_ARUSER => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARUSER,
        m_axi_wt_RVALID => wt_RVALID,
        m_axi_wt_RREADY => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_RREADY,
        m_axi_wt_RDATA => wt_RDATA,
        m_axi_wt_RLAST => ap_const_logic_0,
        m_axi_wt_RID => ap_const_lv1_0,
        m_axi_wt_RFIFONUM => wt_RFIFONUM,
        m_axi_wt_RUSER => ap_const_lv1_0,
        m_axi_wt_RRESP => ap_const_lv2_0,
        m_axi_wt_BVALID => ap_const_logic_0,
        m_axi_wt_BREADY => grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_BREADY,
        m_axi_wt_BRESP => ap_const_lv2_0,
        m_axi_wt_BID => ap_const_lv1_0,
        m_axi_wt_BUSER => ap_const_lv1_0,
        conv_bias_buf_V_3_2 => conv_bias_buf_V_3_2_fu_214,
        conv_bias_buf_V_2_2 => conv_bias_buf_V_2_2_fu_210,
        conv_bias_buf_V_1_2 => conv_bias_buf_V_1_2_fu_206,
        conv_bias_buf_V_0_2 => conv_bias_buf_V_0_2_fu_202,
        sext_ln94 => trunc_ln2_reg_1580,
        conv_bias_buf_V_3_3_out => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_3_3_out,
        conv_bias_buf_V_3_3_out_ap_vld => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_3_3_out_ap_vld,
        conv_bias_buf_V_2_3_out => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_2_3_out,
        conv_bias_buf_V_2_3_out_ap_vld => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_2_3_out_ap_vld,
        conv_bias_buf_V_1_3_out => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_1_3_out,
        conv_bias_buf_V_1_3_out_ap_vld => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_1_3_out_ap_vld,
        conv_bias_buf_V_0_3_out => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_0_3_out,
        conv_bias_buf_V_0_3_out_ap_vld => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_0_3_out_ap_vld);

    grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442 : component tiled_conv_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_start,
        ap_done => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_done,
        ap_idle => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_idle,
        ap_ready => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_ready,
        m_axi_fm_AWVALID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWVALID,
        m_axi_fm_AWREADY => fm_AWREADY,
        m_axi_fm_AWADDR => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWADDR,
        m_axi_fm_AWID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWID,
        m_axi_fm_AWLEN => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWLEN,
        m_axi_fm_AWSIZE => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWSIZE,
        m_axi_fm_AWBURST => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWBURST,
        m_axi_fm_AWLOCK => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWLOCK,
        m_axi_fm_AWCACHE => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWCACHE,
        m_axi_fm_AWPROT => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWPROT,
        m_axi_fm_AWQOS => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWQOS,
        m_axi_fm_AWREGION => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWREGION,
        m_axi_fm_AWUSER => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWUSER,
        m_axi_fm_WVALID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WVALID,
        m_axi_fm_WREADY => fm_WREADY,
        m_axi_fm_WDATA => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WDATA,
        m_axi_fm_WSTRB => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WSTRB,
        m_axi_fm_WLAST => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WLAST,
        m_axi_fm_WID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WID,
        m_axi_fm_WUSER => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WUSER,
        m_axi_fm_ARVALID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARVALID,
        m_axi_fm_ARREADY => ap_const_logic_0,
        m_axi_fm_ARADDR => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARADDR,
        m_axi_fm_ARID => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARID,
        m_axi_fm_ARLEN => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARLEN,
        m_axi_fm_ARSIZE => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARSIZE,
        m_axi_fm_ARBURST => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARBURST,
        m_axi_fm_ARLOCK => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARLOCK,
        m_axi_fm_ARCACHE => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARCACHE,
        m_axi_fm_ARPROT => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARPROT,
        m_axi_fm_ARQOS => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARQOS,
        m_axi_fm_ARREGION => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARREGION,
        m_axi_fm_ARUSER => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_ARUSER,
        m_axi_fm_RVALID => ap_const_logic_0,
        m_axi_fm_RREADY => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_RREADY,
        m_axi_fm_RDATA => ap_const_lv16_0,
        m_axi_fm_RLAST => ap_const_logic_0,
        m_axi_fm_RID => ap_const_lv1_0,
        m_axi_fm_RFIFONUM => ap_const_lv10_0,
        m_axi_fm_RUSER => ap_const_lv1_0,
        m_axi_fm_RRESP => ap_const_lv2_0,
        m_axi_fm_BVALID => fm_BVALID,
        m_axi_fm_BREADY => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_BREADY,
        m_axi_fm_BRESP => ap_const_lv2_0,
        m_axi_fm_BID => ap_const_lv1_0,
        m_axi_fm_BUSER => ap_const_lv1_0,
        shl_ln1 => shl_ln1_reg_1682,
        output_feature_map => output_feature_map_read_reg_1380,
        p_mid2256 => p_mid2256_reg_1534,
        select_ln24_4 => select_ln24_4_reg_1523,
        shl_ln133_mid => shl_ln133_mid_reg_1687,
        zext_ln128_1 => shl_ln133_1_mid_reg_1692,
        zext_ln133_5 => add_ln133_10_reg_1697,
        conv_out_buf_V_address0 => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_conv_out_buf_V_address0,
        conv_out_buf_V_ce0 => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_conv_out_buf_V_ce0,
        conv_out_buf_V_q0 => conv_out_buf_V_q0,
        select_ln24_1 => select_ln24_1_reg_1508,
        select_ln24_2 => select_ln24_2_reg_1513);

    grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458 : component tiled_conv_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_start,
        ap_done => grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_done,
        ap_idle => grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_idle,
        ap_ready => grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_ready,
        zext_ln43 => out_fm_buf_V_load_reg_1722,
        select_ln40_4 => select_ln40_3_reg_1661,
        sub_ln1319 => sub_ln1319_reg_1717,
        conv_wt_buf_V_address0 => grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_wt_buf_V_address0,
        conv_wt_buf_V_ce0 => grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_wt_buf_V_ce0,
        conv_wt_buf_V_q0 => conv_wt_buf_V_q0,
        select_ln40 => select_ln40_reg_1645,
        conv_in_buf_V_address0 => grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_in_buf_V_address0,
        conv_in_buf_V_ce0 => grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_in_buf_V_ce0,
        conv_in_buf_V_q0 => conv_in_buf_V_q0,
        lhs_out => grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_lhs_out,
        lhs_out_ap_vld => grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_lhs_out_ap_vld);

    control_s_axi_U : component tiled_conv_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_feature_map => input_feature_map,
        layer_weights => layer_weights,
        layer_bias => layer_bias,
        output_feature_map => output_feature_map,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    fm_m_axi_U : component tiled_conv_fm_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 10,
        C_M_AXI_ID_WIDTH => C_M_AXI_FM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_FM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_FM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_FM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_FM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_FM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_FM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_FM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_FM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_FM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_FM_CACHE_VALUE,
        USER_DW => 16,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_fm_AWVALID,
        AWREADY => m_axi_fm_AWREADY,
        AWADDR => m_axi_fm_AWADDR,
        AWID => m_axi_fm_AWID,
        AWLEN => m_axi_fm_AWLEN,
        AWSIZE => m_axi_fm_AWSIZE,
        AWBURST => m_axi_fm_AWBURST,
        AWLOCK => m_axi_fm_AWLOCK,
        AWCACHE => m_axi_fm_AWCACHE,
        AWPROT => m_axi_fm_AWPROT,
        AWQOS => m_axi_fm_AWQOS,
        AWREGION => m_axi_fm_AWREGION,
        AWUSER => m_axi_fm_AWUSER,
        WVALID => m_axi_fm_WVALID,
        WREADY => m_axi_fm_WREADY,
        WDATA => m_axi_fm_WDATA,
        WSTRB => m_axi_fm_WSTRB,
        WLAST => m_axi_fm_WLAST,
        WID => m_axi_fm_WID,
        WUSER => m_axi_fm_WUSER,
        ARVALID => m_axi_fm_ARVALID,
        ARREADY => m_axi_fm_ARREADY,
        ARADDR => m_axi_fm_ARADDR,
        ARID => m_axi_fm_ARID,
        ARLEN => m_axi_fm_ARLEN,
        ARSIZE => m_axi_fm_ARSIZE,
        ARBURST => m_axi_fm_ARBURST,
        ARLOCK => m_axi_fm_ARLOCK,
        ARCACHE => m_axi_fm_ARCACHE,
        ARPROT => m_axi_fm_ARPROT,
        ARQOS => m_axi_fm_ARQOS,
        ARREGION => m_axi_fm_ARREGION,
        ARUSER => m_axi_fm_ARUSER,
        RVALID => m_axi_fm_RVALID,
        RREADY => m_axi_fm_RREADY,
        RDATA => m_axi_fm_RDATA,
        RLAST => m_axi_fm_RLAST,
        RID => m_axi_fm_RID,
        RUSER => m_axi_fm_RUSER,
        RRESP => m_axi_fm_RRESP,
        BVALID => m_axi_fm_BVALID,
        BREADY => m_axi_fm_BREADY,
        BRESP => m_axi_fm_BRESP,
        BID => m_axi_fm_BID,
        BUSER => m_axi_fm_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => fm_ARVALID,
        I_ARREADY => fm_ARREADY,
        I_ARADDR => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARADDR,
        I_ARLEN => grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARLEN,
        I_RVALID => fm_RVALID,
        I_RREADY => fm_RREADY,
        I_RDATA => fm_RDATA,
        I_RFIFONUM => fm_RFIFONUM,
        I_AWVALID => fm_AWVALID,
        I_AWREADY => fm_AWREADY,
        I_AWADDR => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWADDR,
        I_AWLEN => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWLEN,
        I_WVALID => fm_WVALID,
        I_WREADY => fm_WREADY,
        I_WDATA => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WDATA,
        I_WSTRB => grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WSTRB,
        I_BVALID => fm_BVALID,
        I_BREADY => fm_BREADY);

    wt_m_axi_U : component tiled_conv_wt_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 10,
        C_M_AXI_ID_WIDTH => C_M_AXI_WT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_WT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_WT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_WT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_WT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_WT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_WT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_WT_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_WT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_WT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_WT_CACHE_VALUE,
        USER_DW => 16,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_wt_AWVALID,
        AWREADY => m_axi_wt_AWREADY,
        AWADDR => m_axi_wt_AWADDR,
        AWID => m_axi_wt_AWID,
        AWLEN => m_axi_wt_AWLEN,
        AWSIZE => m_axi_wt_AWSIZE,
        AWBURST => m_axi_wt_AWBURST,
        AWLOCK => m_axi_wt_AWLOCK,
        AWCACHE => m_axi_wt_AWCACHE,
        AWPROT => m_axi_wt_AWPROT,
        AWQOS => m_axi_wt_AWQOS,
        AWREGION => m_axi_wt_AWREGION,
        AWUSER => m_axi_wt_AWUSER,
        WVALID => m_axi_wt_WVALID,
        WREADY => m_axi_wt_WREADY,
        WDATA => m_axi_wt_WDATA,
        WSTRB => m_axi_wt_WSTRB,
        WLAST => m_axi_wt_WLAST,
        WID => m_axi_wt_WID,
        WUSER => m_axi_wt_WUSER,
        ARVALID => m_axi_wt_ARVALID,
        ARREADY => m_axi_wt_ARREADY,
        ARADDR => m_axi_wt_ARADDR,
        ARID => m_axi_wt_ARID,
        ARLEN => m_axi_wt_ARLEN,
        ARSIZE => m_axi_wt_ARSIZE,
        ARBURST => m_axi_wt_ARBURST,
        ARLOCK => m_axi_wt_ARLOCK,
        ARCACHE => m_axi_wt_ARCACHE,
        ARPROT => m_axi_wt_ARPROT,
        ARQOS => m_axi_wt_ARQOS,
        ARREGION => m_axi_wt_ARREGION,
        ARUSER => m_axi_wt_ARUSER,
        RVALID => m_axi_wt_RVALID,
        RREADY => m_axi_wt_RREADY,
        RDATA => m_axi_wt_RDATA,
        RLAST => m_axi_wt_RLAST,
        RID => m_axi_wt_RID,
        RUSER => m_axi_wt_RUSER,
        RRESP => m_axi_wt_RRESP,
        BVALID => m_axi_wt_BVALID,
        BREADY => m_axi_wt_BREADY,
        BRESP => m_axi_wt_BRESP,
        BID => m_axi_wt_BID,
        BUSER => m_axi_wt_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => wt_ARVALID,
        I_ARREADY => wt_ARREADY,
        I_ARADDR => wt_ARADDR,
        I_ARLEN => wt_ARLEN,
        I_RVALID => wt_RVALID,
        I_RREADY => wt_RREADY,
        I_RDATA => wt_RDATA,
        I_RFIFONUM => wt_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => wt_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => wt_WREADY,
        I_WDATA => ap_const_lv16_0,
        I_WSTRB => ap_const_lv2_0,
        I_BVALID => wt_BVALID,
        I_BREADY => ap_const_logic_0);

    mul_5ns_6ns_9_1_1_U58 : component tiled_conv_mul_5ns_6ns_9_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 6,
        dout_WIDTH => 9)
    port map (
        din0 => p_mid2256_fu_804_p0,
        din1 => p_mid2256_fu_804_p1,
        dout => p_mid2256_fu_804_p2);

    mux_42_16_1_1_U59 : component tiled_conv_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_0_3_out,
        din1 => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_1_3_out,
        din2 => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_2_3_out,
        din3 => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_3_3_out,
        din4 => tmp_fu_918_p5,
        dout => tmp_fu_918_p6);

    mux_42_16_1_1_U60 : component tiled_conv_mux_42_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_0_3_out,
        din1 => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_1_3_out,
        din2 => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_2_3_out,
        din3 => grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_3_3_out,
        din4 => tmp_mid1_fu_984_p5,
        dout => tmp_mid1_fu_984_p6);

    mac_muladd_5ns_6ns_3s_11_4_1_U61 : component tiled_conv_mac_muladd_5ns_6ns_3s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 5,
        din1_WIDTH => 6,
        din2_WIDTH => 3,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1295_p0,
        din1 => grp_fu_1295_p1,
        din2 => grp_fu_1295_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1295_p3);

    mul_mul_5ns_11ns_16_4_1_U62 : component tiled_conv_mul_mul_5ns_11ns_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 5,
        din1_WIDTH => 11,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1304_p0,
        din1 => grp_fu_1304_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1304_p2);

    mac_muladd_3ns_5ns_5ns_8_4_1_U63 : component tiled_conv_mac_muladd_3ns_5ns_5ns_8_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 3,
        din1_WIDTH => 5,
        din2_WIDTH => 5,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1311_p0,
        din1 => grp_fu_1311_p1,
        din2 => grp_fu_1311_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1311_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_tiled_conv_Pipeline_BIAS_fu_427_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_tiled_conv_Pipeline_BIAS_fu_427_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                    grp_tiled_conv_Pipeline_BIAS_fu_427_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tiled_conv_Pipeline_BIAS_fu_427_ap_ready = ap_const_logic_1)) then 
                    grp_tiled_conv_Pipeline_BIAS_fu_427_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_ready = ap_const_logic_1)) then 
                    grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln38_fu_928_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_ready = ap_const_logic_1)) then 
                    grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_ready = ap_const_logic_1)) then 
                    grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                    grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_ready = ap_const_logic_1)) then 
                    grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_ready = ap_const_logic_1)) then 
                    grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    h_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                h_reg_370 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                h_reg_370 <= select_ln40_3_reg_1661;
            end if; 
        end if;
    end process;

    indvar_flatten147_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                indvar_flatten147_reg_348 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                indvar_flatten147_reg_348 <= select_ln40_4_reg_1677;
            end if; 
        end if;
    end process;

    indvar_flatten163_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                indvar_flatten163_reg_326 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                indvar_flatten163_reg_326 <= add_ln38_1_reg_1618;
            end if; 
        end if;
    end process;

    indvar_flatten232_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten232_fu_222 <= ap_const_lv11_0;
            elsif (((icmp_ln38_fu_928_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                indvar_flatten232_fu_222 <= select_ln46_1_fu_1151_p3;
            end if; 
        end if;
    end process;

    indvar_flatten311_fu_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten311_fu_230 <= ap_const_lv14_0;
            elsif (((icmp_ln38_fu_928_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                indvar_flatten311_fu_230 <= add_ln43_2_reg_1456;
            end if; 
        end if;
    end process;

    kernel_group_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                kernel_group_fu_198 <= ap_const_lv5_0;
            elsif (((icmp_ln38_fu_928_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                kernel_group_fu_198 <= add_ln52_fu_1140_p2;
            end if; 
        end if;
    end process;

    kernel_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                kernel_reg_337 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                kernel_reg_337 <= select_ln38_2_reg_1623;
            end if; 
        end if;
    end process;

    oh_reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                oh_reg_359 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                oh_reg_359 <= select_ln40_2_reg_1655;
            end if; 
        end if;
    end process;

    ow_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                ow_reg_392 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                ow_reg_392 <= add_ln41_1_reg_1672;
            end if; 
        end if;
    end process;

    ti_fu_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                ti_fu_226 <= ap_const_lv5_0;
            elsif (((icmp_ln38_fu_928_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                ti_fu_226 <= p_mid2256_v_v_reg_1471;
            end if; 
        end if;
    end process;

    tj_fu_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tj_fu_218 <= ap_const_lv6_0;
            elsif (((icmp_ln38_fu_928_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                tj_fu_218 <= select_ln46_reg_1529;
            end if; 
        end if;
    end process;

    w_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                w_reg_381 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                w_reg_381 <= add_ln41_reg_1667;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln38_fu_928_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    add_ln133_10_reg_1697(18 downto 3) <= add_ln133_10_fu_1133_p2(18 downto 3);
                conv_bias_buf_V_0_2_fu_202 <= grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_0_3_out;
                conv_bias_buf_V_1_2_fu_206 <= grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_1_3_out;
                conv_bias_buf_V_2_2_fu_210 <= grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_2_3_out;
                conv_bias_buf_V_3_2_fu_214 <= grp_tiled_conv_Pipeline_BIAS_fu_427_conv_bias_buf_V_3_3_out;
                    shl_ln133_1_mid_reg_1692(16 downto 8) <= shl_ln133_1_mid_fu_1116_p3(16 downto 8);
                    shl_ln133_mid_reg_1687(18 downto 10) <= shl_ln133_mid_fu_1108_p3(18 downto 10);
                    shl_ln1_reg_1682(5 downto 2) <= shl_ln1_fu_1100_p3(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                add_ln38_1_reg_1618 <= add_ln38_1_fu_934_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln38_fu_928_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                add_ln41_1_reg_1672 <= add_ln41_1_fu_1080_p2;
                add_ln41_reg_1667 <= add_ln41_fu_1074_p2;
                select_ln38_2_reg_1623 <= select_ln38_2_fu_968_p3;
                select_ln38_3_reg_1635 <= select_ln38_3_fu_994_p3;
                select_ln40_1_reg_1650 <= select_ln40_1_fu_1050_p3;
                select_ln40_2_reg_1655 <= select_ln40_2_fu_1058_p3;
                select_ln40_3_reg_1661 <= select_ln40_3_fu_1066_p3;
                select_ln40_4_reg_1677 <= select_ln40_4_fu_1092_p3;
                select_ln40_reg_1645 <= select_ln40_fu_1042_p3;
                trunc_ln38_reg_1640 <= trunc_ln38_fu_1002_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln43_2_reg_1456 <= add_ln43_2_fu_582_p2;
                    add_ln50_1_reg_1443(10 downto 3) <= add_ln50_1_fu_552_p2(10 downto 3);
                    shl_ln133_3_reg_1448(10 downto 3) <= shl_ln133_3_fu_568_p3(10 downto 3);
                    tmp_4_reg_1433(6 downto 2) <= tmp_4_fu_532_p3(6 downto 2);
                    tmp_6_reg_1438(8 downto 4) <= tmp_6_fu_540_p3(8 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln54_1_reg_1556 <= add_ln54_1_fu_832_p2;
                add_ln54_reg_1551 <= add_ln54_fu_824_p2;
                icmp_ln54_reg_1561 <= icmp_ln54_fu_837_p2;
                p_mid2256_reg_1534 <= p_mid2256_fu_804_p2;
                p_mid2258_reg_1541 <= grp_fu_1295_p3;
                    zext_ln46_reg_1546(10 downto 3) <= zext_ln46_fu_810_p1(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                empty_46_reg_1707 <= empty_46_fu_1230_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln43_fu_576_p2 = ap_const_lv1_0))) then
                icmp_ln46_reg_1461 <= icmp_ln46_fu_600_p2;
                icmp_ln52_mid2310_reg_1482 <= icmp_ln52_mid2310_fu_630_p2;
                p_mid2256_v_v_reg_1471 <= p_mid2256_v_v_fu_606_p3;
                select_ln24_reg_1491 <= select_ln24_fu_642_p3;
                trunc_ln54_reg_1502 <= trunc_ln54_fu_654_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                input_feature_map_read_reg_1395 <= input_feature_map;
                layer_bias_read_reg_1385 <= layer_bias;
                layer_weights_read_reg_1390 <= layer_weights;
                output_feature_map_read_reg_1380 <= output_feature_map;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                out_fm_buf_V_addr_reg_1712 <= p_cast406_fu_1236_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                out_fm_buf_V_load_reg_1722 <= conv_out_buf_V_q0;
                sub_ln1319_reg_1717 <= sub_ln1319_fu_1254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln54_fu_837_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                p_mid130_reg_1565 <= p_mid130_fu_842_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    select_ln24_1_reg_1508(6 downto 2) <= select_ln24_1_fu_730_p3(6 downto 2);
                    select_ln24_2_reg_1513(8 downto 4) <= select_ln24_2_fu_749_p3(8 downto 4);
                    select_ln24_3_reg_1518(10 downto 3) <= select_ln24_3_fu_762_p3(10 downto 3);
                    select_ln24_4_reg_1523(10 downto 3) <= select_ln24_4_fu_787_p3(10 downto 3);
                select_ln46_reg_1529 <= select_ln46_fu_794_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                trunc_ln2_reg_1580 <= add_ln54_reg_1551(63 downto 1);
                trunc_ln_reg_1570 <= add_ln54_1_reg_1556(63 downto 1);
            end if;
        end if;
    end process;
    tmp_4_reg_1433(1 downto 0) <= "00";
    tmp_6_reg_1438(3 downto 0) <= "0000";
    add_ln50_1_reg_1443(2 downto 0) <= "000";
    shl_ln133_3_reg_1448(2 downto 0) <= "000";
    select_ln24_1_reg_1508(1 downto 0) <= "00";
    select_ln24_2_reg_1513(3 downto 0) <= "0000";
    select_ln24_3_reg_1518(2 downto 0) <= "000";
    select_ln24_4_reg_1523(2 downto 0) <= "000";
    zext_ln46_reg_1546(2 downto 0) <= "000";
    zext_ln46_reg_1546(18 downto 11) <= "00000000";
    shl_ln1_reg_1682(1 downto 0) <= "00";
    shl_ln133_mid_reg_1687(9 downto 0) <= "0000000000";
    shl_ln133_1_mid_reg_1692(7 downto 0) <= "00000000";
    add_ln133_10_reg_1697(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state2, icmp_ln43_fu_576_p2, ap_CS_fsm_state5, icmp_ln54_fu_837_p2, ap_CS_fsm_state26, icmp_ln38_fu_928_p2, grp_tiled_conv_Pipeline_BIAS_fu_427_ap_done, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_done, grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_done, wt_ARREADY, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state34, ap_CS_fsm_state32, ap_block_state7_on_subcall_done, ap_block_state15_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln43_fu_576_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln54_fu_837_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if ((not(((wt_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_boolean_0 = ap_block_state15_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((wt_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((grp_tiled_conv_Pipeline_BIAS_fu_427_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((icmp_ln38_fu_928_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if (((grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state34 => 
                if (((grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln133_10_fu_1133_p2 <= std_logic_vector(unsigned(add_ln133_9_fu_1128_p2) + unsigned(zext_ln128_1_fu_1124_p1));
    add_ln133_1_fu_773_p2 <= std_logic_vector(unsigned(zext_ln133_3_fu_769_p1) + unsigned(zext_ln52_1_fu_745_p1));
    add_ln133_9_fu_1128_p2 <= std_logic_vector(unsigned(shl_ln133_mid_fu_1108_p3) + unsigned(zext_ln46_reg_1546));
    add_ln133_fu_562_p2 <= std_logic_vector(unsigned(zext_ln133_1_fu_558_p1) + unsigned(zext_ln52_fu_548_p1));
    add_ln1696_fu_1273_p2 <= std_logic_vector(unsigned(trunc_ln859_fu_1264_p1) + unsigned(trunc_ln38_reg_1640));
    add_ln38_1_fu_934_p2 <= std_logic_vector(unsigned(indvar_flatten163_reg_326) + unsigned(ap_const_lv11_1));
    add_ln38_fu_940_p2 <= std_logic_vector(unsigned(kernel_reg_337) + unsigned(ap_const_lv3_1));
    add_ln40_1_fu_1030_p2 <= std_logic_vector(unsigned(select_ln38_fu_952_p3) + unsigned(ap_const_lv5_1));
    add_ln40_2_fu_1086_p2 <= std_logic_vector(unsigned(indvar_flatten147_reg_348) + unsigned(ap_const_lv10_1));
    add_ln40_fu_1024_p2 <= std_logic_vector(unsigned(select_ln38_1_fu_960_p3) + unsigned(ap_const_lv6_2));
    add_ln41_1_fu_1080_p2 <= std_logic_vector(unsigned(select_ln40_1_fu_1050_p3) + unsigned(ap_const_lv5_1));
    add_ln41_fu_1074_p2 <= std_logic_vector(unsigned(select_ln40_fu_1042_p3) + unsigned(ap_const_lv6_2));
    add_ln43_2_fu_582_p2 <= std_logic_vector(unsigned(indvar_flatten311_fu_230) + unsigned(ap_const_lv14_1));
    add_ln43_fu_594_p2 <= std_logic_vector(unsigned(ti_fu_226) + unsigned(ap_const_lv5_1));
    add_ln46_2_fu_1145_p2 <= std_logic_vector(unsigned(indvar_flatten232_fu_222) + unsigned(ap_const_lv11_1));
    add_ln46_fu_688_p2 <= std_logic_vector(unsigned(tj_mid2247_fu_658_p3) + unsigned(ap_const_lv6_1));
    add_ln50_1_fu_552_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_528_p1) + unsigned(p_shl3_cast_fu_524_p1));
    add_ln50_fu_756_p2 <= std_logic_vector(unsigned(p_shl2_cast_mid1_fu_718_p1) + unsigned(p_shl3_cast_mid1_fu_714_p1));
    add_ln52_fu_1140_p2 <= std_logic_vector(unsigned(select_ln24_reg_1491) + unsigned(ap_const_lv5_1));
    add_ln54_1_fu_832_p2 <= std_logic_vector(unsigned(zext_ln54_1_fu_829_p1) + unsigned(layer_weights_read_reg_1390));
    add_ln54_fu_824_p2 <= std_logic_vector(unsigned(zext_ln54_fu_820_p1) + unsigned(layer_bias_read_reg_1385));
    add_ln859_fu_1268_p2 <= std_logic_vector(unsigned(grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_lhs_out) + unsigned(select_ln38_3_reg_1635));
    and_ln38_fu_1018_p2 <= (xor_ln38_fu_1006_p2 and icmp_ln41_fu_1012_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(ap_block_state15_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state15_on_subcall_done)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state16_blk_assign_proc : process(wt_ARREADY)
    begin
        if ((wt_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(grp_tiled_conv_Pipeline_BIAS_fu_427_ap_done)
    begin
        if ((grp_tiled_conv_Pipeline_BIAS_fu_427_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;

    ap_ST_fsm_state32_blk_assign_proc : process(grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_done)
    begin
        if ((grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state32_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state32_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state33_blk <= ap_const_logic_0;

    ap_ST_fsm_state34_blk_assign_proc : process(grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_done)
    begin
        if ((grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state34_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state34_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(wt_ARREADY, ap_block_state7_on_subcall_done)
    begin
        if (((wt_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7_on_subcall_done))) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state15_on_subcall_done_assign_proc : process(grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_done, grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_done)
    begin
                ap_block_state15_on_subcall_done <= ((grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_done = ap_const_logic_0) or (grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_done = ap_const_logic_0));
    end process;


    ap_block_state7_on_subcall_done_assign_proc : process(icmp_ln54_reg_1561, grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_done)
    begin
                ap_block_state7_on_subcall_done <= ((grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_done = ap_const_logic_0) and (icmp_ln54_reg_1561 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln43_fu_576_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln43_fu_576_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln43_fu_576_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln43_fu_576_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    conv_in_buf_V_address0_assign_proc : process(ap_CS_fsm_state7, icmp_ln54_reg_1561, grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_address0, grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_in_buf_V_address0, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            conv_in_buf_V_address0 <= grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_in_buf_V_address0;
        elsif (((icmp_ln54_reg_1561 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            conv_in_buf_V_address0 <= grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_address0;
        else 
            conv_in_buf_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    conv_in_buf_V_ce0_assign_proc : process(ap_CS_fsm_state7, icmp_ln54_reg_1561, grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_ce0, grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_in_buf_V_ce0, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            conv_in_buf_V_ce0 <= grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_in_buf_V_ce0;
        elsif (((icmp_ln54_reg_1561 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            conv_in_buf_V_ce0 <= grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_ce0;
        else 
            conv_in_buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_in_buf_V_we0_assign_proc : process(ap_CS_fsm_state7, icmp_ln54_reg_1561, grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_we0)
    begin
        if (((icmp_ln54_reg_1561 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            conv_in_buf_V_we0 <= grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_conv_in_buf_V_we0;
        else 
            conv_in_buf_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf_V_address0_assign_proc : process(ap_CS_fsm_state1, out_fm_buf_V_addr_reg_1712, ap_CS_fsm_state30, grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_address0, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_conv_out_buf_V_address0, ap_CS_fsm_state33, ap_CS_fsm_state15, ap_CS_fsm_state34, p_cast406_fu_1236_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv_out_buf_V_address0 <= out_fm_buf_V_addr_reg_1712;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv_out_buf_V_address0 <= p_cast406_fu_1236_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            conv_out_buf_V_address0 <= ap_const_lv64_0(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            conv_out_buf_V_address0 <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_conv_out_buf_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv_out_buf_V_address0 <= grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_address0;
        else 
            conv_out_buf_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv_out_buf_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state30, grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_ce0, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_conv_out_buf_V_ce0, ap_CS_fsm_state33, ap_CS_fsm_state15, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state30) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            conv_out_buf_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            conv_out_buf_V_ce0 <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_conv_out_buf_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv_out_buf_V_ce0 <= grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_ce0;
        else 
            conv_out_buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_buf_V_d0_assign_proc : process(ap_CS_fsm_state1, grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_d0, ap_CS_fsm_state33, ap_CS_fsm_state15, select_ln54_fu_1286_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv_out_buf_V_d0 <= select_ln54_fu_1286_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            conv_out_buf_V_d0 <= ap_const_lv15_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv_out_buf_V_d0 <= grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_d0;
        else 
            conv_out_buf_V_d0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_out_buf_V_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_we0, ap_CS_fsm_state33, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            conv_out_buf_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv_out_buf_V_we0 <= grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_conv_out_buf_V_we0;
        else 
            conv_out_buf_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_address0_assign_proc : process(grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_address0, grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_wt_buf_V_address0, ap_CS_fsm_state15, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            conv_wt_buf_V_address0 <= grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_wt_buf_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv_wt_buf_V_address0 <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_address0;
        else 
            conv_wt_buf_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_wt_buf_V_ce0_assign_proc : process(grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_ce0, grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_wt_buf_V_ce0, ap_CS_fsm_state15, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            conv_wt_buf_V_ce0 <= grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_conv_wt_buf_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv_wt_buf_V_ce0 <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_ce0;
        else 
            conv_wt_buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_wt_buf_V_we0_assign_proc : process(grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_we0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv_wt_buf_V_we0 <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_conv_wt_buf_V_we0;
        else 
            conv_wt_buf_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_44_fu_1199_p1 <= grp_fu_1311_p3(7 - 1 downto 0);
    empty_45_fu_1221_p2 <= std_logic_vector(unsigned(p_shl6_fu_1202_p3) + unsigned(p_shl7_fu_1217_p1));
    empty_46_fu_1230_p2 <= std_logic_vector(unsigned(empty_45_fu_1221_p2) + unsigned(select_ln40_1_cast_fu_1227_p1));
    empty_48_fu_694_p1 <= add_ln46_fu_688_p2(5 - 1 downto 0);
    empty_fu_504_p1 <= tj_fu_218(5 - 1 downto 0);

    fm_ARVALID_assign_proc : process(ap_CS_fsm_state7, icmp_ln54_reg_1561, grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARVALID, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln54_reg_1561 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            fm_ARVALID <= grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_ARVALID;
        else 
            fm_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    fm_AWVALID_assign_proc : process(ap_CS_fsm_state26, icmp_ln38_fu_928_p2, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWVALID, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or ((icmp_ln38_fu_928_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            fm_AWVALID <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_AWVALID;
        else 
            fm_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    fm_BREADY_assign_proc : process(ap_CS_fsm_state26, icmp_ln38_fu_928_p2, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_BREADY, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or ((icmp_ln38_fu_928_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            fm_BREADY <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_BREADY;
        else 
            fm_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    fm_RREADY_assign_proc : process(ap_CS_fsm_state7, icmp_ln54_reg_1561, grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_RREADY, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln54_reg_1561 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            fm_RREADY <= grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_m_axi_fm_RREADY;
        else 
            fm_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    fm_WVALID_assign_proc : process(ap_CS_fsm_state26, icmp_ln38_fu_928_p2, grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WVALID, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or ((icmp_ln38_fu_928_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            fm_WVALID <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_m_axi_fm_WVALID;
        else 
            fm_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1295_p0 <= grp_fu_1295_p00(5 - 1 downto 0);
    grp_fu_1295_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid2256_v_v_fu_606_p3),11));
    grp_fu_1295_p1 <= ap_const_lv11_2E(6 - 1 downto 0);
    grp_fu_1295_p2 <= ap_const_lv11_7FD(3 - 1 downto 0);
    grp_fu_1304_p0 <= grp_fu_1304_p00(5 - 1 downto 0);
    grp_fu_1304_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_fu_642_p3),16));
    grp_fu_1304_p1 <= ap_const_lv16_498(11 - 1 downto 0);
    grp_fu_1311_p0 <= grp_fu_1311_p00(3 - 1 downto 0);
    grp_fu_1311_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln38_2_fu_968_p3),8));
    grp_fu_1311_p1 <= ap_const_lv8_17(5 - 1 downto 0);
    grp_fu_1311_p2 <= grp_fu_1311_p20(5 - 1 downto 0);
    grp_fu_1311_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_2_reg_1655),8));
    grp_tiled_conv_Pipeline_BIAS_fu_427_ap_start <= grp_tiled_conv_Pipeline_BIAS_fu_427_ap_start_reg;
    grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_start <= grp_tiled_conv_Pipeline_INPUT_BUFFER_DEPTH_INPUT_BUFFER_HEIGHT_INPUT_BUFFER_WIDTH_fu_403_ap_start_reg;
    grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_start <= grp_tiled_conv_Pipeline_OUTPUT_BUFFER_DEPTH_OUTPUT_BUFFER_HEIGHT_OUTPUT_BUFFER_WIDTH_fu_442_ap_start_reg;
    grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_start <= grp_tiled_conv_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2_VITIS_LOOP_32_3_fu_422_ap_start_reg;
    grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_start <= grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_ap_start_reg;
    grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_start <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_ap_start_reg;
    icmp_ln38_fu_928_p2 <= "1" when (indvar_flatten163_reg_326 = ap_const_lv11_730) else "0";
    icmp_ln40_fu_946_p2 <= "1" when (indvar_flatten147_reg_348 = ap_const_lv10_1CC) else "0";
    icmp_ln41_fu_1012_p2 <= "1" when (ow_reg_392 = ap_const_lv5_14) else "0";
    icmp_ln43_fu_576_p2 <= "1" when (indvar_flatten311_fu_230 = ap_const_lv14_2000) else "0";
    icmp_ln46_fu_600_p2 <= "1" when (indvar_flatten232_fu_222 = ap_const_lv11_200) else "0";
    icmp_ln52_fu_624_p2 <= "1" when (kernel_group_fu_198 = ap_const_lv5_10) else "0";
    icmp_ln52_mid2310_fu_630_p2 <= (not_exitcond_flatten234_fu_618_p2 and icmp_ln52_fu_624_p2);
    icmp_ln54_fu_837_p2 <= "1" when (select_ln24_reg_1491 = ap_const_lv5_0) else "0";
    not_exitcond_flatten234_fu_618_p2 <= (icmp_ln46_fu_600_p2 xor ap_const_lv1_1);
    or_ln24_fu_636_p2 <= (icmp_ln52_mid2310_fu_630_p2 or icmp_ln46_fu_600_p2);
    or_ln40_fu_1036_p2 <= (icmp_ln40_fu_946_p2 or and_ln38_fu_1018_p2);
    p_cast30_mid2284_fu_664_p3 <= 
        ap_const_lv7_0 when (icmp_ln46_reg_1461(0) = '1') else 
        tmp_4_reg_1433;
    p_cast406_fu_1236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_46_reg_1707),64));
    p_mid130_fu_842_p2 <= "1" when (unsigned(grp_fu_1295_p3) > unsigned(ap_const_lv11_2DF)) else "0";
    p_mid2256_fu_804_p0 <= p_mid2256_fu_804_p00(5 - 1 downto 0);
    p_mid2256_fu_804_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid2256_v_v_reg_1471),9));
    p_mid2256_fu_804_p1 <= ap_const_lv9_17(6 - 1 downto 0);
    p_mid2256_v_v_fu_606_p3 <= 
        add_ln43_fu_594_p2 when (icmp_ln46_fu_600_p2(0) = '1') else 
        ti_fu_226;
    p_mid2_fu_737_p3 <= (empty_48_fu_694_p1 & ap_const_lv4_0);
    p_mid_fu_722_p3 <= (empty_48_fu_694_p1 & ap_const_lv2_0);
    p_shl2_cast_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_508_p3),11));
    p_shl2_cast_mid1_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_mid1_fu_698_p3),11));
    p_shl2_fu_508_p3 <= (empty_fu_504_p1 & ap_const_lv5_0);
    p_shl2_mid1_fu_698_p3 <= (empty_48_fu_694_p1 & ap_const_lv5_0);
    p_shl3_cast_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_516_p3),11));
    p_shl3_cast_mid1_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_mid1_fu_706_p3),11));
    p_shl3_fu_516_p3 <= (empty_fu_504_p1 & ap_const_lv3_0);
    p_shl3_mid1_fu_706_p3 <= (empty_48_fu_694_p1 & ap_const_lv3_0);
    p_shl6_fu_1202_p3 <= (empty_44_fu_1199_p1 & ap_const_lv4_0);
    p_shl7_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1210_p3),11));
    select_ln24_1_fu_730_p3 <= 
        p_mid_fu_722_p3 when (icmp_ln52_mid2310_reg_1482(0) = '1') else 
        p_cast30_mid2284_fu_664_p3;
    select_ln24_2_fu_749_p3 <= 
        p_mid2_fu_737_p3 when (icmp_ln52_mid2310_reg_1482(0) = '1') else 
        zext_ln52_mid2288_fu_670_p3;
    select_ln24_3_fu_762_p3 <= 
        add_ln50_fu_756_p2 when (icmp_ln52_mid2310_reg_1482(0) = '1') else 
        zext_ln50_1_mid2292_fu_676_p3;
    select_ln24_4_fu_787_p3 <= 
        shl_ln133_3_mid1_fu_779_p3 when (icmp_ln52_mid2310_reg_1482(0) = '1') else 
        zext_ln133_6_mid2308_fu_682_p3;
    select_ln24_fu_642_p3 <= 
        ap_const_lv5_0 when (or_ln24_fu_636_p2(0) = '1') else 
        kernel_group_fu_198;
    select_ln38_1_fu_960_p3 <= 
        ap_const_lv6_0 when (icmp_ln40_fu_946_p2(0) = '1') else 
        h_reg_370;
    select_ln38_2_fu_968_p3 <= 
        add_ln38_fu_940_p2 when (icmp_ln40_fu_946_p2(0) = '1') else 
        kernel_reg_337;
    select_ln38_3_fu_994_p3 <= 
        tmp_mid1_fu_984_p6 when (icmp_ln40_fu_946_p2(0) = '1') else 
        tmp_fu_918_p6;
    select_ln38_fu_952_p3 <= 
        ap_const_lv5_0 when (icmp_ln40_fu_946_p2(0) = '1') else 
        oh_reg_359;
    select_ln40_1_cast_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_1_reg_1650),11));
    select_ln40_1_fu_1050_p3 <= 
        ap_const_lv5_0 when (or_ln40_fu_1036_p2(0) = '1') else 
        ow_reg_392;
    select_ln40_2_fu_1058_p3 <= 
        add_ln40_1_fu_1030_p2 when (and_ln38_fu_1018_p2(0) = '1') else 
        select_ln38_fu_952_p3;
    select_ln40_3_fu_1066_p3 <= 
        add_ln40_fu_1024_p2 when (and_ln38_fu_1018_p2(0) = '1') else 
        select_ln38_1_fu_960_p3;
    select_ln40_4_fu_1092_p3 <= 
        ap_const_lv10_1 when (icmp_ln40_fu_946_p2(0) = '1') else 
        add_ln40_2_fu_1086_p2;
    select_ln40_fu_1042_p3 <= 
        ap_const_lv6_0 when (or_ln40_fu_1036_p2(0) = '1') else 
        w_reg_381;
    select_ln46_1_fu_1151_p3 <= 
        ap_const_lv11_1 when (icmp_ln46_reg_1461(0) = '1') else 
        add_ln46_2_fu_1145_p2;
    select_ln46_fu_794_p3 <= 
        add_ln46_fu_688_p2 when (icmp_ln52_mid2310_reg_1482(0) = '1') else 
        tj_mid2247_fu_658_p3;
    select_ln54_fu_1286_p3 <= 
        ap_const_lv15_0 when (tmp_2_fu_1278_p3(0) = '1') else 
        add_ln1696_fu_1273_p2;
        sext_ln76_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_847_p4),64));

        sext_ln94_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_reg_1580),64));

    shl_ln133_1_mid_fu_1116_p3 <= (p_mid2256_reg_1534 & ap_const_lv8_0);
    shl_ln133_3_fu_568_p3 <= (add_ln133_fu_562_p2 & ap_const_lv1_0);
    shl_ln133_3_mid1_fu_779_p3 <= (add_ln133_1_fu_773_p2 & ap_const_lv1_0);
    shl_ln133_mid_fu_1108_p3 <= (p_mid2256_reg_1534 & ap_const_lv10_0);
    shl_ln1_fu_1100_p3 <= (trunc_ln54_reg_1502 & ap_const_lv2_0);
    shl_ln_fu_813_p3 <= (trunc_ln54_reg_1502 & ap_const_lv3_0);
    sub_ln1319_fu_1254_p2 <= std_logic_vector(unsigned(zext_ln1319_4_fu_1250_p1) - unsigned(zext_ln1319_3_fu_1240_p1));
    tj_mid2247_fu_658_p3 <= 
        ap_const_lv6_0 when (icmp_ln46_reg_1461(0) = '1') else 
        tj_fu_218;
    tmp_1_fu_1210_p3 <= (grp_fu_1311_p3 & ap_const_lv2_0);
    tmp_2_fu_1278_p3 <= add_ln859_fu_1268_p2(15 downto 15);
    tmp_4_fu_532_p3 <= (empty_fu_504_p1 & ap_const_lv2_0);
    tmp_6_fu_540_p3 <= (empty_fu_504_p1 & ap_const_lv4_0);
    tmp_fu_918_p5 <= kernel_reg_337(2 - 1 downto 0);
    tmp_mid1_fu_984_p5 <= add_ln38_fu_940_p2(2 - 1 downto 0);
    tmp_s_fu_1243_p3 <= (select_ln38_2_reg_1623 & ap_const_lv2_0);
    trunc_ln38_fu_1002_p1 <= select_ln38_3_fu_994_p3(15 - 1 downto 0);
    trunc_ln54_fu_654_p1 <= select_ln24_fu_642_p3(4 - 1 downto 0);
    trunc_ln859_fu_1264_p1 <= grp_tiled_conv_Pipeline_VITIS_LOOP_43_7_VITIS_LOOP_44_8_VITIS_LOOP_45_9_fu_458_lhs_out(15 - 1 downto 0);
    trunc_ln_fu_847_p4 <= add_ln54_1_reg_1556(63 downto 1);

    wt_ARADDR_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state16, grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARADDR, grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARADDR, wt_ARREADY, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state23, ap_CS_fsm_state24, sext_ln76_fu_856_p1, sext_ln94_fu_876_p1, ap_block_state7_on_subcall_done)
    begin
        if (((wt_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            wt_ARADDR <= sext_ln94_fu_876_p1;
        elsif ((not(((wt_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            wt_ARADDR <= sext_ln76_fu_856_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            wt_ARADDR <= grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            wt_ARADDR <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARADDR;
        else 
            wt_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wt_ARLEN_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state16, grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARLEN, grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARLEN, wt_ARREADY, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_block_state7_on_subcall_done)
    begin
        if (((wt_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            wt_ARLEN <= ap_const_lv32_4;
        elsif ((not(((wt_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            wt_ARLEN <= ap_const_lv32_24C;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            wt_ARLEN <= grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            wt_ARLEN <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARLEN;
        else 
            wt_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wt_ARVALID_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state16, grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARVALID, grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARVALID, wt_ARREADY, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_block_state7_on_subcall_done)
    begin
        if ((((wt_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or (not(((wt_ARREADY = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7_on_subcall_done))) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            wt_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            wt_ARVALID <= grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            wt_ARVALID <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_ARVALID;
        else 
            wt_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    wt_RREADY_assign_proc : process(grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_RREADY, grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_RREADY, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            wt_RREADY <= grp_tiled_conv_Pipeline_BIAS_fu_427_m_axi_wt_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            wt_RREADY <= grp_tiled_conv_Pipeline_WEIGHT_KERNEL_NUM_WEIGHT_KERNEL_HEIGHT_WEIGHT_KERNEL_WIDTH_fu_414_m_axi_wt_RREADY;
        else 
            wt_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    wt_blk_n_AR_assign_proc : process(m_axi_wt_ARREADY, ap_CS_fsm_state7, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            wt_blk_n_AR <= m_axi_wt_ARREADY;
        else 
            wt_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

    xor_ln38_fu_1006_p2 <= (icmp_ln40_fu_946_p2 xor ap_const_lv1_1);
    zext_ln128_1_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln133_1_mid_fu_1116_p3),19));
    zext_ln1319_3_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln38_2_reg_1623),6));
    zext_ln1319_4_fu_1250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1243_p3),6));
    zext_ln133_1_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_532_p3),10));
    zext_ln133_3_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid_fu_722_p3),10));
    zext_ln133_6_mid2308_fu_682_p3 <= 
        ap_const_lv11_0 when (icmp_ln46_reg_1461(0) = '1') else 
        shl_ln133_3_reg_1448;
    zext_ln46_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_4_reg_1523),19));
    zext_ln50_1_mid2292_fu_676_p3 <= 
        ap_const_lv11_0 when (icmp_ln46_reg_1461(0) = '1') else 
        add_ln50_1_reg_1443;
    zext_ln52_1_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid2_fu_737_p3),10));
    zext_ln52_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_540_p3),10));
    zext_ln52_mid2288_fu_670_p3 <= 
        ap_const_lv9_0 when (icmp_ln46_reg_1461(0) = '1') else 
        tmp_6_reg_1438;
    zext_ln54_1_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1304_p2),64));
    zext_ln54_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_813_p3),64));
end behav;
